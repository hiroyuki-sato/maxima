       
#(#! 
(lisp::in-package :maxima)
#((lisp::complex maxima::flonum) maxima::flonum :element-type :displaced-to (lisp::complex maxima::flonum) 2147483647 (maxima::mlist) (maxima::$matrix) "V" "N" "V" "N" "V" "N" "V" "N" "DGEEV: invalid arguments: ~D" "DGEEV: failed to converge: ~D" (maxima::mlist) (maxima::mlist) lisp::list maxima::$%i (maxima::mlist) (maxima::$matrix) "DGESVD: invalid arguments: ~D" "DGESVD: failed to converge: ~D" (maxima::mlist) (maxima::mlist) "All columns of U" "No columns of U" "All columns of V^T" "No columns of V^T" "M" "O" "I" "F" conditions::case-failure :name conditions::ecase :datum :expected-type (lisp::member . #0=(maxima::$max maxima::$one_norm maxima::$inf_norm maxima::$frobenius)) :possibilities #0# "I" "M" "O" "I" "F" (lisp::member . #1=(maxima::$max maxima::$one_norm maxima::$inf_norm maxima::$frobenius)) #1# "I" lisp::second maxima::$imagpart maxima::$float maxima::complex-maxima-matrix-p lisp::make-array lisp::coerce maxima::$realpart maxima::maxima-matrix-dims maxima::lapack-lispify-matrix lapack::dgeev maxima::merror lapack::dgesvd maxima::lapack-maxify-matrix maxima::$max maxima::$one_norm maxima::$inf_norm maxima::$frobenius conditions::error lapack::dlange lapack::zlange maxima::add2 maxima::mul2 maxima::sub lisp::map lisp::nil (system::%init . #((system::setvv 76 (system::mc lisp::nil 8)) (system::mf (lisp::quote maxima::maxima-matrix-dims) 0) (system::mf (lisp::quote maxima::complex-maxima-matrix-p) 1) (system::putprop (lisp::quote maxima::lapack-lispify-matrix) "Convert a Maxima matrix A of dimension NROW and NCOL to Lisp matrix
  suitable for use with LAPACK" #2=(lisp::quote system::function-documentation)) (system::mf (lisp::quote maxima::lapack-lispify-matrix) 2) (system::putprop (lisp::quote maxima::lapack-maxify-matrix) "Convert an LAPACK matrix of dimensions NROW and NCOL into a Maxima
matrix (list of lists)" #2#) (system::mf (lisp::quote maxima::lapack-maxify-matrix) 3) (system::putprop (lisp::quote maxima::$dgeev) "
DGEEV computes for an N-by-N real nonsymmetric matrix A, the
eigenvalues and, optionally, the left and/or right eigenvectors.

The right eigenvector v(j) of A satisfies
                 A * v(j) = lambda(j) * v(j)
where lambda(j) is its eigenvalue.
The left eigenvector u(j) of A satisfies
              u(j)**H * A = lambda(j) * u(j)**H
where u(j)**H denotes the conjugate transpose of u(j).

The computed eigenvectors are normalized to have Euclidean norm
equal to 1 and largest component real.

A list of three items is returned.  The first item is a list of the
eigenvectors.  The second item is false or the matrix of right
eigenvectors.  The last itme is false or the matrix of left
eigenvectors." #2#) (system::mf (lisp::quote maxima::$dgeev) 4) (system::putprop (lisp::quote maxima::$dgesvd) "
DGESVD computes the singular value decomposition (SVD) of a real
M-by-N matrix A, optionally computing the left and/or right singular
vectors. The SVD is written

     A = U * SIGMA * transpose(V)

where SIGMA is an M-by-N matrix which is zero except for its
min(m,n) diagonal elements, U is an M-by-M orthogonal matrix, and
V is an N-by-N orthogonal matrix.  The diagonal elements of SIGMA
are the singular values of A; they are real and non-negative, and
are returned in descending order.  The first min(m,n) columns of
U and V are the left and right singular vectors of A.

Note that the routine returns V**T, not V.

A list of three items is returned.  The first is a list containing the
non-zero elements of SIGMA.  If jobu is not false, The second element
is the matrix U.  Otherwise it is false.  Similarly, the third element
is V**T or false, depending on jobvt." #2#) (system::mf (lisp::quote maxima::$dgesvd) 5) (system::putprop (lisp::quote maxima::$dlange) "
DLANGE returns the value

   DLANGE = ( max(abs(A(i,j))), NORM = '$max
            (
            ( norm1(A),         NORM = '$one_norm
            (
            ( normI(A),         NORM = '$inf_norm
            (
            ( normF(A),         NORM = '$frobenius

where  norm1  denotes the  one norm of a matrix (maximum column sum),
normI  denotes the  infinity norm  of a matrix  (maximum row sum) and
normF  denotes the  Frobenius norm of a matrix (square root of sum of
squares).  Note that  max(abs(A(i,j)))  is not a  matrix norm." #2#) (system::mf (lisp::quote maxima::$dlange) 6) (system::putprop (lisp::quote maxima::$zlange) "
DLANGE returns the value

   DLANGE = ( max(abs(A(i,j))), NORM = '$max
            (
            ( norm1(A),         NORM = '$one_norm
            (
            ( normI(A),         NORM = '$inf_norm
            (
            ( normF(A),         NORM = '$frobenius

where  norm1  denotes the  one norm of a matrix (maximum column sum),
normI  denotes the  infinity norm  of a matrix  (maximum row sum) and
normF  denotes the  Frobenius norm of a matrix (square root of sum of
squares).  Note that  max(abs(A(i,j)))  is not a  matrix norm." #2#) (system::mf (lisp::quote maxima::$zlange) 7))))
)
