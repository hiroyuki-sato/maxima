       
#(#! 
(lisp::in-package :lapack)#! 
(lisp::in-package "CL-USER")
#((system::%init . #((lisp::let* ((lapack::zero 0.0F0)) (lisp::declare (lisp::type (lisp::double-float 0.0F0 0.0F0) lapack::zero) (lisp::ignorable lapack::zero)) (lisp::defun lapack::dlassq (lapack::n lapack::x lapack::incx lapack::scale lapack::sumsq) (lisp::declare (lisp::type (lisp::double-float) lapack::sumsq lapack::scale) (lisp::type (lisp::array lisp::double-float (lisp::*)) lapack::x) (lisp::type (f2cl-lib::integer4) lapack::incx lapack::n)) (f2cl-lib::with-multi-array-data ((lapack::x lisp::double-float lapack::x-%data% lapack::x-%offset%)) (lisp::prog ((lapack::absxi 0.0F0) (lapack::ix 0)) (lisp::declare (lisp::type (lisp::double-float) lapack::absxi) (lisp::type (f2cl-lib::integer4) lapack::ix)) (lisp::cond ((lisp::> lapack::n 0) (f2cl-lib::fdo (lapack::ix 1 (f2cl-lib::int-add lapack::ix lapack::incx)) ((lisp::> lapack::ix (f2cl-lib::int-add 1 (f2cl-lib::int-mul (f2cl-lib::int-add lapack::n (f2cl-lib::int-sub 1)) lapack::incx))) lisp::nil) (lisp::tagbody (lisp::cond ((lisp::/= (f2cl-lib::fref lapack::x (lapack::ix) ((1 lisp::*))) lapack::zero) (lisp::setf lapack::absxi (lisp::abs (f2cl-lib::fref lapack::x-%data% (lapack::ix) ((1 lisp::*)) lapack::x-%offset%))) (lisp::cond ((lisp::< lapack::scale lapack::absxi) (lisp::setf lapack::sumsq (lisp::+ 1 (lisp::* lapack::sumsq (lisp::expt (lisp::/ lapack::scale lapack::absxi) 2)))) (lisp::setf lapack::scale lapack::absxi)) (lisp::t (lisp::setf lapack::sumsq (lisp::+ lapack::sumsq (lisp::expt (lisp::/ lapack::absxi lapack::scale) 2))))))) lapack::label10)))) (lisp::go lapack::end_label) lapack::end_label (lisp::return (lisp::values lisp::nil lisp::nil lisp::nil lapack::scale lapack::sumsq)))))))))
)
