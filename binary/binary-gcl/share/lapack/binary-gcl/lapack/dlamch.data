       
#(#! 
(lisp::in-package :lapack)#! 
(lisp::in-package "CL-USER")
#((system::%init . #((lisp::let* ((lapack::one 1.0F0) (lapack::zero 0.0F0)) (lisp::declare (lisp::type (lisp::double-float 1.0F0 1.0F0) lapack::one) (lisp::type (lisp::double-float 0.0F0 0.0F0) lapack::zero) (lisp::ignorable lapack::one lapack::zero)) (lisp::let ((lapack::first$ lisp::nil) (lapack::prec 0.0F0) (lapack::rmax 0.0F0) (lapack::emax 0.0F0) (lapack::rmin 0.0F0) (lapack::emin 0.0F0) (lapack::rnd 0.0F0) (lapack::t$ 0.0F0) (lapack::base 0.0F0) (lapack::sfmin 0.0F0) (lapack::eps 0.0F0)) (lisp::declare (lisp::type f2cl-lib::logical lapack::first$) (lisp::type (lisp::double-float) lapack::prec lapack::rmax lapack::emax lapack::rmin lapack::emin lapack::rnd lapack::t$ lapack::base lapack::sfmin lapack::eps)) (lisp::setq lapack::first$ f2cl-lib::%true%) (lisp::defun lapack::dlamch (lapack::cmach) (lisp::declare (lisp::type (lisp::simple-array lisp::character (lisp::*)) lapack::cmach)) (f2cl-lib::with-multi-array-data ((lapack::cmach lisp::character lapack::cmach-%data% lapack::cmach-%offset%)) (lisp::prog ((lapack::rmach 0.0F0) (lapack::small 0.0F0) (lapack::beta 0) (lapack::imax 0) (lapack::imin 0) (lapack::it 0) (lapack::lrnd lisp::nil) (lapack::dlamch 0.0F0)) (lisp::declare (lisp::type (f2cl-lib::integer4) lapack::beta lapack::imax lapack::imin lapack::it) (lisp::type f2cl-lib::logical lapack::lrnd) (lisp::type (lisp::double-float) lapack::rmach lapack::small lapack::dlamch)) (lisp::cond (lapack::first$ (lisp::setf lapack::first$ f2cl-lib::%false%) (lisp::multiple-value-bind (lapack::var-0 lapack::var-1 lapack::var-2 lapack::var-3 lapack::var-4 lapack::var-5 lapack::var-6 lapack::var-7) (lapack::dlamc2 lapack::beta lapack::it lapack::lrnd lapack::eps lapack::imin lapack::rmin lapack::imax lapack::rmax) (lisp::declare (lisp::ignore)) (lisp::setf lapack::beta lapack::var-0) (lisp::setf lapack::it lapack::var-1) (lisp::setf lapack::lrnd lapack::var-2) (lisp::setf lapack::eps lapack::var-3) (lisp::setf lapack::imin lapack::var-4) (lisp::setf lapack::rmin lapack::var-5) (lisp::setf lapack::imax lapack::var-6) (lisp::setf lapack::rmax lapack::var-7)) (lisp::setf lapack::base (lisp::coerce (lisp::the f2cl-lib::integer4 lapack::beta) (lisp::quote lisp::double-float))) (lisp::setf lapack::t$ (lisp::coerce (lisp::the f2cl-lib::integer4 lapack::it) (lisp::quote lisp::double-float))) (lisp::cond (lapack::lrnd (lisp::setf lapack::rnd lapack::one) (lisp::setf lapack::eps (lisp::/ (lisp::expt lapack::base (f2cl-lib::int-sub 1 lapack::it)) 2))) (lisp::t (lisp::setf lapack::rnd lapack::zero) (lisp::setf lapack::eps (lisp::expt lapack::base (f2cl-lib::int-sub 1 lapack::it))))) (lisp::setf lapack::prec (lisp::* lapack::eps lapack::base)) (lisp::setf lapack::emin (lisp::coerce (lisp::the f2cl-lib::integer4 lapack::imin) (lisp::quote lisp::double-float))) (lisp::setf lapack::emax (lisp::coerce (lisp::the f2cl-lib::integer4 lapack::imax) (lisp::quote lisp::double-float))) (lisp::setf lapack::sfmin lapack::rmin) (lisp::setf lapack::small (lisp::/ lapack::one lapack::rmax)) (lisp::cond ((lisp::>= lapack::small lapack::sfmin) (lisp::setf lapack::sfmin (lisp::* lapack::small (lisp::+ lapack::one lapack::eps))))))) (lisp::cond ((blas::lsame lapack::cmach "E") (lisp::setf lapack::rmach lapack::eps)) ((blas::lsame lapack::cmach "S") (lisp::setf lapack::rmach lapack::sfmin)) ((blas::lsame lapack::cmach "B") (lisp::setf lapack::rmach lapack::base)) ((blas::lsame lapack::cmach "P") (lisp::setf lapack::rmach lapack::prec)) ((blas::lsame lapack::cmach "N") (lisp::setf lapack::rmach lapack::t$)) ((blas::lsame lapack::cmach "R") (lisp::setf lapack::rmach lapack::rnd)) ((blas::lsame lapack::cmach "M") (lisp::setf lapack::rmach lapack::emin)) ((blas::lsame lapack::cmach "U") (lisp::setf lapack::rmach lapack::rmin)) ((blas::lsame lapack::cmach "L") (lisp::setf lapack::rmach lapack::emax)) ((blas::lsame lapack::cmach "O") (lisp::setf lapack::rmach lapack::rmax))) (lisp::setf lapack::dlamch lapack::rmach) (lisp::go lapack::end_label) lapack::end_label (lisp::return (lisp::values lapack::dlamch lisp::nil))))))))))
)
