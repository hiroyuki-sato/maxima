       
#(#! 
(lisp::in-package :lapack)#! 
(lisp::in-package "CL-USER")
#((system::%init . #((lisp::let* ((lapack::one 1.0F0)) (lisp::declare (lisp::type (lisp::double-float 1.0F0 1.0F0) lapack::one) (lisp::ignorable lapack::one)) (lisp::defun lapack::dgebak (lapack::job lapack::side lapack::n lapack::ilo lapack::ihi lapack::scale lapack::m lapack::v lapack::ldv lapack::info) (lisp::declare (lisp::type (lisp::array lisp::double-float (lisp::*)) lapack::v lapack::scale) (lisp::type (f2cl-lib::integer4) lapack::info lapack::ldv lapack::m lapack::ihi lapack::ilo lapack::n) (lisp::type (lisp::simple-array lisp::character (lisp::*)) lapack::side lapack::job)) (f2cl-lib::with-multi-array-data ((lapack::job lisp::character lapack::job-%data% lapack::job-%offset%) (lapack::side lisp::character lapack::side-%data% lapack::side-%offset%) (lapack::scale lisp::double-float lapack::scale-%data% lapack::scale-%offset%) (lapack::v lisp::double-float lapack::v-%data% lapack::v-%offset%)) (lisp::prog ((lapack::s 0.0F0) (lapack::i 0) (lapack::ii 0) (lapack::k 0) (lapack::leftv lisp::nil) (lapack::rightv lisp::nil)) (lisp::declare (lisp::type (lisp::double-float) lapack::s) (lisp::type (f2cl-lib::integer4) lapack::i lapack::ii lapack::k) (lisp::type f2cl-lib::logical lapack::leftv lapack::rightv)) (lisp::setf lapack::rightv (blas::lsame lapack::side "R")) (lisp::setf lapack::leftv (blas::lsame lapack::side "L")) (lisp::setf lapack::info 0) (lisp::cond ((lisp::and (lisp::not (blas::lsame lapack::job "N")) (lisp::not (blas::lsame lapack::job "P")) (lisp::not (blas::lsame lapack::job "S")) (lisp::not (blas::lsame lapack::job "B"))) (lisp::setf lapack::info -1)) ((lisp::and (lisp::not lapack::rightv) (lisp::not lapack::leftv)) (lisp::setf lapack::info -2)) ((lisp::< lapack::n 0) (lisp::setf lapack::info -3)) ((lisp::or (lisp::< lapack::ilo 1) (lisp::> lapack::ilo (lisp::max (lisp::the f2cl-lib::integer4 1) (lisp::the f2cl-lib::integer4 lapack::n)))) (lisp::setf lapack::info -4)) ((lisp::or (lisp::< lapack::ihi (lisp::min (lisp::the f2cl-lib::integer4 lapack::ilo) (lisp::the f2cl-lib::integer4 lapack::n))) (lisp::> lapack::ihi lapack::n)) (lisp::setf lapack::info -5)) ((lisp::< lapack::m 0) (lisp::setf lapack::info -7)) ((lisp::< lapack::ldv (lisp::max (lisp::the f2cl-lib::integer4 1) (lisp::the f2cl-lib::integer4 lapack::n))) (lisp::setf lapack::info -9))) (lisp::cond ((lisp::/= lapack::info 0) (blas::xerbla "DGEBAK" (f2cl-lib::int-sub lapack::info)) (lisp::go lapack::end_label))) (lisp::if (lisp::= lapack::n 0) (lisp::go lapack::end_label)) (lisp::if (lisp::= lapack::m 0) (lisp::go lapack::end_label)) (lisp::if (blas::lsame lapack::job "N") (lisp::go lapack::end_label)) (lisp::if (lisp::= lapack::ilo lapack::ihi) (lisp::go lapack::label30)) (lisp::cond ((lisp::or (blas::lsame lapack::job "S") (blas::lsame lapack::job "B")) (lisp::cond (lapack::rightv (f2cl-lib::fdo (lapack::i lapack::ilo (f2cl-lib::int-add lapack::i 1)) ((lisp::> lapack::i lapack::ihi) lisp::nil) (lisp::tagbody (lisp::setf lapack::s (f2cl-lib::fref lapack::scale-%data% (lapack::i) ((1 lisp::*)) lapack::scale-%offset%)) (blas::dscal lapack::m lapack::s (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::i 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv) lapack::label10)))) (lisp::cond (lapack::leftv (f2cl-lib::fdo (lapack::i lapack::ilo (f2cl-lib::int-add lapack::i 1)) ((lisp::> lapack::i lapack::ihi) lisp::nil) (lisp::tagbody (lisp::setf lapack::s (lisp::/ lapack::one (f2cl-lib::fref lapack::scale-%data% (lapack::i) ((1 lisp::*)) lapack::scale-%offset%))) (blas::dscal lapack::m lapack::s (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::i 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv) lapack::label20)))))) lapack::label30 (lisp::cond ((lisp::or (blas::lsame lapack::job "P") (blas::lsame lapack::job "B")) (lisp::cond (lapack::rightv (f2cl-lib::fdo (lapack::ii 1 (f2cl-lib::int-add lapack::ii 1)) ((lisp::> lapack::ii lapack::n) lisp::nil) (lisp::tagbody (lisp::setf lapack::i lapack::ii) (lisp::if (lisp::and (lisp::>= lapack::i lapack::ilo) (lisp::<= lapack::i lapack::ihi)) (lisp::go lapack::label40)) (lisp::if (lisp::< lapack::i lapack::ilo) (lisp::setf lapack::i (f2cl-lib::int-sub lapack::ilo lapack::ii))) (lisp::setf lapack::k (f2cl-lib::int (f2cl-lib::fref lapack::scale-%data% (lapack::i) ((1 lisp::*)) lapack::scale-%offset%))) (lisp::if (lisp::= lapack::k lapack::i) (lisp::go lapack::label40)) (blas::dswap lapack::m (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::i 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::k 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv) lapack::label40)))) (lisp::cond (lapack::leftv (f2cl-lib::fdo (lapack::ii 1 (f2cl-lib::int-add lapack::ii 1)) ((lisp::> lapack::ii lapack::n) lisp::nil) (lisp::tagbody (lisp::setf lapack::i lapack::ii) (lisp::if (lisp::and (lisp::>= lapack::i lapack::ilo) (lisp::<= lapack::i lapack::ihi)) (lisp::go lapack::label50)) (lisp::if (lisp::< lapack::i lapack::ilo) (lisp::setf lapack::i (f2cl-lib::int-sub lapack::ilo lapack::ii))) (lisp::setf lapack::k (f2cl-lib::int (f2cl-lib::fref lapack::scale-%data% (lapack::i) ((1 lisp::*)) lapack::scale-%offset%))) (lisp::if (lisp::= lapack::k lapack::i) (lisp::go lapack::label50)) (blas::dswap lapack::m (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::i 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv (f2cl-lib::array-slice lapack::v lisp::double-float (lapack::k 1) ((1 lapack::ldv) (1 lisp::*))) lapack::ldv) lapack::label50)))))) (lisp::go lapack::end_label) lapack::end_label (lisp::return (lisp::values lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lapack::info)))))))))
)
