       
#(#! 
(lisp::in-package :lapack)#! 
(lisp::in-package "CL-USER")
#((system::%init . #((lisp::let* ((lapack::one 1.0F0) (lapack::zero 0.0F0)) (lisp::declare (lisp::type (lisp::double-float 1.0F0 1.0F0) lapack::one) (lisp::type (lisp::double-float 0.0F0 0.0F0) lapack::zero) (lisp::ignorable lapack::one lapack::zero)) (lisp::defun lapack::dlarf (lapack::side lapack::m lapack::n lapack::v lapack::incv lapack::tau lapack::c lapack::ldc lapack::work) (lisp::declare (lisp::type (lisp::double-float) lapack::tau) (lisp::type (lisp::array lisp::double-float (lisp::*)) lapack::work lapack::c lapack::v) (lisp::type (f2cl-lib::integer4) lapack::ldc lapack::incv lapack::n lapack::m) (lisp::type (lisp::simple-array lisp::character (lisp::*)) lapack::side)) (f2cl-lib::with-multi-array-data ((lapack::side lisp::character lapack::side-%data% lapack::side-%offset%) (lapack::v lisp::double-float lapack::v-%data% lapack::v-%offset%) (lapack::c lisp::double-float lapack::c-%data% lapack::c-%offset%) (lapack::work lisp::double-float lapack::work-%data% lapack::work-%offset%)) (lisp::prog lisp::nil (lisp::declare) (lisp::cond ((blas::lsame lapack::side "L") (lisp::cond ((lisp::/= lapack::tau lapack::zero) (blas::dgemv "Transpose" lapack::m lapack::n lapack::one lapack::c lapack::ldc lapack::v lapack::incv lapack::zero lapack::work 1) (blas::dger lapack::m lapack::n (lisp::- lapack::tau) lapack::v lapack::incv lapack::work 1 lapack::c lapack::ldc)))) (lisp::t (lisp::cond ((lisp::/= lapack::tau lapack::zero) (blas::dgemv "No transpose" lapack::m lapack::n lapack::one lapack::c lapack::ldc lapack::v lapack::incv lapack::zero lapack::work 1) (blas::dger lapack::m lapack::n (lisp::- lapack::tau) lapack::work 1 lapack::v lapack::incv lapack::c lapack::ldc))))) (lisp::go lapack::end_label) lapack::end_label (lisp::return (lisp::values lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil)))))))))
)
