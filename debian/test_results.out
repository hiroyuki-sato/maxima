
Maxima 5.46.0 https://maxima.sourceforge.io
using Lisp GNU Common Lisp (GCL) GCL 2.6.13 git tag Version_2_6_13
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
The function bug_report() provides bug reporting information.
(%i1) run_testsuite()
Testsuite run for GNU Common Lisp (GCL) GCL 2.6.13 git tag Version_2_6_13:
Running tests in rtest_rules: 210/210 tests passed
Running tests in rtestnset: 619/619 tests passed
Running tests in rtest1: 195/195 tests passed (not counting 3 expected errors)
Running tests in rtest1a: 34/34 tests passed (not counting 1 expected errors)
Running tests in rtest2: 297/297 tests passed (not counting 2 expected errors)
Running tests in rtest4: 94/94 tests passed
Running tests in rtest5: 83/83 tests passed
Running tests in rtest6: 45/45 tests passed
Running tests in rtest6a: 73/73 tests passed
Running tests in rtest6b: 36/36 tests passed
Running tests in rtest7: 88/88 tests passed
Running tests in rtest9: 89/89 tests passed
Running tests in rtest9a: 76/76 tests passed
Running tests in rtest10: 72/72 tests passed (not counting 2 expected errors)
Running tests in rtest11: 
********************** Problem 158 ***************
Input:
map(parse_timedate, [1900-01-02 00:00:00+24:00, 1900-01-01 23:00:00+23:00, 
1900-01-01 22:00:00+22:00, 1900-01-01 21:00:00+21:00, 
1900-01-01 20:00:00+20:00, 1900-01-01 19:00:00+19:00, 
1900-01-01 18:00:00+18:00, 1900-01-01 17:00:00+17:00, 
1900-01-01 16:00:00+16:00, 1900-01-01 15:00:00+15:00, 
1900-01-01 14:00:00+14:00, 1900-01-01 13:00:00+13:00, 
1900-01-01 12:00:00+12:00, 1900-01-01 11:00:00+11:00, 
1900-01-01 10:00:00+10:00, 1900-01-01 09:00:00+09:00, 
1900-01-01 08:00:00+08:00, 1900-01-01 07:00:00+07:00, 
1900-01-01 06:00:00+06:00, 1900-01-01 05:00:00+05:00, 
1900-01-01 04:00:00+04:00, 1900-01-01 03:00:00+03:00, 
1900-01-01 02:00:00+02:00, 1900-01-01 01:00:00+01:00, 
1900-01-01 00:00:00+00:00, 1900-01-01Z, 1900-01-01 00:00:00-00:00, 
1899-12-31 23:00:00-01:00, 1899-12-31 22:00:00-02:00, 
1899-12-31 21:00:00-03:00, 1899-12-31 20:00:00-04:00, 
1899-12-31 19:00:00-05:00, 1899-12-31 18:00:00-06:00, 
1899-12-31 17:00:00-07:00, 1899-12-31 16:00:00-08:00, 
1899-12-31 15:00:00-09:00, 1899-12-31 14:00:00-10:00, 
1899-12-31 13:00:00-11:00, 1899-12-31 12:00:00-12:00, 
1899-12-31 11:00:00-13:00, 1899-12-31 10:00:00-14:00, 
1899-12-31 09:00:00-15:00, 1899-12-31 08:00:00-16:00, 
1899-12-31 07:00:00-17:00, 1899-12-31 06:00:00-18:00, 
1899-12-31 05:00:00-19:00, 1899-12-31 04:00:00-20:00, 
1899-12-31 03:00:00-21:00, 1899-12-31 02:00:00-22:00, 
1899-12-31 01:00:00-23:00, 1899-12-31 00:00:00-24:00])


Result:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

... Which was correct, but was expected to be wrong due to a known bug in
 Maxima or GNU Common Lisp (GCL).

********************** Problem 174 ***************
Input:
map(lambda([l], apply(encode_time, l)), 
[[1900, 1, 2, 0, 0, 0, + 24], [1900, 1, 1, 23, 0, 0, + 23], 
[1900, 1, 1, 22, 0, 0, + 22], [1900, 1, 1, 21, 0, 0, + 21], 
[1900, 1, 1, 20, 0, 0, + 20], [1900, 1, 1, 19, 0, 0, + 19], 
[1900, 1, 1, 18, 0, 0, + 18], [1900, 1, 1, 17, 0, 0, + 17], 
[1900, 1, 1, 16, 0, 0, + 16], [1900, 1, 1, 15, 0, 0, + 15], 
[1900, 1, 1, 14, 0, 0, + 14], [1900, 1, 1, 13, 0, 0, + 13], 
[1900, 1, 1, 12, 0, 0, + 12], [1900, 1, 1, 11, 0, 0, + 11], 
[1900, 1, 1, 10, 0, 0, + 10], [1900, 1, 1, 9, 0, 0, + 9], 
[1900, 1, 1, 8, 0, 0, + 8], [1900, 1, 1, 7, 0, 0, + 7], 
[1900, 1, 1, 6, 0, 0, + 6], [1900, 1, 1, 5, 0, 0, + 5], 
[1900, 1, 1, 4, 0, 0, + 4], [1900, 1, 1, 3, 0, 0, + 3], 
[1900, 1, 1, 2, 0, 0, + 2], [1900, 1, 1, 1, 0, 0, + 1], 
[1900, 1, 1, 0, 0, 0, + 0], [1900, 1, 1, 0, 0, 0, - 0], 
[1899, 12, 31, 23, 0, 0, - 1], [1899, 12, 31, 22, 0, 0, - 2], 
[1899, 12, 31, 21, 0, 0, - 3], [1899, 12, 31, 20, 0, 0, - 4], 
[1899, 12, 31, 19, 0, 0, - 5], [1899, 12, 31, 18, 0, 0, - 6], 
[1899, 12, 31, 17, 0, 0, - 7], [1899, 12, 31, 16, 0, 0, - 8], 
[1899, 12, 31, 15, 0, 0, - 9], [1899, 12, 31, 14, 0, 0, - 10], 
[1899, 12, 31, 13, 0, 0, - 11], [1899, 12, 31, 12, 0, 0, - 12], 
[1899, 12, 31, 11, 0, 0, - 13], [1899, 12, 31, 10, 0, 0, - 14], 
[1899, 12, 31, 9, 0, 0, - 15], [1899, 12, 31, 8, 0, 0, - 16], 
[1899, 12, 31, 7, 0, 0, - 17], [1899, 12, 31, 6, 0, 0, - 18], 
[1899, 12, 31, 5, 0, 0, - 19], [1899, 12, 31, 4, 0, 0, - 20], 
[1899, 12, 31, 3, 0, 0, - 21], [1899, 12, 31, 2, 0, 0, - 22], 
[1899, 12, 31, 1, 0, 0, - 23], [1899, 12, 31, 0, 0, 0, - 24]])


Result:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

... Which was correct, but was expected to be wrong due to a known bug in
 Maxima or GNU Common Lisp (GCL).

********************** Problem 175 ***************
Input:
map(lambda([tz], decode_time(0, tz)), append(makelist(24 - h, h, 0, 24), 
                                                      makelist(- h, h, 0, 24)))


Result:
[[1900, 1, 2, 0, 0, 0, 24], [1900, 1, 1, 23, 0, 0, 23], 
[1900, 1, 1, 22, 0, 0, 22], [1900, 1, 1, 21, 0, 0, 21], 
[1900, 1, 1, 20, 0, 0, 20], [1900, 1, 1, 19, 0, 0, 19], 
[1900, 1, 1, 18, 0, 0, 18], [1900, 1, 1, 17, 0, 0, 17], 
[1900, 1, 1, 16, 0, 0, 16], [1900, 1, 1, 15, 0, 0, 15], 
[1900, 1, 1, 14, 0, 0, 14], [1900, 1, 1, 13, 0, 0, 13], 
[1900, 1, 1, 12, 0, 0, 12], [1900, 1, 1, 11, 0, 0, 11], 
[1900, 1, 1, 10, 0, 0, 10], [1900, 1, 1, 9, 0, 0, 9], 
[1900, 1, 1, 8, 0, 0, 8], [1900, 1, 1, 7, 0, 0, 7], [1900, 1, 1, 6, 0, 0, 6], 
[1900, 1, 1, 5, 0, 0, 5], [1900, 1, 1, 4, 0, 0, 4], [1900, 1, 1, 3, 0, 0, 3], 
[1900, 1, 1, 2, 0, 0, 2], [1900, 1, 1, 1, 0, 0, 1], [1900, 1, 1, 0, 0, 0, 0], 
[1900, 1, 1, 0, 0, 0, 0], [1899, 12, 31, 23, 0, 0, - 1], 
[1899, 12, 31, 22, 0, 0, - 2], [1899, 12, 31, 21, 0, 0, - 3], 
[1899, 12, 31, 20, 0, 0, - 4], [1899, 12, 31, 19, 0, 0, - 5], 
[1899, 12, 31, 18, 0, 0, - 6], [1899, 12, 31, 17, 0, 0, - 7], 
[1899, 12, 31, 16, 0, 0, - 8], [1899, 12, 31, 15, 0, 0, - 9], 
[1899, 12, 31, 14, 0, 0, - 10], [1899, 12, 31, 13, 0, 0, - 11], 
[1899, 12, 31, 12, 0, 0, - 12], [1899, 12, 31, 11, 0, 0, - 13], 
[1899, 12, 31, 10, 0, 0, - 14], [1899, 12, 31, 9, 0, 0, - 15], 
[1899, 12, 31, 8, 0, 0, - 16], [1899, 12, 31, 7, 0, 0, - 17], 
[1899, 12, 31, 6, 0, 0, - 18], [1899, 12, 31, 5, 0, 0, - 19], 
[1899, 12, 31, 4, 0, 0, - 20], [1899, 12, 31, 3, 0, 0, - 21], 
[1899, 12, 31, 2, 0, 0, - 22], [1899, 12, 31, 1, 0, 0, - 23], 
[1899, 12, 31, 0, 0, 0, - 24]]

... Which was correct, but was expected to be wrong due to a known bug in
 Maxima or GNU Common Lisp (GCL).
255/255 tests passed (not counting 3 expected errors)

The following 3 problems passed but were expected to fail: (158 174
                                                            175)
Running tests in rtest13: 23/23 tests passed
Running tests in rtest13s: 17/17 tests passed
Running tests in rtest14: 418/418 tests passed
Running tests in rtest15: 390/390 tests passed
Running tests in rtest16: 
rat: replaced -406810.0 by -406810/1 = -406810.0

rat: replaced -492380.0 by -492380/1 = -492380.0

rat: replaced 0.07050000000000001 by 141/2000 = 0.0705
                                    t 492380           t 85570
Refusing to factor polynomial 47 (%e )       - 4702 (%e )      + 4655
                            because its degree exceeds factor_max_degree (1000)
722/722 tests passed (not counting 2 expected errors)
Running tests in rtestode: 96/96 tests passed
Running tests in rtestode_zp: 30/30 tests passed
Running tests in rtest3: 228/228 tests passed (not counting 1 expected errors)
Running tests in rtest8: 189/189 tests passed
Running tests in rtest12: 118/118 tests passed
Running tests in rexamples: 137/137 tests passed
Running tests in rtesthyp: 417/417 tests passed (not counting 6 expected errors)
Running tests in rtest_hypgeo: 296/296 tests passed (not counting 1 expected errors)
Running tests in rtestmt19937: 15/15 tests passed
Running tests in rtest_allnummod: 562/562 tests passed
Running tests in rtest_maxmin:                                     t 492380           t 85570
Refusing to factor polynomial 47 (%e )       - 4702 (%e )      + 4655
                            because its degree exceeds factor_max_degree (1000)
106/106 tests passed (not counting 8 expected errors)
Running tests in rtestconjugate: 256/256 tests passed
Running tests in rtestsum: 331/331 tests passed (not counting 4 expected errors)
Running tests in rtest_trig: 164/164 tests passed
Running tests in rtest_zeta: 29/29 tests passed
Running tests in rtest_diff_invtrig: 22/22 tests passed
Running tests in rtest_scalarp: 20/20 tests passed
Running tests in rtest_everysome: 84/84 tests passed
Running tests in rtestint: 340/340 tests passed (not counting 1 expected errors)
Running tests in rtest_numth: 218/218 tests passed
Running tests in rtestifactor: 34/34 tests passed
Running tests in rtest_equal: 205/205 tests passed (not counting 2 expected errors)
Running tests in rtest_abs: 140/140 tests passed
Running tests in rtest_taylor: 165/165 tests passed (not counting 6 expected errors)
Running tests in rtest_dot: 72/72 tests passed
Running tests in rtest_mset: 113/113 tests passed
Running tests in rtest_boolean: 116/116 tests passed
Running tests in rtest_round: 101/101 tests passed
Running tests in rtest_map: 139/139 tests passed (not counting 3 expected errors)
Running tests in rtest_sign: 378/378 tests passed (not counting 7 expected errors)
Running tests in rtest_algebraic: 45/45 tests passed
Running tests in rtest_gamma: 
********************** Problem 307 ***************
Input:
closeto(gamma_incomplete(2.5b-1, 1.5b0), 1.21154991040338486148603408783689124\
695505238714072062506450000593320225095059234678778878472738878824370305558769\
6201414341094b-1, 4.0b-127)


Result:
true

... Which was correct, but was expected to be wrong due to a known bug in
 Maxima or GNU Common Lisp (GCL).
826/826 tests passed (not counting 1 expected errors)

The following 1 problem passed but was expected to fail: (307)
Running tests in rtest_expintegral: 210/210 tests passed
Running tests in rtest_signum: 70/70 tests passed
Running tests in rtest_lambert_w: 57/57 tests passed
Running tests in rtest_elliptic: 222/222 tests passed (not counting 2 expected errors)
Running tests in rtest_integrate: 814/814 tests passed
Running tests in rtest_integrate_special: 53/53 tests passed
Running tests in rtest_sqrt: 315/315 tests passed (not counting 1 expected errors)
Running tests in rtest_carg: 53/53 tests passed (not counting 2 expected errors)
Running tests in rtest_log: 134/134 tests passed
Running tests in rtest_power: 69/69 tests passed (not counting 3 expected errors)
Running tests in rtestdefstruct: 32/32 tests passed
Running tests in rtest_limit: 237/237 tests passed
Running tests in rtest_powerseries: 67/67 tests passed
Running tests in rtest_laplace: 95/95 tests passed (not counting 10 expected errors)
Running tests in rtest_plotoptions: 5/5 tests passed
Running tests in rtest_algsys: 74/74 tests passed
Running tests in rtest_trace: 83/83 tests passed
Running tests in rtest_polynomialp: 16/16 tests passed
Running tests in rtest_limit_extra: 175/175 tests passed (not counting 42 expected errors)


No unexpected errors found out of 12,722 tests.
Tests that were expected to fail but passed:
  /home/camm/maxima-5.46.0/tests/rtest11.mac problems:
    (158 174 175)
  /home/camm/maxima-5.46.0/tests/rtest_gamma.mac problem:
    (307)
real time       :    131.230 secs
run-gbc time    :     97.640 secs
child run time  :     20.090 secs
gbc time        :      6.020 secs
(%o0)                                done
