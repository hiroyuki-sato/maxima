This is maxima.info, produced by makeinfo version 5.1 from maxima.texi.


File: maxima.info,  Node: Functions and Variables for binary input and output,  Prev: Functions and Variables for plain-text input and output,  Up: numericalio

69.3 Functions and Variables for binary input and output
========================================================

 -- 関数: assume_external_byte_order (<byte_order_flag>)
     ‘numericalio’に バイナリデータを読み書きするためのバイトオーダーを
     知らせます。 <byte_order_flag>の2つの値が認識されます: リトルエンデ
     ィアンバイトオーダーとも呼ばれる最下位バイト優先を示す‘lsb’; と ビ
     ッグエンディアンバイトオーダーとも呼ばれる最上位バイト優先を示す
     ‘msb’。

     もし指定されないなら、 ‘numericalio’は外部のバイトオーダーは最上位
     バイト優先を仮定します。

 -- 関数: openr_binary (<file_name>)
     <file_name>という名前のファイルを読むための 8ビット符号なしバイトの
     入力ストリームを返します。

 -- 関数: openw_binary (<file_name>)
     <file_name>という名前のファイルに書き込むための 8ビット符号なしバイ
     トの出力ストリームを返します。

 -- 関数: opena_binary (<file_name>)
     <file_name>という名前のファイルに追加するための 8ビット符号なしバイ
     トの出力ストリームを返します。

 -- 関数: read_binary_matrix (<S>, <M>)
     <M>が一杯になるかソースが尽きるまで、 ソース<S>から行列<M>にバイナ
     リの8バイト浮動小数点数を読み込みます。 <M>の要素は行優先順で読み込
     まれます。

     ソース<S>はファイル名かストリームかもしれません。

     ソースの要素のバイトオーダーは ‘assume_external_byte_order’で指定さ
     れます。

 -- 関数: read_binary_array (<S>, <A>)
     <A>が一杯になるかソースが尽きるまで、 ソース<S>から配列<A>にバイナ
     リの8バイト浮動小数点数を読み込みます。 <M>の要素は行優先順で読み込
     まれます。

     ソース<S>はファイル名かストリームかもしれません。

     ソースの要素のバイトオーダーは ‘assume_external_byte_order’で指定さ
     れます。

 -- 関数: read_binary_list (<S>)
 -- 関数: read_binary_list (<S>, <L>)
     ‘read_binary_list(<S>)’は バイナリ8バイト浮動小数点数の数列として ソ
     ース<S>の内容全体を読み込み、それをリストとして返します。 ソース
     <S>はファイル名かストリームかもしれません。

     ‘read_binary_list(<S>, <L>)’は リスト<L>が一杯になるかソースが尽き
     るまで、 ソース<S>から バイナリ8バイト浮動小数点数を読み込みます。

     ソースの要素のバイトオーダーは ‘assume_external_byte_order’で指定さ
     れます。

 -- 関数: write_binary_data (<X>, <D>)

     Writes the object バイナリ8バイトIEEE 754浮動小数点数で構成される オ
     ブジェクト<X>を ディスティネーション<D>に書き込みます。 他の種類の
     数は8バイト浮動小数点に強制変換されます。 ‘write_binary_data’は非数
     データを書くことはできません。

     The object オブジェクト<X>はリストか、入れ子のリスト、行列、 もしく
     は、‘array’か‘make_array’で生成された配列であり得ます; <X>は未宣言
     配列や他のいかなる種類のオブジェクトもありえません。
     ‘write_binary_data’は 入れ子のリスト、行列、配列を行優先順に書き込
     みます。

     デスティネーション<D>はファイル名かストリームかもしれません。 デス
     ティネーションがファイル名の時、 グローバル変数
     ‘file_output_append’が 出力ファイルに追加されるか上書きされるか決め
     ます。 デスティネーションがストリームの時、 データすべてが書かれた
     後‘write_binary_data’は特別な動作は何もしません; 特に、ストリームは
     開かれたままです。

     デスティネーションの要素のバイトオーダーは
     ‘assume_external_byte_order’で指定されます。


File: maxima.info,  Node: opsubst,  Next: orthopoly,  Prev: numericalio,  Up: Top

70 opsubst
**********

* Menu:

* Functions and Variables for opsubst::


File: maxima.info,  Node: Functions and Variables for opsubst,  Prev: opsubst,  Up: opsubst

70.1 Functions and Variables for opsubst
========================================

 -- 関数: opsubst (<f>,<g>,<e>)
 -- 関数: opsubst (<g>=<f>,<e>)
 -- 関数: opsubst ([<g1>=<f1>,<g2>=<f2>,..., <gn>=<fn>],<e>)
     関数‘opsubst’は ‘opsubst’は式の中の演算子への代入だけをすることを除
     いて、 関数‘subst’に似ています。 一般に、 <f>が式<e>の中の演算子の
     時、 式<e>の中で<g>を<f>に代入します。

     演算子を決定するために、 ‘opsubst’は‘inflag’をtrueに設定します。 こ
     れは、 ‘opsubst’が式の中の表示演算子ではなく内部演算子への代入をす
     ることを意味します。

     例:
          (%i1) load ("opsubst")$

          (%i2) opsubst(f,g,g(g(x)));
          (%o2)                     f(f(x))
          (%i3) opsubst(f,g,g(g));
          (%o3)                       f(g)
          (%i4) opsubst(f,g[x],g[x](z));
          (%o4)                       f(z)
          (%i5) opsubst(g[x],f, f(z));
          (%o5)                      g (z)
                                      x
          (%i6) opsubst(tan, sin, sin(sin));
          (%o6)                     tan(sin)
          (%i7) opsubst([f=g,g=h],f(x));
          (%o7)                       h(x)

     内部的にMaximaは単項否定や割り算、引き算演算子を使いません; 例えば:
          (%i8) opsubst("+","-",a-b);
          (%o8)                     a - b
          (%i9) opsubst("f","-",-a);
          (%o9)                      - a
          (%i10) opsubst("^^","/",a/b);
                                       a
          (%o10)                       -
                                       b

     -a*bの内部表現は*(-1,a,b)です; 例えば、
          (%i11) opsubst("[","*", -a*b);
          (%o11)                  [- 1, a, b]

     どちらかの演算子がMaximaシンボルでない時、 他のある関数は一般にエラ
     ーを知らせます:
          (%i12) opsubst(a+b,f, f(x));

          Improper name or value in functional position:
          b + a
           -- an error.  Quitting.  To debug this try debugmode(true);

     しかしながら、添字付き演算子は許されます:
          (%i13) opsubst(g[5],f, f(x));
          (%o13)                     g (x)
                                      5

     この関数を使うためには、最初に‘load("opsubst")’を書いてください。


File: maxima.info,  Node: orthopoly,  Next: plotdf,  Prev: opsubst,  Up: Top

71 orthopoly
************

* Menu:

* Introduction to orthogonal polynomials::
* Functions and Variables for orthogonal polynomials::


File: maxima.info,  Node: Introduction to orthogonal polynomials,  Next: Functions and Variables for orthogonal polynomials,  Prev: orthopoly,  Up: orthopoly

71.1 Introduction to orthogonal polynomials
===========================================

‘orthopoly’は、 Chebyshev, Laguerre, Hermite, Jacobi, Legendre, 超球
(Gegenbauer) 多項式を含むいくつかの種類の直交多項式のシンボリックな評価
と数値評価のためのパッケージです。 さらに、‘orthopoly’には球Bessel, 球
Hankel, 球調和関数のサポートが含まれます。

   ほとんどの部分に関して、 ‘orthopoly’は Abramowitz and Stegunの
Handbook of Mathematical Functions, Chapter 22 (10th printing, December
1972)の慣例に従います; 加えて、 Gradshteyn and RyzhikのTable of
Integrals, Series, and Products (1980 corrected and enlarged edition)と
Eugen MerzbacherのQuantum Mechanics (2nd edition, 1970)を使います。

   University of Nebraska at Kearney (UNK)のBarton Willisが ‘orthopoly’パ
ッケージとドキュメンテーションを書きました。 パッケージはGNU General
Public License (GPL)の下で公開されています。

71.1.1 Getting Started with orthopoly
-------------------------------------

‘load ("orthopoly")’は‘orthopoly’パッケージをロードします。

   3次のLegendre多項式を見つけるには、

     (%i1) legendre_p (3, x);
                           3             2
                  5 (1 - x)    15 (1 - x)
     (%o1)      - ---------- + ----------- - 6 (1 - x) + 1
                      2             2

   これを<x>の冪の和として表すには、 <ratsimp>か<rat>を結果に適用してく
ださい。

     (%i2) [ratsimp (%), rat (%)];
                             3           3
                          5 x  - 3 x  5 x  - 3 x
     (%o2)/R/            [----------, ----------]
                              2           2

   あるいはまた、 ‘legendre_p’の第二引数 (「主」変数)を正準有理形(CRE)に
してください。

     (%i1) legendre_p (3, rat (x));
                                   3
                                5 x  - 3 x
     (%o1)/R/                   ----------
                                    2

   浮動小数点評価に関して、 ‘orthopoly’はランニング誤差解析を使って 誤差
の上限を推定します。 例えば、

     (%i1) jacobi_p (150, 2, 3, 0.2);
     (%o1) interval(- 0.062017037936715, 1.533267919277521E-11)

   区間(interval)は形式form ‘interval (<c>, <r>)’を取ります。 ここで、
<c>は中央値、<r>は区間の半径です。 Maximaは区間上の算術をサポートしてい
ないので、 グラフィックスなどいくつかの状況では 誤差を抑制し、区間の中央
値だけ出力したいでしょう。 これをするには、オプション変数
‘orthopoly_returns_intervals’を ‘false’に設定してください。

     (%i1) orthopoly_returns_intervals : false;
     (%o1)                         false
     (%i2) jacobi_p (150, 2, 3, 0.2);
     (%o2)                  - 0.062017037936715

   更に知るにはセクション*note Floating point Evaluation::を参照してくだ
さい。

   ‘orthopoly’のほとんどの関数は‘gradef’プロパティを持ちます; 例えば、

     (%i1) diff (hermite (n, x), x);
     (%o1)                     2 n H     (x)
                                    n - 1
     (%i2) diff (gen_laguerre (n, a, x), x);
                   (a)               (a)
                n L   (x) - (n + a) L     (x) unit_step(n)
                   n                 n - 1
     (%o2)      ------------------------------------------
                                    x

   二番目の例の単位階段関数は、 <n>が0で評価することによって、そうでなけ
れば生じる誤差を抑制します。

     (%i3) ev (%, n = 0);
     (%o3)                           0

   ‘gradef’プロパティは「主」変数にのみ適用されます; 他の引数に関する導
関数は、普通、エラーメッセージに帰着します; 例えば、

     (%i1) diff (hermite (n, x), x);
     (%o1)                     2 n H     (x)
                                    n - 1
     (%i2) diff (hermite (n, x), n);

     Maxima doesn't know the derivative of hermite with respect the first
     argument
      -- an error.  Quitting.  To debug this try debugmode(true);

   一般に、‘orthopoly’の関数はリストや行列上に写像します。 写像を完全に
評価するには、 オプション変数‘doallmxops’と‘listarith’はともに ‘true’(デ
フォルト値)でなければいけません。 行列上への写像を見るには、以下を考えて
ください。

     (%i1) hermite (2, x);
                                          2
     (%o1)                    - 2 (1 - 2 x )
     (%i2) m : matrix ([0, x], [y, 0]);
                                 [ 0  x ]
     (%o2)                       [      ]
                                 [ y  0 ]
     (%i3) hermite (2, m);
                    [                             2  ]
                    [      - 2        - 2 (1 - 2 x ) ]
     (%o3)          [                                ]
                    [             2                  ]
                    [ - 2 (1 - 2 y )       - 2       ]

   二番目の例では、値の‘i, j’要素は‘hermite (2, m[i,j])’です; 次の例で見
るように、これは、 計算‘-2 + 4 m . m’と同じではありません。

     (%i4) -2 * matrix ([1, 0], [0, 1]) + 4 * m . m;
                         [ 4 x y - 2      0     ]
     (%o4)               [                      ]
                         [     0      4 x y - 2 ]

   定義域外の点で関数を評価すると、 一般に、‘orthopoly’は未評価関数を返
します。 例えば、

     (%i1) legendre_p (2/3, x);
     (%o1)                        P   (x)
                                   2/3

   ‘orthopoly’はTexへの翻訳をサポートします; 端末上での2次元出力も行いま
す。

     (%i1) spherical_harmonic (l, m, theta, phi);
                               m
     (%o1)                    Y (theta, phi)
                               l
     (%i2) tex (%);
     $$Y_{l}^{m}\left(\vartheta,\varphi\right)$$
     (%o2)                         false
     (%i3) jacobi_p (n, a, a - b, x/2);
                               (a, a - b) x
     (%o3)                    P          (-)
                               n          2
     (%i4) tex (%);
     $$P_{n}^{\left(a,a-b\right)}\left({{x}\over{2}}\right)$$
     (%o4)                         false

71.1.2 Limitations
------------------

式がいくつかの直交多項式を記号順で含む時、 式が実際に0になる可能性があり
ますが、 まだMaximaはそれを零に整理することができません。 もしそんな量で
割るなら、困ったことになるでしょう。 例えば、 以下の式は 1より大きな整数
<n>で零になりますが、 まだMaximaはそれを零に整理することができません。

     (%i1) (2*n - 1) * legendre_p (n - 1, x) * x - n * legendre_p (n, x)
           + (1 - n) * legendre_p (n - 2, x);
     (%o1)  (2 n - 1) P     (x) x - n P (x) + (1 - n) P     (x)
                       n - 1           n               n - 2

   特定の <n>では式を零に換算できます。

     (%i2) ev (% ,n = 10, ratsimp);
     (%o2)                           0

   一般に、直交多項式の多項式形は 浮動小数点評価に関しては不適当です。 以
下は例です。

     (%i1) p : jacobi_p (100, 2, 3, x)$

     (%i2) subst (0.2, x, p);
     (%o2)                3.4442767023833592E+35
     (%i3) jacobi_p (100, 2, 3, 0.2);
     (%o3)  interval(0.18413609135169, 6.8990300925815987E-12)
     (%i4) float(jacobi_p (100, 2, 3, 2/10));
     (%o4)                   0.18413609135169

   真値は約0.184です; この計算は 極端な減算消去誤差に苦しみます。 多項式
を展開し評価すると、よりよい結果を与えます。
     (%i5) p : expand(p)$
     (%i6) subst (0.2, x, p);
     (%o6) 0.18413609766122982

   これは一般的な規則ではありません; 多項式を展開することはいつも、 数値
評価により適した式を生じるわけではありません。 数値評価する最もよい方法
は 断然、1つ以上の関数引数を浮動小数点数にすることです。 それをすること
で、 特別な浮動小数点アルゴリズムが評価に使われます。

   Maximaの ‘float’関数は幾分でたらめです; もし ‘float’を記号次数や順序
パラメータを持つ直交多項式を含む式に適用するなら、 これらのパラメータは
浮動小数点に変換されるかもしれません; その後、式は完全には評価されません
。 以下を考えてください。

     (%i1) assoc_legendre_p (n, 1, x);
                                    1
     (%o1)                         P (x)
                                    n
     (%i2) float (%);
                                   1.0
     (%o2)                        P   (x)
                                   n
     (%i3) ev (%, n=2, x=0.9);
                                  1.0
     (%o3)                       P   (0.9)
                                  2

   (%o3)の式は浮動小数点に評価されません; ‘orthopoly’は 整数を要求すると
ころで浮動小数点値を認識しません。 同様に、 数値評価 recognize floating
point values where it requires an integer.  Similarly, numerical
evaluation of the ‘pochhammer_max_index’を越える位数の ‘pochhammer’関数
は迷惑かもしれません; 以下を考えてください。

     (%i1) x :  pochhammer (1, 10), pochhammer_max_index : 5;
     (%o1)                         (1)
                                      10

   ‘float’を適用することは <x>を浮動小数点に評価しません。

     (%i2) float (x);
     (%o2)                       (1.0)
                                      10.0

   <x>を浮動小数点に評価するには、 ‘pochhammer_max_index’を11以上にバイ
ンドして、 ‘float’を <x>に適用する必要があります。

     (%i3) float (x), pochhammer_max_index : 11;
     (%o3)                       3628800.0

   ‘pochhammer_max_index’のデフォルト値は100です; ‘orthopoly’をロードし
た後、値を変えてください。

   最後に、参考書は直交多項式の定義を変えることを承知してください; 一般
的にAbramowitz and Stegunの慣例を使っています。

   orhtopolyのバグを疑う前に、 いくつかの特殊なケースをチェックして、 あ
なたの定義が‘orthopoly’が使っているものと一致しているかを明らかにしてく
ださい。

   定義はしばしば規格化について異なります; 時々、著者は (-1, 1)以外の区
間上で直交な族を作る関数の「シフト」版を使います。 例えば、 (0, 1)上で直
交するLegendre多項式を定義するのに、 以下を定義します。

     (%i1) shifted_legendre_p (n, x) := legendre_p (n, 2*x - 1)$

     (%i2) shifted_legendre_p (2, rat (x));
                                 2
     (%o2)/R/                 6 x  - 6 x + 1
     (%i3) legendre_p (2, rat (x));
                                    2
                                 3 x  - 1
     (%o3)/R/                    --------
                                    2

71.1.3 Floating point Evaluation
--------------------------------

‘orthopoly’の関数のほとんどは 浮動小数点評価中の誤差を見積もるのに、 ラ
ンニング誤差解析を使います; 例外は球Bessel関数と第二種Legendreの陪多項式
です。 数値評価のため、 球Bessel関数はSLATEC関数をコールします。 第二種
Legendreの陪多項式の数値評価のために特別な方法は使われません。

   ランニング誤差解析は (丸め単位としても知られている)計算機イプシロンの
二次か高次の 誤差を無視します。 2,3の他の誤差も無視します。 (ありそうに
ありませんが、)実際の誤差は推定を越える可能性があります。

   区間は形式 ‘interval (<c>, <r>)’を持ちます。 ここで、 <c>は区間の中心
で、 <r>は半径です。 区間の中心は複素数であり得ますし、 半径はいつも正の
実数です。

   以下は例です。

     (%i1) fpprec : 50$

     (%i2) y0 : jacobi_p (100, 2, 3, 0.2);
     (%o2) interval(0.1841360913516871, 6.8990300925815987E-12)
     (%i3) y1 : bfloat (jacobi_p (100, 2, 3, 1/5));
     (%o3) 1.8413609135168563091370224958913493690868904463668b-1

   実際の誤差が誤差推定よりも小さいことをテストしましょう。

     (%i4) is (abs (part (y0, 1) - y1) < part (y0, 2));
     (%o4)                         true

   なるほど、この例では、 誤差推定は真の誤差の上限です。

   Maximaは区間の算術をサポートしていません。

     (%i1) legendre_p (7, 0.1) + legendre_p (8, 0.1);
     (%o1) interval(0.18032072148437508, 3.1477135311021797E-15)
             + interval(- 0.19949294375000004, 3.3769353084291579E-15)

   ユーザーは区間算数を行う計算をする演算子を定義できます。 区間の足し算
を定義するには、 以下を定義できます。

     (%i1) infix ("@+")$

     (%i2) "@+"(x,y) := interval (part (x, 1) + part (y, 1), part (x, 2)
           + part (y, 2))$

     (%i3) legendre_p (7, 0.1) @+ legendre_p (8, 0.1);
     (%o3) interval(- 0.019172222265624955, 6.5246488395313372E-15)

   引数が複素数の時、特殊な浮動小数点ルーチンがコールされます。 例えば、

     (%i1) legendre_p (10, 2 + 3.0*%i);
     (%o1) interval(- 3.876378825E+7 %i - 6.0787748E+7,
                                                1.2089173052721777E-6)

   これを真値と比較しましょう。

     (%i1) float (expand (legendre_p (10, 2 + 3*%i)));
     (%o1)          - 3.876378825E+7 %i - 6.0787748E+7

   更に、 引数が多倍長浮動小数点の時、 特殊な浮動小数点ルーチンがコール
されます; しかしながら、多倍長浮動小数点は 倍精度浮動小数点に変換され、
最終結果は倍精度です。

     (%i1) ultraspherical (150, 0.5b0, 0.9b0);
     (%o1) interval(- 0.043009481257265, 3.3750051301228864E-14)

71.1.4 Graphics and ‘orthopoly’
-------------------------------

直交多項式を含む式をプロットするには、 2つのことをしなければいけません:
  1. オプション変数 ‘orthopoly_returns_intervals’を ‘false’に設定する。
  2. ‘orthopoly’関数のすべてのコールをクォートする。
   もし関数コールがクォートされていないなら、 Maximaはプロットする前にそ
れらを多項式に評価します; 結果として、 特殊な浮動小数点コードはコールさ
れません。 以下は、Legendre多項式を含む式をどうやってプロットするかの例
です。

     (%i1) plot2d ('(legendre_p (5, x)), [x, 0, 1]),
                             orthopoly_returns_intervals : false;
     (%o1)

   式 ‘legendre_p (5, x)’全体をクォートします; これは ‘'legendre_p (5,
<x>)’を使って関数名をクォートするだけとは違います。

71.1.5 Miscellaneous Functions
------------------------------

‘orthopoly’パッケージは Pochhammerシンボルと単位階段函数を定義します。
‘orthopoly’は‘gradef’文の中で Kroneckerのデルタ函数と単位階段函数を使い
ます。

   Pochhammerシンボルをガンマ函数の商に変換するには、 ‘makegamma’を使っ
てください。

     (%i1) makegamma (pochhammer (x, n));
                               gamma(x + n)
     (%o1)                     ------------
                                 gamma(x)
     (%i2) makegamma (pochhammer (1/2, 1/2));
                                     1
     (%o2)                       ---------
                                 sqrt(%pi)

   Pochhammerシンボルの導函数は ‘psi’函数を使って与えられます。

     (%i1) diff (pochhammer (x, n), x);
     (%o1)             (x)  (psi (x + n) - psi (x))
                          n     0             0
     (%i2) diff (pochhammer (x, n), n);
     (%o2)                   (x)  psi (x + n)
                                n    0

   (%o1)の式に注意する必要があります; ‘psi’函数の差分は ‘<x> = -1, -2,
.., -<n>’の時 多項式です。 これらの多項式は <n>が正の整数の時、 導函数を
‘<n> - 1’次多項式にするように、 ‘pochhammer (<x>, <n>)’の因子を相殺しま
す。

   Pochhammerシンボルは ガンマ函数の商としての表現を通して 負の位数で定
義されます。 以下を考えてください。

     (%i1) q : makegamma (pochhammer (x, n));
                               gamma(x + n)
     (%o1)                     ------------
                                 gamma(x)
     (%i2) sublis ([x=11/3, n= -6], q);
                                    729
     (%o2)                        - ----
                                    2240

   代わりに、この結果を直接得ることができます。

     (%i1) pochhammer (11/3, -6);
                                    729
     (%o1)                        - ----
                                    2240

   単位階段函数は左連続です; 従って、

     (%i1) [unit_step (-1/10), unit_step (0), unit_step (1/10)];
     (%o1)                       [0, 0, 1]

   もし零で左連続でも右連続でもない単位階段函数が必要なら、 ‘signum’を使
って自分のものを定義してください; 例えば、

     (%i1) xunit_step (x) := (1 + signum (x))/2$

     (%i2) [xunit_step (-1/10), xunit_step (0), xunit_step (1/10)];
                                     1
     (%o2)                       [0, -, 1]
                                     2

   ‘unit_step’自身を再定義しないでください; ‘orthopoly’の中のあるコード
は 単位階段函数が左連続であることを要求します。

71.1.6 Algorithms
-----------------

一般的に、 ‘orthopoly’は 直交多項式の超幾何表現を使うことで記号評価をし
ます 超幾何函数は (ドキュメント化されていない)関数 ‘hypergeo11’と
‘hypergeo21’を使って 評価されます。 例外は半整数Bessel函数と第二種
Legendreの陪函数です。 半整数Bessel函数は明示的な表現を使って評価されま
す。 第二種Legendreの陪函数は再帰を使って評価されます。

   浮動小数点評価のために、 函数のほとんどを超幾何形式に再び変換します;
順方向再帰を使って超幾何函数を評価します。 ここでも、 例外は半整数
Bessel函数と第二種Legendreの陪函数です。 数値的に、 半整数Bessel函数は
SLATECコードを使って評価されます。


File: maxima.info,  Node: Functions and Variables for orthogonal polynomials,  Prev: Introduction to orthogonal polynomials,  Up: orthopoly

71.2 Functions and Variables for orthogonal polynomials
=======================================================

 -- 関数: assoc_legendre_p (<n>, <m>, <x>)
     次数 <n>と位数 <m>の第一種Legendre陪函数。

     参考文献: Abramowitz and Stegun, equations 22.5.37, page 779, 8.6.6
     (second equation), page 334, and 8.2.5, page 333.

 -- 関数: assoc_legendre_q (<n>, <m>, <x>)
     次数 <n>と位数 <m>の第二種Legendre陪函数。

     参考文献: Abramowitz and Stegun, equation 8.5.3 and 8.1.8.

 -- 関数: chebyshev_t (<n>, <x>)
     第一種Chebyshev函数。

     参考文献: Abramowitz and Stegun, equation 22.5.47, page 779.

 -- 関数: chebyshev_u (<n>, <x>)
     第二種Chebyshev函数。

     参考文献: Abramowitz and Stegun, equation 22.5.48, page 779.

 -- 関数: gen_laguerre (<n>, <a>, <x>)
     次数 <n>の一般化Laguerre多項式。

     参考文献: Abramowitz and Stegun, equation 22.5.54, page 780.

 -- 関数: hermite (<n>, <x>)
     Hermite多項式。

     参考文献: Abramowitz and Stegun, equation 22.5.55, page 780.

 -- 関数: intervalp (<e>)
     もし入力が区間なら ‘true’を、 そうでないなら ‘false’を返します。

 -- 関数: jacobi_p (<n>, <a>, <b>, <x>)
     Jacobiの多項式。

     Jacobiの多項式は実際には <a>と <b>すべてに対して定義されます; しか
     し、Jacobi多項式の重み ‘(1 - <x>)^<a> (1 + <x>)^<b>’は ‘<a> <= -1’か
     ‘<b> <= -1’で可積分でありません。

     参考文献: Abramowitz and Stegun, equation 22.5.42, page 779.

 -- 関数: laguerre (<n>, <x>)
     Laguerre多項式。

     参考文献: Abramowitz and Stegun, equations 22.5.16 and 22.5.54,
     page 780.

 -- 関数: legendre_p (<n>, <x>)
     第一種Legendre多項式。

     参考文献: Abramowitz and Stegun, equations 22.5.50 and 22.5.51,
     page 779.

 -- 関数: legendre_q (<n>, <x>)
     第二種Legendre多項式。

     参考文献: Abramowitz and Stegun, equations 8.5.3 and 8.1.8.

 -- 関数: orthopoly_recur (<f>, <args>)
     引数 <args>を持つ直交函数族 <f>の漸化式を返します。 再帰は多項式次
     数に関してです。

          (%i1) orthopoly_recur (legendre_p, [n, x]);
                          (2 n - 1) P     (x) x + (1 - n) P     (x)
                                     n - 1                 n - 2
          (%o1)   P (x) = -----------------------------------------
                   n                          n

     ‘orthopoly_recur’の二番目の引数は 関数 <f>の正しい数の引数のリスト
     でなければいけません; もしそうでないなら、Maximaはエラーをシグナル
     します。

          (%i1) orthopoly_recur (jacobi_p, [n, x]);

          Function jacobi_p needs 4 arguments, instead it received 2
           -- an error.  Quitting.  To debug this try debugmode(true);

     更に、 <f>が直交多項式族の1つの名前でないなら、 エラーがシグナルさ
     れます。

          (%i1) orthopoly_recur (foo, [n, x]);

          A recursion relation for foo isn't known to Maxima
           -- an error.  Quitting.  To debug this try debugmode(true);

 -- 変数: orthopoly_returns_intervals
     デフォルト値: ‘true’

     ‘orthopoly_returns_intervals’が ‘true’の時、 浮動小数点の結果が形式
     ‘interval (<c>, <r>)’ で返されます。 ここで、 <c>は区間の中心で、
     <r>は半径です。 中心は複素数であり得ます; その場合、区間は複素平面
     上の円です。

 -- 関数: orthopoly_weight (<f>, <args>)

     3つの要素のリストを返します; 一番目の要素は リスト <args>が与える引
     数を持つ直交多項式族 <f>の重みの公式です; 二番目と三番目の要素は 直
     交性の区間の下限と上限を与えます。 例えば、

          (%i1) w : orthopoly_weight (hermite, [n, x]);
                                      2
                                   - x
          (%o1)                 [%e    , - inf, inf]
          (%i2) integrate(w[1]*hermite(3, x)*hermite(2, x), x, w[2], w[3]);
          (%o2)                           0

     <f>の主変数はシンボルでなければいけません; そうでないなら、Maximaは
     エラーをシグナルします。

 -- 関数: pochhammer (<n>, <x>)
     Pochhammerシンボル。 ‘<n> <= pochhammer_max_index’の非負整数 <n>に
     対して、 式 ‘pochhammer (<x>, <n>)’は ‘<n> > 0’の時、 積 ‘<x> (<x>
     + 1) (<x> + 2) ... (<x> + n - 1)’ を評価します。 ‘<n> = 0’の時は1で
     す。 負の <n>に対しては、 ‘pochhammer (<x>, <n>)’は ‘(-1)^<n> /
     pochhammer (1 - <x>, -<n>)’として定義されます。 従って、

          (%i1) pochhammer (x, 3);
          (%o1)                   x (x + 1) (x + 2)
          (%i2) pochhammer (x, -3);
                                           1
          (%o2)               - -----------------------
                                (1 - x) (2 - x) (3 - x)

     Pochhammerシンボルをガンマ函数の商に変換するには、 (Abramowitz and
     Stegun, equation 6.1.22を参照してください) ‘makegamma’を使ってくだ
     さい; 例えば、

          (%i1) makegamma (pochhammer (x, n));
                                    gamma(x + n)
          (%o1)                     ------------
                                      gamma(x)

     <n>が ‘pochhammer_max_index’を越えるか、 <n>が記号の時、
     ‘pochhammer’は名詞形を返します。

          (%i1) pochhammer (x, n);
          (%o1)                         (x)
                                           n

 -- 変数: pochhammer_max_index
     デフォルト値: 100

     ‘pochhammer (<n>, <x>)’は ‘<n> <= pochhammer_max_index’の時だけ 積
     を展開します。

     例:

          (%i1) pochhammer (x, 3), pochhammer_max_index : 3;
          (%o1)                   x (x + 1) (x + 2)
          (%i2) pochhammer (x, 4), pochhammer_max_index : 3;
          (%o2)                         (x)
                                           4

     参考文献: Abramowitz and Stegun, equation 6.1.16, page 256.

 -- 関数: spherical_bessel_j (<n>, <x>)
     第一種球Bessel函数。

     参考文献: Abramowitz and Stegun, equations 10.1.8, page 437 and
     10.1.15, page 439.

 -- 関数: spherical_bessel_y (<n>, <x>)
     第二種球Bessel函数。

     参考文献: Abramowitz and Stegun, equations 10.1.9, page 437 and
     10.1.15, page 439.

 -- 関数: spherical_hankel1 (<n>, <x>)
     第一種球Hankel函数。

     参考文献: Abramowitz and Stegun, equation 10.1.36, page 439.

 -- 関数: spherical_hankel2 (<n>, <x>)
     第二種球Hankel函数。

     参考文献: Abramowitz and Stegun, equation 10.1.17, page 439.

 -- 関数: spherical_harmonic (<n>, <m>, <x>, <y>)
     球調和函数。

     参考文献: Merzbacher 9.64.

 -- 関数: unit_step (<x>)
     左連続の単位階段函数;なので ‘unit_step (<x>)’は‘<x> <= 0’で0であり
     、 ‘<x> > 0’で1です。

     もし0で値1/2を取る単位階段函数が欲しいなら、 ‘(1 + signum
     (<x>))/2’を使ってください。

 -- 関数: ultraspherical (<n>, <a>, <x>)
     (Gegenbauer多項式としても知られている)超球多項式。

     参考文献: Abramowitz and Stegun, equation 22.5.46, page 779.


File: maxima.info,  Node: plotdf,  Next: romberg,  Prev: orthopoly,  Up: Top

72 plotdf
*********

* Menu:

* Introduction to plotdf::
* Functions and Variables for plotdf::


File: maxima.info,  Node: Introduction to plotdf,  Next: Functions and Variables for plotdf,  Prev: plotdf,  Up: plotdf

72.1 Introduction to plotdf
===========================

関数‘plotdf’は、 1次常微分方程式(ODE)や2つの自励1次ODE系の (勾配場とも呼
ばれる)方向場のプロットを生成します。

   PlotdfはXmaximaを要求します。 コンソールや他のMaximaインターフェース
から使うことができますが、 結果のファイルはXmaximaに送られ、プロットされ
ます。 plotdfを使ってみる前にXmaximaをインストールしたことを確認してくだ
さい。

   単一のODEの方向場をプロットするには、ODEを以下の形式で書かなければい
けません:
            dy
            -- = F(x,y)
            dx

   そして関数<F>を‘plotdf’の引数に与えなければいけません。 もし独立変数
と従属変数が、上の式のように<x>と<y>でないなら、 plotdfコマンドへの引数
として与えられるリストの中に明示的に それら2つの変数を指名しなければいけ
ません。 (例を見てください。)

   2つの自励ODEの組の方向場をプロットするには、 それらを以下の形式で書か
なければいけません。
            dx             dy
            -- = G(x,y)    -- = F(x,y)
            dt             dt

   そして‘plotdf’の引数は2つの関数<G>と<F>を その順に持つリストでなけれ
ばいけません; すなわち、リストの最初の式は水平軸上に表された変数の時間導
関数であり、 二番目の式は垂直軸上に表された変数の時間導関数です。 それら
2つの変数は<x>と<y>である必要はありませんが、 もしそうでないなら、
plotdfに与えられる二番目の引数は 2つの変数を、最初のものが水平軸上のもの
を、その後垂直軸上のものを指定する別のリストでなければいけません。

   もしただ1つのODEが与えられるなら、 ‘plotdf’は、 暗に
‘x=t’,‘G(x,y)=1’と認め、 非自励方程式を2つの自励方程式系に変換します。


File: maxima.info,  Node: Functions and Variables for plotdf,  Prev: Introduction to plotdf,  Up: plotdf

72.2 Functions and Variables for plotdf
=======================================

 -- 関数: plotdf (<dydx>, ...options...)
 -- 関数: plotdf (<dvdu>, ‘[’<u>,<v>‘]’, ...options...)
 -- 関数: plotdf (‘[’<dxdt>,<dydt>‘]’, ...options...)
 -- 関数: plotdf (‘[’<dudt>,<dvdt>‘]’, ‘[’<u>,<v>‘]’, ...options...)

     2次元<x>と<y>に方向場を表示します。

     最初の引数は導関数を指定し、式か2つの式のリストでなければいけません
     。 <dydx>, <dxdt>, <dydt>は<x>と<y>に依存する式です。 <dvdu>,
     <dudt>, <dvdt>は<u>と<v>に依存する式です。 それら2つの変数に加えて
     、 ‘parameters’オプションで与えられる数値を持つか(オプション構文法
     は以下に与えられます)、 <sliders>オプションで指定される許される値の
     範囲の パラメータ一式にも、式は依存するかもしれません。

     コマンド内やメニューで選択して、いくつかの他のオプションを与えるこ
     とができます。 プロット上でクリックしたり、オプション
     ‘trajectory_at’を使って、 積分曲線を得ることができます。
     ‘direction’オプションを使って、積分の方向を制御できます。 オプショ
     ンは、_forward_, _backward_, _both_のいずれかの値を取り得ます。
     ‘nsteps’で積分ステップの数を与えることができ、 ‘tstep’オプションで
     それらの間の時間間隔を設定できます。 積分にはAdams Moulton法が使わ
     れます; 4次の適応Runge-Kutta法に切り替えることも可能です。

     プロットウィンドウメニュー:

     プロットウィンドウのメニューには以下のオプションがあります: _Zoom_,
     はマウスの振る舞いを変えて、プロット領域上で左ボタンをクリックする
     ことで ズームインできるようになります。 ある点近くをクリックする毎
     に、クリックした点を中心にしてプロットが拡大されます。 <Shift>キー
     を押しながらクリックすると、 以前の倍率にズームアウトします。 ある
     点をクリックした時、軌跡の計算を再開するには、 メニューから
     _Integrate_を選択してください。

     メニューの中のオプション_Config_を使って， 使用中のODE(s)や様々な他
     の設定を変えることができます。 構成の変更がされた後、新しい設定を稼
     働するには、 メニューオプション_Replot_を選択しなければいけません。
     もし、座標の組を _Config_ダイアログメニューの場_Trajectory at_に入
     れて、 <enter>キーを押したら、 既に示されているものに加えて、新しい
     積分曲線が表示されます。 _Replot_が選択された時は、 入れられた最後
     の積分曲線だけが表示されます。

     右マウスボタンを押しながらカーソルを動かすと、 プロットを横や上下に
     ドラッグできます。 ステップ数や<t>の初期値、x, yの中心や範囲のよう
     な追加パラメータは、 Configメニューで設定できます。

     プロットのコピーは、メニューオプション_Save_を使って、 ポストスクリ
     プトファイルとして保存できます。

     プロットオプション:

     ‘plotdf’コマンドはいくつかのコマンドを含むかもしれません。 それぞれ
     のコマンドは複数の項目のリストです。 最初の項目はオプション名で、 残
     りはオプションに割り当てられる値から成ります。

     ‘plotdf’が認識するオプションは以下の通りです:

        • "tstep"は、独立変数<t>に関する増分の長さを定義します。 積分曲
          線を計算するのに使われます。 もしただ1つの式<dydx>が‘plotdf’に
          与えられたら、 <x>変数は<t>に直接比例することになります。 デフ
          ォルト値は0.1です。

        • "nsteps"は、 積分曲線を計算するのに、独立変数に対して使われる
          長さ‘tstep’のステップ回数を定義します。 デフォルト値は100です
          。

        • "direction"は 積分曲線を計算する際に従う独立変数の方向を定義し
          ます。 可能な値は、 ‘forward’―これは増分‘tstep’で独立変数を
          ‘nsteps’回増やします― ‘backward’―これは独立変数を減らします― ま
          たは‘both’―これは ‘nsteps’回前進、 ‘nsteps’回後進で拡げた積分
          曲線に導きます― キーワード‘right’と‘left’を、 ‘forward’と
          ‘backward’の別称として使うことができます。 デフォルト値は
          ‘both’です。

        • "tinitial"は 積分曲線を計算するために使われる変数<t>の初期値で
          す。 微分方程式が自励なので、 その設定は<t>の関数として曲線の
          プロットでだけ現れます。 デフォルト値は0です。

        • "versus_t"は 独立変数<t>の2つの関数<x>, <y>としての 積分曲線の
          プロットを使って二番目のプロットウィンドウを生成するために 使
          われます。 もし‘versus_t’が0と異なる任意の値を与えられたら、 二
          番目のプロットウィンドウが表示されます。 二番目のプロットウィ
          ンドウは、 メインプロットウィンドウのメニューに似た別のメニュ
          ーを含みます。 デフォルト値は0です。

        • "trajectory_at"は 積分曲線の開始点のための座標<xinitial>と
          <yinitial>を定義します。 オプションはデフォルトで空です。

        • "parameters"は 微分方程式の定義の中で使われるパラメータとその
          数値のリストを定義します。 パラメータの名前と値は、 コンマで分
          離された組‘name=value’の列を持つ文字列で与えなければいけません
          。

        • "sliders"は スライダーボタンを使って対話的に変更されるパラメー
          タと それらのパラメータの変動範囲のリストです。 パラメータの名
          前と範囲は、 コンマで分離された要素‘name=min:max’の列を持つ文
          字列で与えなければいけません。

        • "xfun"は 方向場の上にセミコロンで分離された表示される<x>の関数
          の列を持つ文字列を定義します。 これらの関数はMaximaではなく
          Tclでパースされます。

        • "x"には2つの数が続かなければいけません。 2つの数は水平軸上で表
          示される最小値と最大値を設定します。 もし水平軸上の変数が<x>で
          ないなら、 このオプションは水平軸上の変数名を持たなければいけ
          ません。 デフォルトの水平範囲は-10から10です。

        • "y"には2つの数が続かなければいけません。 2つの数は垂直軸上で表
          示される最小値と最大値を設定します。 もし垂直軸上の変数が<y>で
          ないなら、 このオプションは垂直軸上の変数名を持たなければいけ
          ません。 デフォルトの垂直範囲は-10から10です。

     *例:*

        • 微分方程式y' = exp(-x) + yの方向場と(2, -0.1)を通過する解を表
          示するために:
               (%i1) plotdf(exp(-x)+y,[trajectory_at,2,-0.1])$

        • 方程式diff(y,x) = x - y^2の方向場と 初期条件y(-1) = 3の解を得
          るために、 以下のコマンドをつかうことができます:
               (%i1) plotdf(x-y^2,[xfun,"sqrt(x);-sqrt(x)"],
                        [trajectory_at,-1,3], [direction,forward],
                        [y,-5,5], [x,-4,16])$

          グラフは関数y = sqrt(x)も表示します。

        • 以下の例は、 2つの方程式dz/dt = vとdv/dt = -k*z/mで定義される
          調和振動子の方向場と、 (z,v) = (6,0)を通る積分曲線を、 (kは2に
          固定で)mの値を対話的に変えられるスライダーと一緒に、 表示しま
          す。
               (%i1) plotdf([v,-k*z/m], [z,v], [parameters,"m=2,k=2"],
                          [sliders,"m=1:5"], [trajectory_at,6,0])$

        • Duffing方程式m*x''+c*x'+k*x+b*x^3 = 0の方向場をプロットするた
          めに、 変数y=x'を導入し、以下のように使います:
               (%i1) plotdf([y,-(k*x + c*y + b*x^3)/m],
                            [parameters,"k=-1,m=1.0,c=0,b=1"],
                            [sliders,"k=-2:2,m=-1:1"],[tstep,0.1])$

        • 質量mの値を変更するのに使うことができるスライダーと一緒に 与え
          られた初期条件の解と減衰振り子の方向場と 時間の関数として2つの
          状態変数のプロットを一緒に:

               (%i1) plotdf([w,-g*sin(a)/l - b*w/m/l], [a,w],
                       [parameters,"g=9.8,l=0.5,m=0.3,b=0.05"],
                       [trajectory_at,1.05,-9],[tstep,0.01],
                       [a,-10,2], [w,-14,14], [direction,forward],
                       [nsteps,300], [sliders,"m=0.1:1"], [versus_t,1])$


File: maxima.info,  Node: romberg,  Next: simplex,  Prev: plotdf,  Up: Top

73 romberg
**********

* Menu:

* Functions and Variables for romberg::


File: maxima.info,  Node: Functions and Variables for romberg,  Prev: Top,  Up: Top

73.1 Functions and Variables for romberg
========================================

 -- 関数: romberg (<expr>, <x>, <a>, <b>)
 -- 関数: romberg (<F>, <a>, <b>)

     Romberg法による数値積分を計算します。

     ‘romberg(<expr>, <x>, <a>, <b>)’は 積分‘integrate(<expr>, <x>, <a>,
     <b>)’の概算を返します。

     <expr>は、 <x>が浮動小数点値にバインドされた時 浮動小数点値に評価さ
     れる 式でなければいけません。

     ‘romberg(<F>, <a>, <b>)’は 積分‘integrate(<F>(x), x, <a>, <b>)’の概
     算を返します。 ここで、‘x’は<F>の名付けられない唯一の引数を表します
     ; 実際の引数は‘x’と名付けられません。 <F>は、 引数が浮動小数点値の
     時、浮動小数点値を返す MaximaかLispの関数でなければいけません。
     <F>は翻訳またはコンパイルされたMaxima関数を指定することができます。

     ‘romberg’の精度は グローバル変数‘rombergabs’と‘rombergtol’によって
     決定されます。 ‘romberg’は 連続する近似の間の絶対差が‘rombergabs’よ
     りも小さい時か、 連続する近似に関する相対差が‘rombergtol’よりも小さ
     い時、 成功のうちに終了します。 従って、 ‘rombergabs’が0.0 (デフォ
     ルト)の時、 相対誤差テストだけが‘romberg’に効果を持ちます。

     ‘romberg’は あきらめる前に、せいぜい‘rombergit’回、ステップサイズを
     半分にします; それゆえ、関数評価の最大回数は‘2^rombergit’です。 も
     し ‘rombergabs’や‘rombergtol’によって確立される誤差基準が満たされな
     いなら、 ‘romberg’はエラーメッセージを印字します。 ‘romberg’はいつ
     も、少なくとも‘rombergmin’回の繰り返しを行います; これは、被積分関
     数が振動的な時、見せかけの終了を防ぐつもりの発見的方法です。

     ‘romberg’は、 積分変数を特定の値にバインド(する前ではなく)した後、
     被積分関数を繰り返し評価します。 この評価ポリシーは、多次元積分を計
     算するための ‘romberg’の入れ子のコールを可能にします。 しかしながら
     、誤差計算は 入れ子の積分の誤差を考慮しないので、エラーは過小評価さ
     れるかもしれません。 また、多次元問題のために特別に工夫された方法は
     より少ない関数評価で同じ精度をもたらす可能性があります。

     ‘load("romberg")’はこの関数をロードします。

     ‘QUADPACK’、数値積分関数のコレクションも参照してください。

     例:

     1次元積分。

          (%i1) load ("romberg");
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) f(x) := 1/((x - 1)^2 + 1/100) + 1/((x - 2)^2 + 1/1000)
                        + 1/((x - 3)^2 + 1/200);
                              1                 1                1
          (%o2) f(x) := -------------- + --------------- + --------------
                               2    1           2    1            2    1
                        (x - 1)  + ---   (x - 2)  + ----   (x - 3)  + ---
                                   100              1000              200
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) rombergit : 15;
          (%o4)                          15
          (%i5) estimate : romberg (f(x), x, -5, 5);
          (%o5)                   173.6730736617464
          (%i6) exact : integrate (f(x), x, -5, 5);
          (%o6) 10 sqrt(10) atan(70 sqrt(10))
           + 10 sqrt(10) atan(30 sqrt(10)) + 10 sqrt(2) atan(80 sqrt(2))
           + 10 sqrt(2) atan(20 sqrt(2)) + 10 atan(60) + 10 atan(40)
          (%i7) abs (estimate - exact) / exact, numer;
          (%o7)                7.5527060865060088E-11

     ‘romberg’の入れ子のコールで実装された 2次元積分。

          (%i1) load ("romberg");
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) g(x, y) := x*y / (x + y);
                                              x y
          (%o2)                   g(x, y) := -----
                                             x + y
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) estimate : romberg (romberg (g(x, y), y, 0, x/2), x, 1, 3);
          (%o4)                   0.81930239628356
          (%i5) assume (x > 0);
          (%o5)                        [x > 0]
          (%i6) integrate (integrate (g(x, y), y, 0, x/2), x, 1, 3);
                                                    3
                                              2 log(-) - 1
                              9                     2        9
          (%o6)       - 9 log(-) + 9 log(3) + ------------ + -
                              2                    6         2
          (%i7) exact : radcan (%);
                              26 log(3) - 26 log(2) - 13
          (%o7)             - --------------------------
                                          3
          (%i8) abs (estimate - exact) / exact, numer;
          (%o8)                1.3711979871851024E-10

 -- オプション変数: rombergabs
     デフォルト値: 0.0

     ‘romberg’の精度は、 グローバル変数‘rombergabs’と‘rombergtol’で決定
     されます。 ‘romberg’は 連続する近似の間の絶対差が‘rombergabs’よりも
     小さい時か、 連続する近似に関する相対差が‘rombergtol’よりも小さい時
     、 成功のうちに終了します。 従って、 ‘rombergabs’が0.0 (デフォルト
     )の時、 相対誤差テストだけが‘romberg’に効果を持ちます。

     ‘rombergit’と‘rombergmin’も参照してください。

 -- オプション変数: rombergit
     デフォルト値: 11

     ‘romberg’は あきらめる前に、せいぜい‘rombergit’回、ステップサイズを
     半分にします; それゆえ、関数評価の最大回数は‘2^rombergit’です。
     ‘romberg’はいつも、少なくとも‘rombergmin’回の繰り返しを行います; こ
     れは、被積分関数が振動的な時、見せかけの終了を防ぐつもりの発見的方
     法です。

     ‘rombergabs’と‘rombergtol’も参照してください。

 -- オプション変数: rombergmin
     デフォルト値: 0

     ‘romberg’はいつも、少なくとも‘rombergmin’回の繰り返しを行います; こ
     れは、被積分関数が振動的な時、見せかけの終了を防ぐつもりの発見的方
     法です。

     ‘rombergit’, ‘rombergabs’, ‘rombergtol’も参照してください。

 -- オプション変数: rombergtol
     デフォルト値: 1e-4

     ‘romberg’の精度は グローバル変数‘rombergabs’と‘rombergtol’によって
     決定されます。 ‘romberg’は 連続する近似の間の絶対差が‘rombergabs’よ
     りも小さい時か、 連続する近似に関する相対差が‘rombergtol’よりも小さ
     い時、 成功のうちに終了します。 従って、 ‘rombergabs’が0.0 (デフォ
     ルト)の時、 相対誤差テストだけが‘romberg’に効果を持ちます。

     ‘rombergit’と‘rombergmin’も参照してください。


File: maxima.info,  Node: simplex,  Next: simplification,  Prev: romberg,  Up: Top

74 simplex
**********

* Menu:

* Introduction to simplex::
* Functions and Variables for simplex::


File: maxima.info,  Node: Introduction to simplex,  Next: Functions and Variables for simplex,  Prev: simplex,  Up: simplex

74.1 Introduction to simplex
============================

‘simplex’はシンプレックスアルゴリズムを使った線形最適化のパッケージです
。

   例:

     (%i1) load("simplex")$
     (%i2) minimize_lp(x+y, [3*x+2*y>2, x+4*y>3]);
                       9        7       1
     (%o2)            [--, [y = --, x = -]]
                       10       10      5


File: maxima.info,  Node: Functions and Variables for simplex,  Prev: Introduction to simplex,  Up: simplex

74.2 Functions and Variables for simplex
========================================

 -- オプション変数: epsilon_lp
     デフォルト値: ‘10^-8’

     ‘linear_program’の数値計算で使われるイプシロン。

     以下も参照してください: ‘linear_program’

 -- 関数: linear_program (<A>, <b>, <c>)

     ‘linear_program’は シンプレックスアルゴリズムの実装です。
     ‘linear_program(A, b, c)’は、 ‘A.x = b’かつ‘x >= 0’を満たすベクトル
     の中で‘c.x’が可能な最小となる ベクトル<x>を計算します。 引数<A>は行
     列で、引数<b>と<c>はリストです。

     ‘linear_program’は、 最小化ベクトル<x>と最小値‘c.x’を含む リストを
     返します。 もし問題が有界でないなら、 "Problem not bounded!"を返し
     、 もし問題が実現可能でないなら、 "Problem not feasible!"を返します
     。

     この関数を使うためには、最初に‘load("simplex");’で‘simplex’パッケー
     ジをロードしてください。

     例:

          (%i2) A: matrix([1,1,-1,0], [2,-3,0,-1], [4,-5,0,0])$
          (%i3) b: [1,1,6]$
          (%i4) c: [1,-2,0,0]$
          (%i5) linear_program(A, b, c);
                             13     19        3
          (%o5)            [[--, 4, --, 0], - -]
                             2      2         2

     以下も参照してください: ‘minimize_lp’, ‘scale_lp’, ‘epsilon_lp’

 -- 関数: maximize_lp (<obj>, <cond>, [<pos>])

     いくつかの線形制約<cond>に従う線形目標関数<obj>を最大化します。 引
     数と戻り値の詳細な記述に関しては、 ‘minimize_lp’を参照してください
     。

     以下も参照してください: ‘minimize_lp’.

 -- 関数: minimize_lp (<obj>, <cond>, [<pos>])

     いくつかの線形制約<cond>に従う線形目標関数<obj>を最小化します。
     <cond>は線形等式や不等式のリストです。 厳密な不等式では、‘>’は
     ‘>=’に、 ‘<’は‘<=’に置き換えられます。 オプションの引数<pos>は 正と
     仮定される決定変数のリストです。

     もし最小が存在するなら、 ‘minimize_lp’は 目標関数の最小値と最小が得
     られる決定変数値のリスト を含むリストです。 もし問題が有界でないな
     ら、 ‘minimize_lp’は"Problem not bounded!"を返し、 もし問題が実現可
     能でないなら、 "Ploblem not feasible!"を返します。

     決定変数はデフォルトでは非負とは仮定されません。 もし決定変数すべて
     が正なら、 ‘nonegative_lp’を‘true’に設定してください。 もし決定変数
     のいくつかだけが正なら、 オプション引数<pos>の中でそれらをリストし
     てください。 (これは制約を足すより効率的だということに注意してくだ
     さい。)

     ‘minimize_lp’は Maximaの‘linear_program’関数で実装された シンプレッ
     クスアルゴリズムを使います。

     この関数を使うためには、最初に‘load("simplex");’で ‘simplex’パッケ
     ージをロードしてください。

     例:

          (%i1) minimize_lp(x+y, [3*x+y=0, x+2*y>2]);
                                4       6        2
          (%o1)                [-, [y = -, x = - -]]
                                5       5        5
          (%i2) minimize_lp(x+y, [3*x+y>0, x+2*y>2]), nonegative_lp=true;
          (%o2)                [1, [y = 1, x = 0]]
          (%i3) minimize_lp(x+y, [3*x+y=0, x+2*y>2]), nonegative_lp=true;
          (%o3)                Problem not feasible!
          (%i4) minimize_lp(x+y, [3*x+y>0]);
          (%o4)                Problem not bounded!

     いかも参照してください: ‘maximize_lp’, ‘nonegative_lp’,
     ‘epsilon_lp’。

 -- オプション変数: nonegative_lp
     デフォルト値: ‘false’

     もし‘nonegative_lp’がtrueなら、 ‘minimize_lp’と‘maximize_lp’の決定
     変数すべては正と仮定されます。

     以下も参照してください: ‘minimize_lp’。


File: maxima.info,  Node: simplification,  Next: solve_rec,  Prev: simplex,  Up: Top

75 simplification
*****************

* Menu:

* Introduction to simplification::
* Package absimp::
* Package facexp::
* Package functs::
* Package ineq::
* Package rducon::
* Package scifac::
* Package sqdnst::


File: maxima.info,  Node: Introduction to simplification,  Next: Package absimp,  Prev: simplification,  Up: simplification

75.1 Introduction to simplification
===================================

ディレクトリ‘maxima/share/simplification’は 整理ルールと整理関数を実装す
るいくつかのスクリプトと整理に関係しないいくつかの関数を含みます。


File: maxima.info,  Node: Package absimp,  Next: Package facexp,  Prev: Introduction to simplification,  Up: simplification

75.2 Package absimp
===================

‘absimp’パッケージは ‘abs’と‘signum’関数のために 組み込み整理ルールを拡
張する パターンマッチングルールを含みます。 ‘absimp’は、 組み込み
‘assume’関数で、また、 偶数や奇数に関して‘modedeclare (m, even, n,
odd)’のような宣言によって 確立された関係を考慮します。

   ‘absimp’は ‘abs’と‘signum’を使って ‘unitramp’と‘unitstep’関数を定義し
ます。

   ‘load ("absimp")’はこのパッケージをロードします。 ‘demo (absimp)’はこ
のパッケージのデモを表示します。

   例:

     (%i1) load ("absimp")$
     (%i2) (abs (x))^2;
                                            2
     (%o2)                                 x
     (%i3) diff (abs (x), x);
                                           x
     (%o3)                               ------
                                         abs(x)
     (%i4) cosh (abs (x));
     (%o4)                               cosh(x)


File: maxima.info,  Node: Package facexp,  Next: Package functs,  Prev: Package absimp,  Up: simplification

75.3 Package facexp
===================

‘facexp’パッケージは、 制御された展開によって式を構造化する能力をユーザ
ーに与えるいくつかの関連関数を含みます。 式が物理的意味を持つ変数を含む
とき、この能力は特に役に立ちます。 そんな式の最も簡潔な形式は、それらの
変数に関して式を完全に展開し、 その後係数を因数分解することで得られるこ
とがしばしばあるからです。 この手続きは標準のMaxima関数を使って実行する
ことは難しくありませんが、 追加の微調整も望まれていて、これらの仕上げは
適用するのが更に難しくなることがあります。

   関数‘facsum’とその関連形式は、 この方法で式の構造を制御するための便利
な手段を提供します。 別の関数‘collectterms’は、 この形式に既に整理された
複数の式を 式全体を再整理することなく、足し合わせるのに使うことができま
す。 式が非常に大きいとき、この関数は役に立つかもしれません。

   ‘load ("facexp")’はこのパッケージをロードします。 ‘demo (facexp)’はこ
のパッケージのデモを見せます。

 -- 関数: facsum (<expr>, <arg_1>, ..., <arg_n>)
     引数<arg_1>, ..., <arg_n>に依存する <expr>の形式を返します。 引数は
     ‘ratvars’に適した任意の形式か、そんな形式のリストを取り得ます。 も
     し引数がリストでなければ、 返される形式は、引数に関して完全に展開さ
     れ、引数の係数は因数分解されます。 これらの係数は、非合理的な意味合
     いを除いて引数に依存しません。

     引数のいずれかがリストなら、リストすべては1つのリストに結合されて、
     引数の係数に対して‘factor’をコールする代わりに ‘facsum’は、 これら
     の係数に対して自分自身をコールします。 この再帰コールに関しては、上
     記で新しく構成されたリストが新しい引数リストとして使われます。 この
     処理は、リストの中に望まれた要素を入れ子にすることで、任意の深さま
     で繰り返すことができます。

     It is possible that one may wish to ‘facsum’ with respect to more
     complicated subexpressions, such as ‘log (x + y)’のような、より複雑
     な部分式に関して ‘facsum’したいかも知れません。 そんな引数も許され
     ています。

     時々、ユーザーは 式に関して、先頭演算子によってのみ指定された上記形
     式いずれかが欲しいかもしれません。 例えば、 すべての‘log’に関して
     ‘facsum’したかもしれません。 この場合、 この方法で扱われる特定の
     ‘log’か、 代わりに式‘operator (log)’や‘'operator (log)’ を引数に含
     むことができます。 もし 演算子<op_1>, ..., <op_n>に関して 式
     <expr>を‘facsum’したいなら、 ‘facsum (<expr>, operator (<op_1>,
     ..., <op_n>))’を評価します。 ‘operator’形式はリスト引数の中でも可能
     です。

     更に、 スイッチ‘facsum_combine’と‘nextlayerfactor’の設定は
     ‘facsum’の結果に影響するかもしれません。

 -- グローバル変数: nextlayerfactor
     デフォルト値: ‘false’

     ‘nextlayerfactor’が‘true’の時、 ‘facsum’の再帰コールが 引数の係数の
     因数分解された形式の因子に適用されます。

     ‘false’の時、 ‘facsum’は、 ‘facsum’への再帰コールが起こる時はいつで
     も、全体としてそれぞれの係数に適用されます。

     ‘facsum’の引数リストに アトム‘nextlayerfactor’を入れると、
     ‘nextlayerfactor: true’の効果がありますが、 式の次のレベルだけに関
     してです。

     ‘nextlayerfactor’はいつも ‘true’か‘false’にバインドされているので、
     ‘facsum’の引数リストの中に現れる時はいつでも、 シングルクォートで表
     さなければいけません。

 -- グローバル変数: facsum_combine
     デフォルト値: ‘true’

     引数が多項式の商の時、 ‘facsum_combine’は ‘facsum’が返す最終結果の
     形式を制御します。 もし‘facsum_combine’が‘false’なら、 形式は既に記
     述したような完全に展開された和として返されますが、 もし‘true’なら、
     返される式は、既に記述した形式の多項式の比です。

     有理式の分子と分母両方を‘facsum’したいが、 分母が分子の項ずつに掛け
     られたくない時、 このスイッチの‘true’設定は役に立ちます。

 -- 関数: factorfacsum (<expr>, <arg_1>, ... <arg_n>)
     <expr>の因子に関して引数として <arg_1>, ...  <arg_n>を付けて
     ‘facsum’をコールすることで得られる <expr>の形式を返します。 もし
     <expr>の因子のいずれかがべきに累乗されるなら、 因子と指数と両方がこ
     の方法で処理されます。

 -- 関数: collectterms (<expr>, <arg_1>, ..., <arg_n>)

     もしいくつかの式が‘facsum’もしくは‘factorfacsum’, ‘factenexpand’,
     ‘facexpten’, ‘factorfacexpten’で整理されていて、それらが一緒に加算
     されているなら、 関数‘collectterms’を使ってそれらを結合することが望
     まれる場合があります。 ‘collectterms’は、‘nextlayerfactor’を除いて
     これらの他の関連した関数に渡すことができる引数すべてを 引数として取
     ることができます。 ‘collectterms’の利点は、‘facsum’と似た形式を返す
     ことです。 しかし、既に‘facsum’で処理された加算形式なのでこの処理を
     繰り返す必要はありません。 この能力は加算する式が非常に大きい時特に
     役立ちます。


File: maxima.info,  Node: Package functs,  Next: Package ineq,  Prev: Package facexp,  Up: simplification

75.4 Package functs
===================

 -- 関数: rempart (<expr>, <n>)
     式<expr>からパーツ<n>を取り除きます。

     もし<n>が形式‘[<l>, <m>]’のリストなら、 パーツ<l>から<m>までが取り
     除かれます。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: wronskian ([<f_1>, ..., <f_n>], <x>)
     変数<x>に関する式のリスト[<f_1>, ..., <f_n>]の Wronskian行列を返し
     ます。 Wronskian行列の行列式は、 式のリストのWronskian行列式です。

     ‘wronskian’を使うには、最初に‘load("functs")’してください。例えば:

          (%i1) load("functs")$
          (%i2) wronskian([f(x), g(x)],x);
          (%o2) matrix([f(x),g(x)],['diff(f(x),x,1),'diff(g(x),x,1)])

 -- 関数: tracematrix (<M>)
     行列<M>の跡(対角要素の和)を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: rational (‘z’)
     分母を有理化するように、 <z>の分子と分母に分母の複素共役を掛けます
     。 もし与えられたものがそうであれば、正準有理式(CRE)形式を返し、 そ
     うでないなら、一般形式を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: nonzeroandfreeof (<x>, <expr>)
     もし <expr>がゼロでなく、 ‘freeof (<x>, <expr>)’が‘true’を返すなら
     、 ‘true’を返します。 そうでなければ、‘false’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: linear (<expr>, <x>)
     <expr>が変数<x>に関して線形の式の時、 ‘linear’は‘<a>*<x> + <b>’を返
     します。 ここで、<a>はゼロでなく、<a>と<b>は<x>に依存しません。 そ
     うでなければ、‘linear’は<expr>を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: gcdivide (<p>, <q>)

     ‘takegcd’が‘true’の時、 ‘gcdivide’は多項式<p>と<q>を最大公約多項式
     で割り、 結果の比を返します。

     ‘takegcd’が‘false’の時、 ‘gcdivide’は比‘<p>/<q>’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

     ‘ezgcd’, ‘gcd’, ‘gcdex’, ‘poly_gcd’も参照してください。

     例:

          (%i1) load("functs")$

          (%i2) p1:6*x^3+19*x^2+19*x+6;
                                  3       2
          (%o2)                6 x  + 19 x  + 19 x + 6
          (%i3) p2:6*x^5+13*x^4+12*x^3+13*x^2+6*x;
                            5       4       3       2
          (%o3)          6 x  + 13 x  + 12 x  + 13 x  + 6 x
          (%i4) gcdivide(p1, p2);
                                       x + 1
          (%o4)                        ------
                                        3
                                       x  + x
          (%i5) takegcd:false;
          (%o5)                         false
          (%i6) gcdivide(p1, p2);
                                 3       2
                              6 x  + 19 x  + 19 x + 6
          (%o6)          ----------------------------------
                            5       4       3       2
                         6 x  + 13 x  + 12 x  + 13 x  + 6 x
          (%i7) ratsimp(%);
                                       x + 1
          (%o7)                        ------
                                        3
                                       x  + x

 -- 関数: arithmetic (<a>, <d>, <n>)
     算術級数‘<a>, <a> + <d>, <a> + 2*<d>, ..., <a> + (<n> - 1)*<d>’の第
     <n>項を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: geometric (<a>, <r>, <n>)
     幾何級数‘<a>, <a>*<r>, <a>*<r>^2, ..., <a>*<r>^(<n> - 1)’の第<n>項
     を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: harmonic (<a>, <b>, <c>, <n>)
     調和級数‘<a>/<b>, <a>/(<b> + <c>), <a>/(<b> + 2*<c>), ..., <a>/(<b>
     + (<n> - 1)*<c>)’の第<n>項を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: arithsum (<a>, <d>, <n>)
     算術級数の1から<n>までの和を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: geosum (<a>, <r>, <n>)
     幾何級数の1から<n>までの和を返します。 もし<n>が無限大(‘inf’)なら、
     <r>の絶対値が1未満でのみ、和は有限です。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: gaussprob (<x>)
     Gaussian確率函数‘%e^(-<x>^2/2) / sqrt(2*%pi)’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: gd (<x>)
     Gudermannian函数‘2*atan(%e^x)-%pi/2’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: agd (<x>)
     逆Gudermannian函数‘log (tan (%pi/4 + x/2)))’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: vers (<x>)
     正矢(せいし)‘1 - cos (x)’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: covers (<x>)
     余矢(よし)‘1 - sin (<x>)’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: exsec (<x>)
     外正割(exsecant)‘sec (<x>) - 1’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: hav (<x>)
     半正矢‘(1 - cos(x))/2’を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: combination (<n>, <r>)
     一度に<r>個を取る<n>個のオブジェクトの組み合わせの数を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。

 -- 関数: permutation (<n>, <r>)
     <n>個のオブジェクトの集合から選択された<r>個のオブジェクトの置換の
     数を返します。

     この関数を使うには、最初に‘load("functs")’を書いてください。


File: maxima.info,  Node: Package ineq,  Next: Package rducon,  Prev: Package functs,  Up: simplification

75.5 Package ineq
=================

‘ineq’パッケージは不等式の整理規則を含みます。

   セッション例:

     (%i1) load("ineq")$
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     (%i2) a>=4;  /* a sample inequality */
     (%o2)                               a >= 4
     (%i3) (b>c)+%; /* add a second, strict inequality */
     (%o3)                            b + a > c + 4
     (%i4) 7*(x<y); /* multiply by a positive number */
     (%o4)                              7 x < 7 y
     (%i5) -2*(x>=3*z); /* multiply by a negative number */
     (%o5)                           - 2 x <= - 6 z
     (%i6) (1+a^2)*(1/(1+a^2)<=1); /* Maxima knows that 1+a^2 > 0 */
                                             2
     (%o6)                             1 <= a  + 1
     (%i7) assume(x>0)$ x*(2<3); /* assuming x>0 */
     (%o7)                              2 x < 3 x
     (%i8) a>=b; /* another inequality */
     (%o8)                               a >= b
     (%i9) 3+%; /* add something */
     (%o9)                           a + 3 >= b + 3
     (%i10) %-3; /* subtract it out */
     (%o10)                              a >= b
     (%i11) a>=c-b; /* yet another inequality */
     (%o11)                            a >= c - b
     (%i12) b+%; /* add b to both sides */
     (%o12)                            b + a >= c
     (%i13) %-c; /* subtract c from both sides */
     (%o13)                         - c + b + a >= 0
     (%i14) -%;  /* multiply by -1 */
     (%o14)                          c - b - a <= 0
     (%i15) (z-1)^2>-2*z; /* determining truth of assertion */
                                           2
     (%o15)                         (z - 1)  > - 2 z
     (%i16) expand(%)+2*z; /* expand this and add 2*z to both sides */
                                        2
     (%o16)                            z  + 1 > 0
     (%i17) %,pred;
     (%o17)                               true

   不等式の回りで括弧を使うことについて注意してください; ユーザーが‘(A >
B) + (C = 5)’と入力した時、 結果は‘A + C > B + 5’ですが、‘A > B + C =
5’は構文エラーであり、 ‘(A > B + C) = 5’は完全に何か他のものです。

   規則定義の完全なリストを見るには、 ‘disprule (all)’を実行してください
。

   Maximaが不等式に掛けられる量の符号を決定できない時、 ユーザーは問い合
わせを受けるでしょう。

   最もありふれた仕様の欠陥を以下に例示します:

     (%i1) eq: a > b;
     (%o1)                              a > b
     (%i2) 2*eq;
     (%o2)                            2 (a > b)
     (%i3) % - eq;
     (%o3)                              a > b

   別の問題は0掛ける不等式です; これを0にするデフォルト動作はそのままで
す。 しかし、 もし‘X*<some_inequality>’とタイプして、 Maximaが‘X’の符号
を尋ね、 ‘zero’ (または‘z’)と答えたなら、 プログラムは
‘X*<some_inequality>’を返し、 ‘X’が0という情報を使いません。 そんな時は
、 データベースは、決定の際、‘X’を評価する目的ではなく、比較目的のためだ
けに使われるので、 ‘ev (%, x: 0)’を実行すべきです。

   パッケージがロードされた時、 整理器が、パッケージなしよりたくさんの規
則を検証するよう強制されるので、 ユーザーはより遅い応答に気がつくかもし
れません。 だから、これらを利用した後、規則を取り除きたいかもしれません
。 (あなたが定義したかもしれないものすべてを含み)規則すべてを消すには、
‘kill (rules)’してください; もしくは、もっと選択的にそれらのうちのいくつ
かだけ消すかもしれません; もしくは、特定の規則に‘remrule’を使ってくださ
い。

   もし自分の規則を定義した後、このパッケージをロードするなら、 同じ名前
を持つあなたの規則をつぶすでしょう。 このパッケージの規則は以下の通りで
す: ‘*rule1’, ..., ‘*rule8’, ‘+rule1’, ..., ‘+rule18’, そして、それを参
照するには、 ‘"+"’に関する最初の規則を限定して取り除くための‘remrule
("+", "+rule1")’とか、 二番目の乗法規則の定義を表示するための‘disprule
("*rule2")’とか、 規則名を引用符で囲まなければいけません。


File: maxima.info,  Node: Package rducon,  Next: Package scifac,  Prev: Package ineq,  Up: simplification

75.6 Package rducon
===================

 -- 関数: reduce_consts (<expr>)
     <expr>の定部分式を構成された定アトムで置き換え、 これら構成された定
     数すべての定義を等式のリスト‘const_eqns’に保存し、 修正された
     <expr>を返します。 <expr>のそれらのパーツは、関数‘constantp’が施さ
     れた時‘true’を返す 定数です。 それゆえ、 ‘reduce_consts’を呼び出す
     前に、
          declare ([<objects to be given the constant property>], constant)$
     をして、自分の式に現れる定数量のデータベースを設定すべきです。

     もしこれらの数式計算の後、Fortran出力を生成する予定があるなら、 最
     初のコードセクションの1つはすべての定数の計算であるべきです。 この
     コードセグメントを生成するには、
          map ('fortran, const_eqns)$
     を実行してください。

     ‘reduce_consts’に影響する‘const_eqns’ を除いた変数は以下の通りです:
     ‘const_prefix’ (デフォルト値: ‘xx’) 定部分式を表すために
     ‘reduce_consts’が生成するシンボルすべてに接頭として付けるのに使われ
     る文字列です。

     ‘const_counter’ (デフォルト値: 1)は ‘reduce_consts’が見つける定部分
     式それぞれを表すためのユニークなシンボルを生成するのに使われる整数
     添字です。

     ‘load ("rducon")’はこの関数をロードします。 ‘demo (rducon)’はこの関
     数のデモを見せます。


File: maxima.info,  Node: Package scifac,  Next: Package sqdnst,  Prev: Package rducon,  Up: simplification

75.7 Package scifac
===================

 -- 関数: gcfac (<expr>)
     ‘gcfac’は 科学者が式をより簡単にしようとする時に適用するのと同じ発
     見的方法の適用を試みる 因数分解関数です。 ‘gcfac’は単項式タイプの因
     数分解に限られます。 和に関しては、‘gcfac’は以下を行います:

       1. 整数上で素因数分解します。
       2. 項の複雑さに関わらず、生じる項の最大の冪を係数として因数分解し
          ます。
       3. 項の隣同士の対を因数分解する時に、(1)と(2)を使います。
       4. 式がもはや変化しなくなるまで、 これらのテクニックを繰り返し、
          再帰的に適用します。

     対のすべての可能な再配列の中から最も簡潔な対因数分解された結果を産
     むものを見つけることの 組み合わせ的に困難な性質のため、 項目(3)は必
     ずしも、対での因数分解の最善の仕事をしません。

     ‘load ("scifac")’はこの関数をロードします。 ‘demo (scifac)’はこの関
     数のデモを見せます。


File: maxima.info,  Node: Package sqdnst,  Prev: Package scifac,  Up: simplification

75.8 Package sqdnst
===================

 -- 関数: sqrtdenest (<expr>)
     可能なら、簡単で、数値的で、二項無理数(binomial surds)の‘sqrt’を
     denestします。

     例えば、

          (%i1) load ("sqdnst")$
          (%i2) sqrt(sqrt(3)/2+1)/sqrt(11*sqrt(2)-12);
                                              sqrt(3)
                                         sqrt(------- + 1)
                                                 2
          (%o2)                        ---------------------
                                       sqrt(11 sqrt(2) - 12)
          (%i3) sqrtdenest(%);
                                            sqrt(3)   1
                                            ------- + -
                                               2      2
          (%o3)                            -------------
                                              1/4    3/4
                                           3 2    - 2

     時々、 ‘(19601-13860 sqrt(2))^(7/4)’に対してのように、
     ‘sqrtdenest’を複数回適用することが役立ちます。

     ‘load ("sqdnst")’はこの関数をロードします。


File: maxima.info,  Node: solve_rec,  Next: stats,  Prev: simplification,  Up: Top

76 solve_rec
************

* Menu:

* Introduction to solve_rec::
* Functions and Variables for solve_rec::


File: maxima.info,  Node: Introduction to solve_rec,  Next: Functions and Variables for solve_rec,  Prev: solve_rec,  Up: solve_rec

76.1 Introduction to solve_rec
==============================

‘solve_rec’は多項式係数を持つ線形漸化式を解くためのパッケージです。

   デモが ‘demo(solve_rec);’で利用可能です。

   例:

     (%i1) load("solve_rec")$
     (%i2) solve_rec((n+4)*s[n+2] + s[n+1] - (n+1)*s[n], s[n]);
                                         n
                      %k  (2 n + 3) (- 1)          %k
                        1                            2
     (%o2)       s  = -------------------- + ---------------
                  n     (n + 1) (n + 2)      (n + 1) (n + 2)


File: maxima.info,  Node: Functions and Variables for solve_rec,  Prev: Introduction to solve_rec,  Up: solve_rec

76.2 Functions and Variables for solve_rec
==========================================

 -- 関数: reduce_order (<rec>, <sol>, <var>)

     特殊解<sol>が知られている時、 線形漸化式<rec>の次数を減らします。

     例:

          (%i3) rec: x[n+2] = x[n+1] + x[n]/n;
                                                x
                                                 n
          (%o3)               x      = x      + --
                               n + 2    n + 1   n
          (%i4) solve_rec(rec, x[n]);
          WARNING: found some hypergeometrical solutions!
          (%o4)                    x  = %k  n
                                    n     1
          (%i5) reduce_order(rec, n, x[n]);
          (%t5)                    x  = n %z
                                    n       n

                                     n - 1
                                     ====
                                     \
          (%t6)                %z  =  >     %u
                                 n   /        %j
                                     ====
                                     %j = 0

          (%o6)             (- n - 2) %u     - %u
                                        n + 1     n
          (%i6) solve_rec((n+2)*%u[n+1] + %u[n], %u[n]);
                                               n
                                      %k  (- 1)
                                        1
          (%o6)                 %u  = ----------
                                  n    (n + 1)!

          だから一般解は以下の通りです。

                       n - 1
                       ====        j
                       \      (- 1)
                 %k  n  >    -------- + %k  n
                   2   /     (j + 1)!     1
                       ====
                       j = 0

 -- オプション変数: simplify_products
     デフォルト値: ‘true’

     もし‘simplify_products’が‘true’なら、 ‘solve_rec’は答えの積をを整理
     しようとします。

     以下も参照してください: ‘solve_rec’.

 -- 関数: simplify_sum (<expr>)

     <expr>に現れるすべての和を閉形式に整理しようとします。

     この関数を初めて使うには、 ‘load("simplify_sum")’で ‘simplify_sum’パ
     ッケージをロードしてください。

     例:

          (%i1) load("simplify_sum")$
          (%i2) sum(binomial(n+k,k)/2^k,k,1,n)+sum(binomial(2*n,2*k),k,1,n);
                  n                          n
                 ====                       ====
                 ¥     binomial(n + k, k)   ¥
          (%o2)   >    ------------------ +  >    binomial(2 n, 2 k)
                 /              k           /
                 ====          2            ====
                 k = 1                      k = 1
          (%i3) simplify_sum(%);

                                   2 n - 1    n
          (%o3)                   2        + 2  - 2

 -- 関数: solve_rec (<eqn>, <var>, [<init>])
     変数<var>に関して多項式係数を持つ線形漸化式<eqn>の超幾何解について
     解きます。 オプション引数<init>は初期条件です。

     ‘solve_rec’は、 定数係数の線形漸化式を解くことができ、 多項式係数の
     斉次線形漸化式の超幾何解と多項式係数の有理解を見つけ、 Ricatti型漸
     化式を解くことができます。

     超幾何解を見つけるのに使われるアルゴリズムの実行時間は 主係数と最小
     次数(trailing)係数の次数に関して指数的であることに注意してください
     。

     この関数を使うには、 最初に ‘load("solve_rec");’で‘solve_rec’パッケ
     ージをロードしてください。

     定係数の線形漸化式の例:

          (%i2) solve_rec(a[n]=a[n-1]+a[n-2]+n/2^n, a[n]);
                                  n          n
                     (sqrt(5) - 1)  %k  (- 1)
                                      1           n
          (%o2) a  = ------------------------- - ----
                 n               n                  n
                                2                5 2
                                                          n
                                             (sqrt(5) + 1)  %k
                                                              2    2
                                           + ------------------ - ----
                                                      n              n
                                                     2            5 2

     多項式係数の線形漸化式の例:

          (%i7) 2*x*(x+1)*y[x] - (x^2+3*x-2)*y[x+1] + (x-1)*y[x+2];
                                   2
          (%o7) (x - 1) y      - (x  + 3 x - 2) y      + 2 x (x + 1) y
                         x + 2                   x + 1                x
          (%i8) solve_rec(%, y[x], y[1]=1, y[3]=3);
                                        x
                                     3 2    x!
          (%o9)                 y  = ---- - --
                                 x    4     2

     Ricatti型漸化式の例:

          (%i2) x*y[x+1]*y[x] - y[x+1]/(x+2) + y[x]/(x-1) = 0;
                                      y         y
                                       x + 1     x
          (%o2)         x y  y      - ------ + ----- = 0
                           x  x + 1   x + 2    x - 1
          (%i3) solve_rec(%, y[x], y[3]=5)$
          (%i4) ratsimp(minfactorial(factcomb(%)));
                                             3
                                         30 x  - 30 x
          (%o4) y  = - -------------------------------------------------
                 x        6      5       4       3       2
                       5 x  - 3 x  - 25 x  + 15 x  + 20 x  - 12 x - 1584

     以下も参照してください: ‘solve_rec_rat’, ‘simplify_products’, and
     ‘product_use_gamma’.

 -- 関数: solve_rec_rat (<eqn>, <var>, [<init>])

     線形漸化式の有理解について解きます。 引数の記述については
     solve_recを参照してください。

     この関数を使うには、 最初に ‘load("solve_rec");’で‘solve_rec’パッケ
     ージをロードしてください。

     例:

          (%i1) (x+4)*a[x+3] + (x+3)*a[x+2] - x*a[x+1] + (x^2-1)*a[x];
          (%o1)  (x + 4) a      + (x + 3) a      - x a
                          x + 3            x + 2      x + 1
                                                             2
                                                         + (x  - 1) a
                                                                      x
          (%i2) solve_rec_rat(% = (x+2)/(x+1), a[x]);
                                 1
          (%o2)      a  = ---------------
                      x   (x - 1) (x + 1)

     以下も参照してください: ‘solve_rec’.

 -- オプション変数: product_use_gamma
     デフォルト値: ‘true’

     積を整理する時、 もし‘product_use_gamma’が‘true’なら、 ‘solve_rec’は
     式の中にガンマ函数を導入します。

     以下も参照してください: ‘simplify_products’, ‘solve_rec’.

 -- 関数: summand_to_rec (<summand>, <k>, <n>)
 -- 関数: summand_to_rec (<summand>, [<k>, <lo>, <hi>], <n>)

     和

               hi
              ====
              \
               >     summand
              /
              ====
            k = lo

     が満たす漸化式を返します。 ここで、被和(summand)は<k>と<n>に対して
     超幾何的です。 もし<lo>と<hi>が省略されたら、 それらは‘lo = -inf’、
     ‘hi = inf’と仮定されます。

     この関数を初めて使うには、 ‘load("simplify_sum")’で ‘simplify_sum’パ
     ッケージをロードしてください。

     例:

          (%i1) load("simplify_sum")$
          (%i2) summand: binom(n,k);
          (%o2)                           binomial(n, k)
          (%i3) summand_to_rec(summand,k,n);
          (%o3)                      2 sm  - sm      = 0
                                         n     n + 1
          (%i7) summand: binom(n, k)/(k+1);
                                          binomial(n, k)
          (%o7)                           --------------
                                              k + 1
          (%i8) summand_to_rec(summand, [k, 0, n], n);
          (%o8)               2 (n + 1) sm  - (n + 2) sm      = - 1
                                          n             n + 1


File: maxima.info,  Node: stats,  Next: stirling,  Prev: solve_rec,  Up: Top

77 stats
********

* Menu:

* Introduction to stats::
* Functions and Variables for inference_result::
* Functions and Variables for stats::
* Functions and Variables for special distributions::


File: maxima.info,  Node: Introduction to stats,  Next: Functions and Variables for inference_result,  Prev: Top,  Up: Top

77.1 Introduction to stats
==========================

パッケージ‘stats’は古典的な統計推定や仮説検定手続き一式を含みます。

   これらの関数すべては、 母集団推定と意思決定のための必要な結果を含む
‘inference_result’ Maximaオブジェクトを返します。

   グローバル変数‘stats_numer’は 結果が、浮動小数点やシンボル、有理フォ
ーマットのいずれかで与えられるか制御します; デフォルト値は‘true’で、結果
は浮動小数点フォーマットで返されます。

   パッケージ‘descriptive’はデータ構造(リストと行列)を操作するためのいく
つかのユーティリティを含みます; 例えば、部分サンプルを抽出するためのもの
。 プレインテキストファイルからデータを読むためのパッケージ
‘numericalio’の使い方 に関するいくつかの例も含みます。 詳細は
‘descriptive’と‘numericalio’を参照してください。

   パッケージ‘stats’は、パッケージ‘descriptive’, ‘distrib’,
‘inference_result’をロードします。

   コメント、バグ、提案は、作者<’mario AT edu DOT xunta DOT es’>にコンタ
クトしてください。


File: maxima.info,  Node: Functions and Variables for inference_result,  Next: Functions and Variables for stats,  Prev: Introduction to stats,  Up: Top

77.2 Functions and Variables for inference_result
=================================================

 -- 関数: inference_result (<title>, <values>, <numbers>)

     statsの関数が返す型の ‘inference_result’オブジェクトを構成します。
     引数 <title>は手続き名の文字列です; <values>は形式 ‘symbol =
     value’の要素を持つリストであり、 <numbers>は どの値がデフォルトで表
     示されるか示している 1から ‘length(<values>)’までの範囲の正の整数の
     リストです。

     例:

     これ 長方形に関する結果を示す簡単な例です。 このオブジェクトのタイ
     トルは 文字列 ‘"Rectangle"’であり、 , it stores five results, named
     ‘'base’, ‘'height’, ‘'diagonal’, ‘'area’, ‘'perimeter’ と名付けられ
     た5つの結果を格納しますが、 一番目、二番目、五番目と四番目だけが表
     示されます。 ‘'diagonal’はこのオブジェクトに格納されますが、表示さ
     れません; その値にアクセスするには関数 ‘take_inference’を利用してく
     ださい。

          (%i1) load("inference_result")$
          (%i2) b: 3$ h: 2$
          (%i3) inference_result("Rectangle",
                                  ['base=b,
                                   'height=h,
                                   'diagonal=sqrt(b^2+h^2),
                                   'area=b*h,
                                   'perimeter=2*(b+h)],
                                  [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('diagonal,%);
          (%o4)                        sqrt(13)

     ‘take_inference’も参照してください。

 -- 関数: inferencep (<obj>)

     <obj>が ‘inference_result’オブジェクトか否かに依存して、 ‘true’か
     ‘false’を返します。

 -- 関数: items_inference (<obj>)

     <obj>に格納された項目名のリストを返します。 <obj>は
     ‘inference_result’オブジェクトでなければいけません。

     例:

     ‘inference_result’オブジェクトは ‘'pi’と ‘'e’と名付けられた2つの値
     を格納しますが、 二番目だけが表示されます。 ‘items_inference’関数は
     、 表示されるされないに関係なく、項目すべての名前を返します。

          (%i1) load("inference_result")$
          (%i2) inference_result("Hi", ['pi=%pi,'e=%e],[2]);
                                      |   Hi
          (%o2)                       |
                                      | e = %e
          (%i3) items_inference(%);
          (%o3)                        [pi, e]

 -- 関数: take_inference (<n>, <obj>)
 -- 関数: take_inference (<name>, <obj>)
 -- 関数: take_inference (<list>, <obj>)

     もし <n>が正の整数なら、 <obj>に格納された <n>番目の値を返します。
     もし <name>が項目名なら、そう名付けられた項目を返します。 もし一番
     目の引数が数やシンボルのリストなら、 関数 ‘take_inference’は対応す
     る結果のリストを返します。

     例:

     ‘inference_result’オブジェクトが与えられたとして、 関数
     ‘take_inference’は それに格納されたある情報を抽出するためにコールさ
     れます。

          (%i1) load("inference_result")$
          (%i2) b: 3$ h: 2$
          (%i3) sol: inference_result("Rectangle",
                                      ['base=b,
                                       'height=h,
                                       'diagonal=sqrt(b^2+h^2),
                                       'area=b*h,
                                       'perimeter=2*(b+h)],
                                      [1,2,5,4] );
                                  |   Rectangle
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   height = 2
                                  |
                                  | perimeter = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('base,sol);
          (%o4)                           3
          (%i5) take_inference(5,sol);
          (%o5)                          10
          (%i6) take_inference([1,'diagonal],sol);
          (%o6)                     [3, sqrt(13)]
          (%i7) take_inference(items_inference(sol),sol);
          (%o7)                [3, 2, sqrt(13), 6, 10]

     ‘inference_result’と ‘take_inference’も参照してください。


File: maxima.info,  Node: Functions and Variables for stats,  Next: Functions and Variables for special distributions,  Prev: Functions and Variables for inference_result,  Up: Top

77.3 Functions and Variables for stats
======================================

 -- オプション変数: stats_numer
     デフォルト値: ‘true’

     もし ‘stats_numer’が ‘true’なら、 推定統計的関数は浮動小数点数で結
     果を返します。 もし ‘false’なら、 結果は記号と有理フォーマットで与
     えられます。

 -- 関数: test_mean (<x>)
 -- 関数: test_mean (<x>, <options> ...)

     これは平均t検定です。 引数 <x>は1次元標本を含むリストか列行列です。
     もしオプション ‘'asymptotic’が ‘true’なら、 中心極限定理に基づいた
     漸近検定も実行します。

     オプション:

        • ‘'mean’, デフォルト ‘0’, はチェックされる平均値です。

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’。

        • ‘'dev’, デフォルト ‘'unknown’, は既知の時の標準偏差値です; 有
          効な値は次の通りです: ‘'unknown’か正の式。

        • ‘'conflevel’, デフォルト ‘95/100’, は信頼区間の信頼度です;
          (0,1)内の値を取る式でなければいけません。

        • ‘'asymptotic’, デフォルト ‘false’, は正確確率t検定か、 中心極
          限定理に基づいた漸近検定かどちらを実行するかを示します; 有効な
          値は ‘true’と ‘false’です。

     関数 ‘test_mean’の出力は 以下の結果を示す‘inference_result’ Maximaオ
     ブジェクトです:

       1. ‘'mean_estimate’: 標本平均。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 母平均の信頼度。

       4. ‘'method’: 推定手続き。

       5. ‘'hypotheses’: 検定される帰無と対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するために使われる標本統計の値。

       7. ‘'distribution’: パラメータと合わせて、標本統計分布。

       8. ‘'p_value’: 検定のp値

     例:

     未知の分散で正確確率 <t>検定を実行します。 片側対立 H_1: mean<50に
     対して 帰無仮説は H_0: mean=50です; 結果に従うと、p値が大きすぎ、
     H_0を却下する証拠がありません。

          (%i1) load("stats")$
          (%i2) data: [78,64,35,45,45,75,43,74,42,42]$
          (%i3) test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
                    |                 MEAN TEST
                    |
                    |            mean_estimate = 54.3
                    |
                    |              conf_level = 0.9
                    |
                    | conf_interval = [minf, 61.51314273502712]
                    |
          (%o3)     |  method = Exact t-test. Unknown variance.
                    |
                    | hypotheses = H0: mean = 50 , H1: mean < 50
                    |
                    |       statistic = .8244705235071678
                    |
                    |       distribution = [student_t, 9]
                    |
                    |        p_value = .7845100411786889

     今回、Maximaは 中心極限定理に基づく漸近検定を実行します。 両側対立
     H_1: not equal(mean, 50)に対して 帰無仮説は H_0: equal(mean, 50)で
     す; 結果に従うと、 p値は非常に小さく、 対立 H_1を指示して、H_0は却
     下すべきです。 .  Note that, as indicated by the ‘Method’成分が示す
     ように、 この手続きは多くの標本に適用すべきです。

          (%i1) load("stats")$
          (%i2) test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
                        98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
                        45,51,123,54,151],
                        'asymptotic=true,'mean=50);
                    |                       MEAN TEST
                    |
                    |           mean_estimate = 74.88571428571429
                    |
                    |                   conf_level = 0.95
                    |
                    | conf_interval = [57.72848600856194, 92.04294256286663]
                    |
          (%o2)     |    method = Large sample z-test. Unknown variance.
                    |
                    |       hypotheses = H0: mean = 50 , H1: mean # 50
                    |
                    |             statistic = 2.842831192874313
                    |
                    |             distribution = [normal, 0, 1]
                    |
                    |             p_value = .004471474652002261

 -- 関数: test_means_difference (<x1>, <x2>)
 -- 関数: test_means_difference (<x1>, <x2>, <options> ...)

     これは2つの標本の平均の差 <t>検定です。 引数 <x1>と <x2>は2つの独立
     標本を含むリストか列行列です。 異なる未知の分散の場合 (以下のオプシ
     ョン ‘'dev1’, ‘'dev2’, ‘'varequal’を参照してください)、 自由度の次
     数はWelch近似を使って計算されます。 もしオプション ‘'asymptotic’が
     ‘true’に設定されているなら 中心極限定理に基づく漸近検定も実行します
     。

     オプション:

        • 
        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’。

        • ‘'dev1’, デフォルト ‘'unknown’, 既知の時、これは<x1>標本の標準
          偏差値です; 有効な値は次の通りです: ‘'unknown’もしくは正の式。

        • ‘'dev2’, デフォルト ‘'unknown’, 既知の時、これは<x2>標本の標準
          偏差値です; 有効な値は次の通りです: ‘'unknown’もしくは正の式。

        • ‘'varequal’, デフォルト ‘false’, 分散を等しいと考えるか等しく
          ないと考えるか; このオプションは ‘'dev1’と ‘'dev2’の両方もしく
          はいずれかが ‘'unknown’の時だけ 有効です。

        • ‘'conflevel’, デフォルト ‘95/100’, 信頼区間の信頼度; (0,1)内の
          値を取る式でなければいけません。

        • ‘'asymptotic’, デフォルト ‘false’, 正確確率 <t>検定か 中心極限
          定理に基づく漸近検定どちらを実行するかを示します; 有効な値は
          ‘true’と ‘false’です。

     関数 ‘test_means_difference’の出力は 以下の結果を示す
     ‘inference_result’ Maximaオブジェクトです:

       1. ‘'diff_estimate’: 平均差推定。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 平均差の信頼区間。

       4. ‘'method’: 推定手続き。

       5. ‘'hypotheses’: 検定される帰無、対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値

       7. ‘'distribution’: パラメータを伴う標本統計分布。

       8. ‘'p_value’: 検定のp値。

     例:

     母平均 m_1と m_2で対立 H_1: m_1>m_2に対して 2つの小さな標本 <x>
     <y>で平均が等しいか検定します; 分散は未知で異なると仮定されます。

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_means_difference(x,y,'alternative='greater);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |    conf_interval = [- .04597417812882298, inf]
                      |
          (%o4)       |        method = Exact t-test. Welch approx.
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.838004300728477
                      |
                      |    distribution = [student_t, 8.62758740184604]
                      |
                      |            p_value = .05032746527991905

     前と同じ検定、 しかし今回は分散が等しいと仮定されます。

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: matrix([1.2],[6.9],[38.7],[20.4],[17.2])$
          (%i4) test_means_difference(x,y,'alternative='greater,
                                                           'varequal=true);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |     conf_interval = [- .7722627696897568, inf]
                      |
          (%o4)       |   method = Exact t-test. Unknown equal variances
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.765996124515009
                      |
                      |           distribution = [student_t, 9]
                      |
                      |            p_value = .05560320992529344

 -- 関数: test_variance (<x>)
 -- 関数: test_variance (<x>, <options>, ...)

     これは分散 <chi^2>検定です。 引数 <x>は 正規母集団から取られた1次元
     標本を含む リストか列行列です。

     オプション:

        • ‘'mean’, デフォルト ‘'unknown’, は、既知の時、母平均です。

        • ‘'alternative’, デフォルト ‘'twosided’, 対立仮説です; 有効な値
          は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’.

        • ‘'variance’, デフォルト ‘1’, これはチェックされる分散値(正)で
          す。

        • ‘'conflevel’, デフォルト ‘95/100’, 信頼区間の信頼度; (0,1)内の
          値を取る式でなければいけません。

     関数 ‘test_variance’の出力は 以下の結果を示す‘inference_result’
     Maximaオブジェクトです:

       1. ‘'var_estimate’: 標本分散。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 母分散の信頼区間。

       4. ‘'method’: 推定手続き。

       5. ‘'hypotheses’: 検定される帰無、対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するのに使う標本統計値。

       7. ‘'distribution’: パラメータを伴う標本統計分布。

       8. ‘'p_value’: 検定の p値。

     例:

     平均が未知の母集団の分散が200以上か検定します。

          (%i1) load("stats")$
          (%i2) x: [203,229,215,220,223,233,208,228,209]$
          (%i3) test_variance(x,'alternative='greater,'variance=200);
                       |                  VARIANCE TEST
                       |
                       |              var_estimate = 110.75
                       |
                       |                conf_level = 0.95
                       |
                       |     conf_interval = [57.13433376937479, inf]
                       |
          (%o3)        | method = Variance Chi-square test. Unknown mean.
                       |
                       |    hypotheses = H0: var = 200 , H1: var > 200
                       |
                       |                 statistic = 4.43
                       |
                       |             distribution = [chi2, 8]
                       |
                       |           p_value = .8163948512777689

 -- 関数: test_variance_ratio (<x1>, <x2>)
 -- 関数: test_variance_ratio (<x1>, <x2>, <options> ...)

     これは2つの正規母集団の分散比 <F>検定です。 引数 <x1>と <x2>は 2つ
     の独立標本を含むリストか列行列です。

     オプション:

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’.

        • ‘'mean1’, デフォルト ‘'unknown’, 既知の時、これは<x1>が取られ
          た母集団の平均です。

        • ‘'mean2’, デフォルト ‘'unknown’, 既知の時、これは<x2>が取られ
          た母集団の平均です。

        • ‘'conflevel’, デフォルト ‘95/100’, 比の信頼区間の信頼度;
          (0,1)内の値を取る式でなければいけません。

     関数 ‘test_variance_ratio’の出力は 以下の結果を示す
     ‘inference_result’ Maximaオブジェクトです:

       1. ‘'ratio_estimate’: 標本分散比。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 分散比の信頼区間。

       4. ‘'method’: 推定手続き。

       5. ‘'hypotheses’: 検定される帰無、対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       7. ‘'distribution’: パラメータを伴う標本統計分布。

       8. ‘'p_value’: 検定のp値。

     例:

     前者が後者より大きいという対立仮説に対して、 2つの正規母集団の分散
     の等しさが

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_variance_ratio(x,y,'alternative='greater);
                        |              VARIANCE RATIO TEST
                        |
                        |       ratio_estimate = 2.316933391522034
                        |
                        |               conf_level = 0.95
                        |
                        |    conf_interval = [.3703504689507268, inf]
                        |
          (%o4)         | method = Variance ratio F-test. Unknown means.
                        |
                        | hypotheses = H0: var1 = var2 , H1: var1 > var2
                        |
                        |         statistic = 2.316933391522034
                        |
                        |            distribution = [f, 5, 4]
                        |
                        |          p_value = .2179269692254457

 -- 関数: test_proportion (<x>, <n>)
 -- 関数: test_proportion (<x>, <n>, <options> ...)

     出現率推定。 引数 <x>は 未知の確率でのBernoulli実験の<n>回試行での
     成功回数です。

     オプション:

        • ‘'proportion’, デフォルト ‘1/2’, はチェックされる出現率の値で
          す。

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’.

        • ‘'conflevel’, デフォルト ‘95/100’, 比の信頼区間の信頼度;
          (0,1)内の値を取る式でなければいけません。

        • ‘'asymptotic’, デフォルト ‘false’, 二項分布に基づく正確確率
          <t>検定か 中心極限定理に基づく漸近検定どちらを実行するかを示し
          ます; 有効な値は ‘true’と ‘false’です。

        • ‘'correct’, デフォルト ‘true’, Yates補正が適用されるかどうかを
          示します。

     The output of function 関数 ‘test_proportion’の出力は 以下の結果を
     示す ‘inference_result’ Maximaオブジェクトです:

       1. ‘'sample_proportion’: 標本出現率。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 出現率のWilson信頼区間。

       4. ‘'method’: 推定手続き。

       5. ‘'hypotheses’: 検定される帰無、対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       7. ‘'distribution’: パラメータを伴う標本統計分布。

       8. ‘'p_value’: 検定のp値。

     例:

     正確確率検定を実行します。 片側対立 H_1: p<1/2に対して、 帰無仮説は
     H_0: p=1/2です。

          (%i1) load("stats")$
          (%i2) test_proportion(45, 103, alternative = less);
                   |            PROPORTION TEST
                   |
                   | sample_proportion = .4368932038834951
                   |
                   |           conf_level = 0.95
                   |
                   | conf_interval = [0, 0.522714149150231]
                   |
          (%o2)    |     method = Exact binomial test.
                   |
                   | hypotheses = H0: p = 0.5 , H1: p < 0.5
                   |
                   |             statistic = 45
                   |
                   |  distribution = [binomial, 103, 0.5]
                   |
                   |      p_value = .1184509388901454

     両側漸近検定。信頼度は99/100です。

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportion(45, 103,
                            conflevel = 99/100, asymptotic=true);
                |                 PROPORTION TEST
                |
                |           sample_proportion = .43689
                |
                |                conf_level = 0.99
                |
                |        conf_interval = [.31422, .56749]
                |
          (%o3) | method = Asympthotic test with Yates correction.
                |
                |     hypotheses = H0: p = 0.5 , H1: p # 0.5
                |
                |               statistic = .43689
                |
                |      distribution = [normal, 0.5, .048872]
                |
                |                p_value = .19662

 -- 関数: test_proportions_difference (<x1>, <n1>, <x2>, <n2>)
 -- 関数: test_proportions_difference (<x1>, <n1>, <x2>, <n2>, <options>
          ...)

     2つの出現率の差の推定。 引数 <x1>は 一番目の母集団でのBernoulli実験
     の <n1>回の試行での成功回数であり、 <x2>と <n2>は 二番目の母集団で
     の対応する値です。 標本は独立で、検定は漸近です。

     オプション:

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’ (‘p1 # p2’), ‘'greater’ (‘p1 >
          p2’), ‘'less’ (‘p1 < p2’).

        • ‘'conflevel’, デフォルト ‘95/100’, 比の信頼区間の信頼度;
          (0,1)内の値を取る式でなければいけません。

        • ‘'correct’, デフォルト ‘true’, はYates補正が適用されるかどうか
          を示します。

     関数 ‘test_proportions_difference’の出力は 以下の結果を示す
     ‘inference_result’ Maximaオブジェクトです:

       1. ‘'proportions’: 2つの標本出現率のリスト。

       2. ‘'conf_level’: ユーザーが選択した信頼度。

       3. ‘'conf_interval’: 出現率の差 ‘p1 - p2’の信頼区間。

       4. ‘'method’: 推定手続きと 標本サイズのいずれかが10より小さい場合
          の警告メッセージ

       5. ‘'hypotheses’: 検定される帰無、対立仮説。

       6. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       7. ‘'distribution’: パラメータを伴う標本統計分布。

       8. ‘'p_value’: 検定のp値。

     例:

     機械が250個のうち、10個の欠陥製品を製造しました。 その機械は、ある
     保守作業のあと、 150個のうち、4個の欠陥製品を製造しました。 機械が
     改善したか知るために、 対立 ‘H0:p1>p2’に対して 帰無仮説 ‘H0:p1=p2’を
     検定します。 ここで、 ‘p1’と ‘p2’は 保守の前と後で製造された製品が
     欠陥である確率です。 p値に従うと、対立を受け入れる十分な証拠はあり
     ません。

          (%i1) load("stats")$
          (%i2) fpprintprec:7$
          (%i3) test_proportions_difference(10, 250, 4, 150,
                                          alternative = greater);
                |       DIFFERENCE OF PROPORTIONS TEST
                |
                |       proportions = [0.04, .02666667]
                |
                |              conf_level = 0.95
                |
                |      conf_interval = [- .02172761, 1]
                |
          (%o3) | method = Asymptotic test. Yates correction.
                |
                |   hypotheses = H0: p1 = p2 , H1: p1 > p2
                |
                |            statistic = .01333333
                |
                |    distribution = [normal, 0, .01898069]
                |
                |             p_value = .2411936

     データが未知の時の漸近正規分布の正確確率標準偏差。

          (%i1) load("stats")$
          (%i2) stats_numer: false$
          (%i3) sol: test_proportions_difference(x1,n1,x2,n2)$
          (%i4) last(take_inference('distribution,sol));
                         1    1                  x2 + x1
                        (-- + --) (x2 + x1) (1 - -------)
                         n2   n1                 n2 + n1
          (%o4)    sqrt(---------------------------------)
                                     n2 + n1

 -- 関数: test_sign (<x>)
 -- 関数: test_sign (<x>, <options> ...)

     これは連続母集団のメジアンに関するノンパラメトリック符号検定です。
     引数 <x>は1次元標本を含むリストか列行列です。

     オプション:

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’, ‘'less’.

        • ‘'median’, デフォルト ‘0’, はチェックされるメジアン値です。

     関数 ‘test_sign’の出力は 以下の結果を示す ‘inference_result’
     Maximaオブジェクトです:

       1. ‘'med_estimate’: 標本メジアン。

       2. ‘'method’: 推定手続き。

       3. ‘'hypotheses’: 検定される帰無、対立仮説。

       4. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       5. ‘'distribution’: パラメータを伴う標本統計分布。

       6. ‘'p_value’: 検定のp値。

     例:

     対立 H_1: median > 6に対して、 標本が採られた母集団がメジアン6を持
     つかどうかチェックします。

          (%i1) load("stats")$
          (%i2) x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
          (%i3) test_sign(x,'median=6,'alternative='greater);
                         |                  SIGN TEST
                         |
                         |              med_estimate = 5.1
                         |
                         |      method = Non parametric sign test.
                         |
          (%o3)          | hypotheses = H0: median = 6 , H1: median > 6
                         |
                         |                statistic = 7
                         |
                         |      distribution = [binomial, 10, 0.5]
                         |
                         |         p_value = .05468749999999989

 -- 関数: test_signed_rank (<x>)
 -- 関数: test_signed_rank (<x>, <options> ...)

     これは 連続母集団のメジアンに関する推定を行う Wilcoxonの符号順位検
     定です。 引数 <x>は 1次元標本を含む リストか列行列です。 もし標本サ
     イズが20より大きいか、複数の零すなわち引き分けがあれば、 正規近似を
     実行します

     ‘pdf_rank_test’と ‘cdf_rank_test’も参照してください。

     オプション:

        • ‘'median’, デフォルト ‘0’, はチェックされるメジアン値です。

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’ and ‘'less’.

     関数 ‘test_signed_rank’の出力は 以下の結果を持つ ‘inference_result’
     Maximaオブジェクトです:

       1. ‘'med_estimate’: 標本メジアン。

       2. ‘'method’: 推定手続き。

       3. ‘'hypotheses’: 検定される帰無、対立仮説。

       4. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       5. ‘'distribution’: パラメータを伴う標本統計分布。

       6. ‘'p_value’: 検定のp値。

     例:

     対立 H_1: median > 15に対して 帰無仮説 H_0: median = 15をチェックし
     ます。 引き分けがないので、これは正確確率検定です。

          (%i1) load("stats")$
          (%i2) x: [17.1,15.9,13.7,13.4,15.5,17.6]$
          (%i3) test_signed_rank(x,median=15,alternative=greater);
                           |             SIGNED RANK TEST
                           |
                           |           med_estimate = 15.7
                           |
                           |           method = Exact test
                           |
          (%o3)            | hypotheses = H0: med = 15 , H1: med > 15
                           |
                           |              statistic = 14
                           |
                           |     distribution = [signed_rank, 6]
                           |
                           |            p_value = 0.28125

     Checks the null hypothesis H_0: equal(median, 2.5) against the
     alternative H_1: not equal(median, 2.5).  This is an approximated
     test, since there are ties.

          (%i1) load("stats")$
          (%i2) y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
          (%i3) test_signed_rank(y,median=2.5);
                       |                 SIGNED RANK TEST
                       |
                       |                med_estimate = 2.9
                       |
                       |          method = Asymptotic test. Ties
                       |
          (%o3)        |    hypotheses = H0: med = 2.5 , H1: med # 2.5
                       |
                       |                 statistic = 76.5
                       |
                       | distribution = [normal, 60.5, 17.58195097251724]
                       |
                       |           p_value = .3628097734643669

 -- 関数: test_rank_sum (<x1>, <x2>)
 -- 関数: test_rank_sum (<x1>, <x2>, <option>)

     これは 2つの連続母集団のメジアンを比較するWilcoxon-Mann-Whitney検定
     です。 最初の2つの引数 <x1>と <x2>は 2つの独立標本のデータを持つリ
     ストか列行列です。 もし標本サイズのいずれかが10より大きいか、 引き
     分けがあるなら、 正規近似を実行します。

     オプション:

        • ‘'alternative’, デフォルト ‘'twosided’, は対立仮説です; 有効な
          値は次の通りです: ‘'twosided’, ‘'greater’ and ‘'less’.

     The output of function 関数 ‘test_rank_sum’の出力は 以下の結果を持
     つ ‘inference_result’ Maximaオブジェクトです:

       1. ‘'method’: 推定手続き。

       2. ‘'hypotheses’: 検定される帰無、対立仮説。

       3. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       4. ‘'distribution’: パラメータを伴う標本統計分布。

       5. ‘'p_value’: 検定のp値。

     例:

     母集団が似たメジアンを持つかチェックします。 標本サイズは小さく、正
     確確率検定がされます。

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) y:[21,18,25,14,52,65,40,43]$
          (%i4) test_rank_sum(x,y);
                        |                 RANK SUM TEST
                        |
                        |              method = Exact test
                        |
                        | hypotheses = H0: med1 = med2 , H1: med1 # med2
          (%o4)         |
                        |                 statistic = 22
                        |
                        |        distribution = [rank_sum, 9, 8]
                        |
                        |          p_value = .1995886466474702

     次は、 より大きな標本で引き分けを含み、 手続きは正規近似をします。
     対立仮説は H_1: median1 < median2です。

          (%i1) load("stats")$
          (%i2) x: [39,42,35,13,10,23,15,20,17,27]$
          (%i3) y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
          (%i4) test_rank_sum(x,y,'alternative='less);
                       |                  RANK SUM TEST
                       |
                       |          method = Asymptotic test. Ties
                       |
                       |  hypotheses = H0: med1 = med2 , H1: med1 < med2
          (%o4)        |
                       |                 statistic = 48.5
                       |
                       | distribution = [normal, 79.5, 18.95419580097078]
                       |
                       |           p_value = .05096985666598441

 -- 関数: test_normality (<x>)

     正規性のShapiro-Wilk検定。 引数 <x>は 数のリストであり、 標本サイズ
     は2より大きく、5000以下でなければいけません。 そうでないなら、関数
     ‘test_normality’はエラーメッセージをシグナルします。

     参考文献:

     [1] Algorithm AS R94, Applied Statistics (1995), vol.44, no.4,
     547-551

     関数 ‘test_normality’の出力は 以下の結果を持つ ‘inference_result’
     Maximaオブジェクトです:

       1. ‘'statistic’: <W>統計値

       2. ‘'p_value’: 正規仮定のp値。

     例:

     サイズ9の標本に基づいて母集団の正規性をチェックします。

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) test_normality(x);
                                 |      SHAPIRO - WILK TEST
                                 |
          (%o3)                  | statistic = .9251055695162436
                                 |
                                 |  p_value = .4361763918860381

 -- 関数: simple_linear_regression (<x>)
 -- 関数: simple_linear_regression (<x> <option>)

     単回帰 y_i=a+b x_i+e_i。 ここで、 e_iは N(0,sigma)の独立確率変数で
     す 引数 <x>は2つの列行列か対のリストでなければいけません。

     オプション:

        • ‘'conflevel’, デフォルト ‘95/100’, 比の信頼区間の信頼度;
          (0,1)内の値を取る式でなければいけません。

        • ‘'regressor’, デフォルト ‘'x’, 独立変数名。

     関数 ‘simple_linear_regression’の出力は 以下の結果を持つ
     ‘inference_result’ Maximaオブジェクトです:

       1. ‘'model’: 適合方程式。 新しい予測を行うのに役立ちます。 以下の
          例を参照してください。

       2. ‘'means’: 二変量平均。

       3. ‘'variances’: 両方の変数の分散。

       4. ‘'correlation’: 相関係数。

       5. ‘'adc’: 調整済み決定係数。

       6. ‘'a_estimation’: パラメータ <a>の推定。

       7. ‘'a_conf_int’: パラメータ <a>の信頼区間。

       8. ‘'b_estimation’: パラメータ <b>の推定。

       9. ‘'b_conf_int’: パラメータ <b>の信頼区間。

       10. ‘'hypotheses’: パラメータ <b>について検定される帰無、対立仮説
          。

       11. ‘'statistic’: 帰無仮説を検定するのに使われる標本統計値。

       12. ‘'distribution’: パラメータを伴う標本統計分布。

       13. ‘'p_value’: <b>についての検定のp値。

       14. ‘'v_estimation’: 不偏分散推定もしくは残差分散。

       15. ‘'v_conf_int’: 分散信頼区間。

       16. ‘'cond_mean_conf_int’: 条件付き平均の信頼区間。 以下の例を参
          照してください。

       17. ‘'new_pred_conf_int’: 新しい予測の信頼区間。 以下の例を参照し
          てください。

       18. ‘'residuals’: 予測に関して並べ替えられた対(予測, 残差)のリス
          ト これは適合度分析に役に立ちます。 以下の例を参照してください
          。

     Only items 上の項目 1, 4, 14, 9, 10, 11, 12, 13だけが この順で、デ
     フォルトで表示されます。 残りは ユーザーが関数 ‘items_inference’と
     ‘take_inference’を利用するまで 隠されたままです。

     例:

     線形モデルの二変量標本へのフィッティング。 入力 ‘%i4’は 回帰線と一
     緒に標本をプロットします; 入力 ‘%i5’は ‘x=113’が与えられたとして
     ‘y’を計算します; ‘x=113’の時 平均と、新しい予測の信頼区間も計算され
     ます。

          (%i1) load("stats")$
          (%i2) s:[[125,140.7], [130,155.1], [135,160.3], [140,167.2],
                                                          [145,169.8]]$
          (%i3) z:simple_linear_regression(s,conflevel=0.99);
                     |               SIMPLE LINEAR REGRESSION
                     |
                     |   model = 1.405999999999985 x - 31.18999999999804
                     |
                     |           correlation = .9611685255255155
                     |
                     |           v_estimation = 13.57966666666665
                     |
          (%o3)      | b_conf_int = [.04469633662525263, 2.767303663374718]
                     |
                     |          hypotheses = H0: b = 0 ,H1: b # 0
                     |
                     |            statistic = 6.032686683658114
                     |
                     |            distribution = [student_t, 3]
                     |
                     |             p_value = 0.0038059549413203
          (%i4) plot2d([[discrete, s], take_inference(model,z)],
                  [x,120,150],
                  [gnuplot_curve_styles, ["with points","with lines"]] )$
          (%i5) take_inference(model,z), x=133;
          (%o5)                         155.808
          (%i6) take_inference(means,z);
          (%o6)                     [135.0, 158.62]
          (%i7) take_inference(new_pred_conf_int,z), x=133;
          (%o7)              [132.0728595995113, 179.5431404004887]


File: maxima.info,  Node: Functions and Variables for special distributions,  Prev: Functions and Variables for stats,  Up: Top

77.4 Functions and Variables for special distributions
======================================================

 -- 関数: pdf_signed_rank (<x>, <n>)
     符号順位統計の正確確率分布の確率密度関数。 引数 <x>は実数であり、
     <n>は正の整数です。

     ‘test_signed_rank’も参照してください。

 -- 関数: cdf_signed_rank (<x>, <n>)
     符号順位統計の正確確率分布の累積密度関数。 引数 <x>は実数であり、
     <n>は正の整数です。

     ‘test_signed_rank’も参照してください。

 -- 関数: pdf_rank_sum (<x>, <n>, <m>)
     順位和統計の正確確率分布の確率密度関数。 引数 <x>は実数であり、
     <n>と <m>はともに正の整数です。

     ‘test_rank_sum’も参照してください。

 -- 関数: cdf_rank_sum (<x>, <n>, <m>)
     順位和統計の正確確率分布の累積密度関数。 引数 <x>は実数であり、
     <n>と <m>はともに正の整数です。

     ‘test_rank_sum’も参照してください。


File: maxima.info,  Node: stirling,  Next: stringproc,  Prev: stats,  Up: Top

78 stirling
***********

* Menu:

* Functions and Variables for stirling::


File: maxima.info,  Node: Functions and Variables for stirling,  Prev: stirling,  Up: stirling

78.1 Functions and Variables for stirling
=========================================

 -- 関数: stirling (<z>,<n>)
 -- 関数: stirling (<z>,<n>,<pred>)

     ‘gamma(x)’を O(1/x^(2n-1))Stirling公式で置き換えます。 <n>が非負の
     整数の時、エラーを知らせます。 オプションの三番目の引数‘pred’がある
     と、 ‘pred’がtrueの時だけ Stirling公式は適用されます。

     参照文献: Abramowitz & Stegun, " Handbook of mathematical
     functions", 6.1.40.

     例:
          (%i1) load ("stirling")$

          (%i2) stirling(gamma(%alpha+x)/gamma(x),1);
                 1/2 - x             x + %alpha - 1/2
          (%o2) x        (x + %alpha)
                                             1           1
                                      --------------- - ---- - %alpha
                                      12 (x + %alpha)   12 x
                                    %e
          (%i3) taylor(%,x,inf,1);
                              %alpha       2    %alpha
                    %alpha   x       %alpha  - x       %alpha
          (%o3)/T/ x       + -------------------------------- + . . .
                                           2 x
          (%i4) map('factor,%);
                                                 %alpha - 1
                   %alpha   (%alpha - 1) %alpha x
          (%o4)   x       + -------------------------------
                                            2

     関数‘stirling’は変数’gamma’と関数gammaの違いを知っています:

          (%i5) stirling(gamma + gamma(x),0);
                                              x - 1/2   - x
          (%o5)    gamma + sqrt(2) sqrt(%pi) x        %e
          (%i6) stirling(gamma(y) + gamma(x),0);
                                   y - 1/2   - y
          (%o6) sqrt(2) sqrt(%pi) y        %e
                                                        x - 1/2   - x
                                   + sqrt(2) sqrt(%pi) x        %e

     変数‘k’を含む項だけに Stirling公式を適用するために オプションの三番
     目の引数を使います; 例えば、
          (%i7) makegamma(pochhammer(a,k)/pochhammer(b,k));
          (%o7) (gamma(b)*gamma(k+a))/(gamma(a)*gamma(k+b))
          (%i8) stirling(%,1, lambda([s], not(freeof(k,s))));
          (%o8) (%e^(b-a)*gamma(b)*(k+a)^(k+a-1/2)*(k+b)^(-k-b+1/2))/gamma(a)
     項‘gamma(a)’と‘gamma(b)’は、 ‘k’を含まないので、 Stirling公式はこれ
     ら２つの項に適用されませんでした。

     この関数を使うには、最初に‘load("stirling")’を書いてください。


File: maxima.info,  Node: stringproc,  Next: to_poly_solve,  Prev: stirling,  Up: Top

79 stringproc
*************

* Menu:

* Introduction to string processing::
* Functions and Variables for input and output::
* Functions and Variables for characters::
* Functions and Variables for strings::


File: maxima.info,  Node: Introduction to string processing,  Next: Functions and Variables for input and output,  Prev: stringproc,  Up: stringproc

79.1 Introduction to string processing
======================================

‘stringproc.lisp’は、 enlarges Maximaの文字列を扱う機能を拡大し、 ファイ
ル入出力に関するいくつかの役立つ関数を追加します。

   質問とバグに関して、van.nek at arcor.deにメールしてください。

   Maximaでは、 文字列は、"text"とタイプすることで簡単に構成することがで
きます。 ‘stringp’は文字列かテストします。

     (%i1) m: "text";
     (%o1)                         text
     (%i2) stringp(m);
     (%o2)                         true

   文字は長さ1の文字列として表されます。 これらはLisp文字ではありません
。 テストは ‘charp’で行うことができます。 (関連として、‘lcharp’と
‘cunlisp’を使ったLisp文字からMaxima文字への変換)

     (%i1) c: "e";
     (%o1)                           e
     (%i2) [charp(c),lcharp(c)];
     (%o2)                     [true, false]
     (%i3) supcase(c);
     (%o3)                           E
     (%i4) charp(%);
     (%o4)                         true

   ‘stringproc.lisp’の中の、文字を返す関数すべては、Maxima文字を返します
。 導入された文字が長さ1の文字列だという事実のおかげで、たくさんの文字列
関数を文字にも使うことができます。 既に見たように、 ‘supcase’は１例です
。

   Maxima文字列の最初の文字は位置1にあることを知ることは重要です。 これ
は、Maximaリストの中の最初の要素も位置1にあるという事実によって設計され
ています。 例えば、‘charat’や‘charlist’の定義を見てください。

   応用として、 文字列関数はしばしばファイルを扱う時に使われます。
‘stringproc.lisp’の中に役立つストリーム関数、印字関数を見つけるでしょう
。 以下の例はここで導入された関数のいくつかがいかに働くか示します。

   例:

   ‘openw’は、ファイルへの出力ストリームを返し、 ‘printf’は、このファイ
ルへのフォーマットされた書き込みを可能にします。 詳細は‘printf’を参照し
てください。

     (%i1) s: openw("E:/file.txt");
     (%o1)                    #<output stream E:/file.txt>
     (%i2) for n:0 thru 10 do printf( s, "~d ", fib(n) );
     (%o2)                                done
     (%i3) printf( s, "~%~d ~f ~a ~a ~f ~e ~a~%",
                   42,1.234,sqrt(2),%pi,1.0e-2,1.0e-2,1.0b-2 );
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true

   ストリームを閉じた後、今度は入力方向で再び開くことができます。
‘readline’は行全体を１つの文字列として返します。 現在、‘stringproc’パッ
ケージは 文字列を操作するたくさんの関数を提供しています。 ‘split’や
‘tokens’でトークン化できます。

     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) readline(s);
     (%o6)                     0 1 1 2 3 5 8 13 21 34 55
     (%i7) line: readline(s);
     (%o7)               42 1.234 sqrt(2) %pi 0.01 1.0E-2 1.0b-2
     (%i8) list: tokens(line);
     (%o8)           [42, 1.234, sqrt(2), %pi, 0.01, 1.0E-2, 1.0b-2]
     (%i9) map( parse_string, list );
     (%o9)            [42, 1.234, sqrt(2), %pi, 0.01, 0.01, 1.0b-2]
     (%i10) float(%);
     (%o10) [42.0, 1.234, 1.414213562373095, 3.141592653589793, 0.01,
                                                          0.01, 0.01]
     (%i11) readline(s);
     (%o11)                               false
     (%i12) close(s)$

   ファイルの終わりに来ると、 ‘readline’は‘false’を返します。


File: maxima.info,  Node: Functions and Variables for input and output,  Next: Functions and Variables for characters,  Prev: Introduction to string processing,  Up: stringproc

79.2 Functions and Variables for input and output
=================================================

例:

     (%i1) s: openw("E:/file.txt");
     (%o1)                     #<output stream E:/file.txt>
     (%i2) control:
     "~2tAn atom: ~20t~a~%~2tand a list: ~20t~{~r ~}~%~2t\
     and an integer: ~20t~d~%"$
     (%i3) printf( s,control, 'true,[1,2,3],42 )$
     (%o3)                                false
     (%i4) close(s);
     (%o4)                                true
     (%i5) s: openr("E:/file.txt");
     (%o5)                     #<input stream E:/file.txt>
     (%i6) while stringp( tmp:readline(s) ) do print(tmp)$
       An atom:          true
       and a list:       one two three
       and an integer:   42
     (%i7) close(s)$

 -- 関数: close (<stream>)
     <stream>を閉じて、 もし<stream>が開いていたら ‘true’を返します。

 -- 関数: flength (<stream>)
     <stream>の中の要素の数を返します。

 -- 関数: fposition (<stream>)
 -- 関数: fposition (<stream>, <pos>)
     もし<pos>が使われてないなら、 <stream>の中の現在位置を返します。 も
     し<pos>が使われているなら、 ‘fposition’は<stream>の中の位置を設定し
     ます。 <pos>は正の数でなければいけません。 <stream>の最初の要素は位
     置1にあります。

 -- 関数: freshline ()
 -- 関数: freshline (<stream>)
     もし位置が行の最初でないなら (<stream>に)改行を書きます。
     ‘newline’も参照してください。

 -- 関数: newline ()
 -- 関数: newline (<stream>)
     (<stream>に)改行を書きます。 ‘newline()’の使用の例に関しては、
     ‘sprint’を参照してください。 ‘newline()’が期待通りに動かない いくつ
     かの場合があることに注意してください。

 -- 関数: opena (<file>)
     <file>への出力ストリームを返します。 もし存在しているファイルを開い
     たら、 ‘opena’はファイルの終わりに要素を追加します。

 -- 関数: openr (<file>)
     <file>への入力ストリームを返します。 もし<file>が存在しないなら、生
     成されます。

 -- 関数: openw (<file>)
     <file>への出力ストリームを返します。 もし<file>が存在しないなら、生
     成されます。 もし存在しているファイルを開いたら、‘openw’は <file>を
     破壊的に変更します。

 -- 関数: printf (<dest>, <string>)
 -- 関数: printf (<dest>, <string>, <expr_1>, ..., <expr_n>)
     Common Lisp関数FORMATをMaximaで利用可能にします。 (gcl.infoから: 「
     フォーマットは 制御文字列の文字を出力し、波形記号がディレクティブを
     挿入することを守ることで、 フォーマットされた出力を生成します。 波
     形記号の後の文字は多分、前置パラメータと修飾語が先行し、 望まれるフ
     ォーマットの種類を指定します。 ほとんどのディレクティブは、出力を生
     成するために1つまたは複数の引数を使います。」)

     以下の記述と例は‘printf’を使うアイデアを与えるかもしれません。 さら
     なる情報に関して、Lisp参考文献を参照してください。

             ~%       改行
             ~&       行のフレッシュ
             ~t       タブ
             ~$       通貨記号
             ~d       10進整数
             ~b       2進整数
             ~o       8進整数
             ~x       16進整数
             ~br      b進整数
             ~r       整数を一字一字
             ~p       複数形
             ~f       浮動小数点
             ~e       科学的記数法
             ~g       大きさに応じて~fまたは~e
             ~h       多倍長浮動小数点
             ~a       Maxima関数文字列を使う
             ~s       ~aと同様, しかし"ダブルコーテーション"で囲まれた出力
             ~~       ~
             ~<       行揃え, ~> 終端
             ~(       大文字小文字変換, ~) 終端
             ~[       選択, ~] 終端
             ~{       繰り返し, ~} 終端

     選択ディレクティブ‘~[’は添字がゼロから始まることに注意してください
     。 ディレクティブ~*がサポートされていないことにも注意してください。

          (%i1) printf( false, "~a ~a ~4f ~a ~@r",
                        "String",sym,bound,sqrt(12),144), bound = 1.234;
          (%o1)                 String sym 1.23 2*sqrt(3) CXLIV
          (%i2) printf( false,"~{~a ~}",["one",2,"THREE"] );
          (%o2)                          one 2 THREE
          (%i3) printf(true,"~{~{~9,1f ~}~%~}",mat ),
                    mat = args(matrix([1.1,2,3.33],[4,5,6],[7,8.88,9]))$
                1.1       2.0       3.3
                4.0       5.0       6.0
                7.0       8.9       9.0
          (%i4) control: "~:(~r~) bird~p ~[is~;are~] singing."$
          (%i5) printf( false,control, n,n,if n=1 then 0 else 1 ), n=2;
          (%o5)                    Two birds are singing.

     もし<dest>がストリームか‘true’なら、 ‘printf’は‘false’を返します。
     そうでないなら、‘printf’は出力を含む文字列を返します。

 -- 関数: readline (<stream>)
     <stream>の現在位置から行の終わりまでの文字を含む文字列か、 もしファ
     イルの終わりが来たら<false>を返します。

 -- 関数: sprint (<expr_1>, …, <expr_n>)

     引数を順に評価し、一番左から始まる「一行」に表示します。 数は数の右
     隣に’-’と共に印字され、行の長さを無視します。 もし中間行ブレークを
     置きたいなら、 ‘newline()’―‘stringproc.lisp’ から自動ロードされます
     ― が役に立つかもしれません。

     例:

          (%i1) for n:0 thru 19 do sprint( fib(n) )$
          0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181
          (%i2) for n:0 thru 22 do (
                   sprint(fib(n)), if mod(n,10)=9 then newline() )$
          0 1 1 2 3 5 8 13 21 34
          55 89 144 233 377 610 987 1597 2584 4181
          6765 10946 17711


File: maxima.info,  Node: Functions and Variables for characters,  Next: Functions and Variables for strings,  Prev: Functions and Variables for input and output,  Up: stringproc

79.3 Functions and Variables for characters
===========================================

 -- 関数: alphacharp (<char>)
     もし<char>がアルファベット文字なら‘true’を返します。

 -- 関数: alphanumericp (<char>)
     もし<char>がアルファベット文字か数字なら‘true’を返します。

 -- 関数: ascii (<int>)
     ASCIIコード<int>( -1 < int < 256 )に対応する文字を返します。

          (%i1) for n from 0 thru 255 do (
             tmp: ascii(n), if alphacharp(tmp) then sprint(tmp),
                if n=96 then newline() )$
          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
          a b c d e f g h i j k l m n o p q r s t u v w x y z

 -- 関数: cequal (<char_1>, <char_2>)
     もし<char_1>と<char_2>が同じなら‘true’を返します。

 -- 関数: cequalignore (<char_1>, <char_2>)
     ‘cequal’と同様ですが、文字の大小を無視します。

 -- 関数: cgreaterp (<char_1>, <char_2>)
     もし<char_1>のASCIIコードが<char_2>のそれより大きいなら‘true’を返し
     ます。

 -- 関数: cgreaterpignore (<char_1>, <char_2>)
     ‘cgreaterp’と同様ですが、文字の大小を無視します。

 -- 関数: charp (<obj>)
     もし<obj>がMaxima-文字なら‘true’を返します。 例えばイントロダクショ
     ンを参照してください。

 -- 関数: cint (<char>)
     <char>のASCIIコードを返します。

 -- 関数: clessp (<char_1>, <char_2>)
     もし<char_1>のASCIIコードが<char_2>のそれより小さいなら‘true’を返し
     ます。

 -- 関数: clesspignore (<char_1>, <char_2>)
     ‘clessp’と同様ですが、文字の大小を無視します。

 -- 関数: constituent (<char>)
     もし<char>がグラフィック文字であり、スペース文字でないなら、
     ‘true’を返します。 グラフィック文字は見ることができる文字とスペース
     文字です。 (‘constituent’は、Paul Graham, ANSI Common Lisp, 1996,
     page 67で定義されています。)

          (%i1) for n from 0 thru 255 do (
          tmp: ascii(n), if constituent(tmp) then sprint(tmp) )$
          ! " #  %  ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B
          C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c
          d e f g h i j k l m n o p q r s t u v w x y z { | } ~

 -- 関数: cunlisp (<lisp_char>)
     Lisp文字をMaxima文字に変換します。 (必要としないでしょう。)

 -- 関数: digitcharp (<char>)
     もし<char>が0から9までの数字なら、 ‘true’を返します。

 -- 関数: lcharp (<obj>)
     もし <obj>がLisp文字なら、‘true’を返します。 (必要としないでしょう
     。)

 -- 関数: lowercasep (<char>)
     もし<char>が小文字なら、‘true’を返します。

 -- 変数: newline
     改行文字。

 -- 変数: space
     スペース文字。

 -- 変数: tab
     タブ文字。

 -- 関数: uppercasep (<char>)
     もし<char>が大文字なら、‘true’を返します。


File: maxima.info,  Node: Functions and Variables for strings,  Prev: Functions and Variables for characters,  Up: stringproc

79.4 Functions and Variables for strings
========================================

 -- 関数: stringp (<obj>)
     もし<obj>が文字列なら、‘true’を返します。 例はイントロダクションを
     参照してください。

 -- 関数: charat (<string>, <n>)
     <string>の<n>番目の文字を返します。 <string>の一番目の文字は<n> =
     1で返されます。

          (%i1) charat("Lisp",1);
          (%o1)                           L

 -- 関数: charlist (<string>)
     <string>の文字すべてのリストを返します。

          (%i1) charlist("Lisp");
          (%o1)                     [L, i, s, p]
          (%i2) %[1];
          (%o2)                           L

 -- 関数: eval_string (<str>)
     文字列<str>をMaxima式としてパースし、評価します。 文字列<str>は終端
     子(ドル記号‘$’またはセミコロン‘;’) を持つかもしれませんし持たないか
     もしれません。

     もし複数あるなら、最初の式だけがパースされ、評価されます。

     もし<str>が文字列でないならエラーが出力されます。

     例:

          (%i1) eval_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                       42
          (%i2) eval_string ("(foo: 42, bar: foo^2 + baz)");
          (%o2)                   baz + 1764

     ‘parse_string’も参照してください。

 -- 関数: parse_string (<str>)
     文字列<str>をMaxima式としてパースします(評価しません)。 文字列
     <str>は終端子(ドル記号‘$’またはセミコロン‘;’) を持つかもしれません
     し持たないかもしれません。

     もし複数あるなら、最初の式だけがパースされ、評価されます。

     もし<str>が文字列でないならエラーが出力されます。

     例:

          (%i1) parse_string ("foo: 42; bar: foo^2 + baz");
          (%o1)                    foo : 42
          (%i2) parse_string ("(foo: 42, bar: foo^2 + baz)");
                                             2
          (%o2)          (foo : 42, bar : foo  + baz)

     ‘eval_string’も参照してください。

 -- 関数: scopy (<string>)
     <string>のコピーを新しい文字列として返します。

 -- 関数: sdowncase (<string>)
 -- 関数: sdowncase (<string>, <start>)
 -- 関数: sdowncase (<string>, <start>, <end>)
     ‘supcase’と同様ですが、大文字が小文字に変換されます。

 -- 関数: sequal (<string_1>, <string_2>)
     もし<string_1>と<string_2>が同じ長さで、同じ文字を含むなら、
     ‘true’を返します。

 -- 関数: sequalignore (<string_1>, <string_2>)
     ‘sequal’と同様ですが、文字の大小を無視します。

 -- 関数: sexplode (<string>)
     ‘sexplode’は関数‘charlist’の別名です。

 -- 関数: simplode (<list>)
 -- 関数: simplode (<list>, <delim>)
     ‘simplode’は式のリストを取り、それらを結合して文字列にします。 もし
     デリミタ<delim>が指定されないなら、 ‘simplode’はデリミタを使いませ
     ん。 <delim>は任意の文字列を取り得ます。

          (%i1) simplode(["xx[",3,"]:",expand((x+y)^3)]);
          (%o1)             xx[3]:y^3+3*x*y^2+3*x^2*y+x^3
          (%i2) simplode( sexplode("stars")," * " );
          (%o2)                   s * t * a * r * s
          (%i3) simplode( ["One","more","coffee."]," " );
          (%o3)                   One more coffee.

 -- 関数: sinsert (<seq>, <string>, <pos>)
     ‘substring (<string>, 1, <pos> - 1)’と 文字列<seq>、‘substring
     (<string>, <pos>)’ の結合となる文字列を返します。 <string>の一番目
     の文字は位置1にあることに注意してください。

          (%i1) s: "A submarine."$
          (%i2) concat( substring(s,1,3),"yellow ",substring(s,3) );
          (%o2)                  A yellow submarine.
          (%i3) sinsert("hollow ",s,3);
          (%o3)                  A hollow submarine.

 -- 関数: sinvertcase (<string>)
 -- 関数: sinvertcase (<string>, <start>)
 -- 関数: sinvertcase (<string>, <start>, <end>)
     位置<start>から<end>までのそれぞれの文字を逆順にすることを除いて
     <string>を返します。 もし<end>が与えられないなら、 <start>から
     <string>の終わりまでのすべての文字列が置き換えられます。

          (%i1) sinvertcase("sInvertCase");
          (%o1)                      SiNVERTcASE

 -- 関数: slength (<string>)
     <string>の中の文字の数を返します。

 -- 関数: smake (<num>, <char>)
     <num>個の文字<char>を持つ新しい文字列を返します。

          (%i1) smake(3,"w");
          (%o1)                          www

 -- 関数: smismatch (<string_1>, <string_2>)
 -- 関数: smismatch (<string_1>, <string_2>, <test>)
     <string_1>と<string_2>が異なる<string_1>の最初の文字の位置、または
     ‘false’を返します。 マッチングのデフォルトのテスト関数は‘sequal’で
     す。 もし‘smismatch’が文字の大小を無視なければいけないなら、 テスト
     として‘sequalignore’を使ってください。

          (%i1) smismatch("seven","seventh");
          (%o1)                           6

 -- 関数: split (<string>)
 -- 関数: split (<string>, <delim>)
 -- 関数: split (<string>, <delim>, <multiple>)
     <string>のすべてのトークンのリストを返します。 それぞれのトークンは
     パースされていない文字列です。 ‘split’は<delim>をデリミタとして使い
     ます。 もし<delim>が与えられないなら、 スペース文字がデフォルトのデ
     リミタです。 <multiple>はデフォルトで‘true’のブーリアン変数です。 重
     複デリミタが1つとして読まれます。 これは、 もしタブが複数スペース文
     字として保存されているなら、 役立ちます。 もし<multiple>が‘false’に
     設定されるなら、 それぞれのデリミタが有効です。

          (%i1) split("1.2   2.3   3.4   4.5");
          (%o1)                 [1.2, 2.3, 3.4, 4.5]
          (%i2) split("first;;third;fourth",";",false);
          (%o2)               [first, , third, fourth]

 -- 関数: sposition (<char>, <string>)
     <string>の中で、<char>とマッチする最初の文字の位置を返します。
     <string>の一番目の文字は位置1にあります。 文字の大小を無視した文字
     のマッチに関しては， ‘ssearch’を参照してください。

 -- 関数: sremove (<seq>, <string>)
 -- 関数: sremove (<seq>, <string>, <test>)
 -- 関数: sremove (<seq>, <string>, <test>, <start>)
 -- 関数: sremove (<seq>, <string>, <test>, <start>, <end>)
     <string>同様文字列を返しますが、 <seq>とマッチする部分文字列すべて
     なしに返します。 マッチのデフォルトのテスト関数は‘sequal’です。 も
     し‘sremove’が<seq>を検索する間文字の大小を無視しなければいけないな
     ら、 テストとして‘sequalignore’を使ってください。 探索を限定するに
     は<start>と<end>を使ってください。 <string>の一番目の文字は位置1に
     あることに注意してください。

          (%i1) sremove("n't","I don't like coffee.");
          (%o1)                   I do like coffee.
          (%i2) sremove ("DO ",%,'sequalignore);
          (%o2)                    I like coffee.

 -- 関数: sremovefirst (<seq>, <string>)
 -- 関数: sremovefirst (<seq>, <string>, <test>)
 -- 関数: sremovefirst (<seq>, <string>, <test>, <start>)
 -- 関数: sremovefirst (<seq>, <string>, <test>, <start>, <end>)
     ‘seq’とマッチする最初の文字列だけが削除されることを除いて、
     ‘sremove’同様です。

 -- 関数: sreverse (<string>)
     <string>の文字すべてが逆順の文字列を返します。

 -- 関数: ssearch (<seq>, <string>)
 -- 関数: ssearch (<seq>, <string>, <test>)
 -- 関数: ssearch (<seq>, <string>, <test>, <start>)
 -- 関数: ssearch (<seq>, <string>, <test>, <start>, <end>)
     文字列<seq>とマッチする<string>の最初の部分文字列の位置を返します。
     マッチのためのデフォルトのテスト関数は‘sequal’です。 もし
     ‘ssearch’が文字の大小を無視しなければいけないなら、 テストとして
     ‘sequalignore’を使ってください。 検索を限定するには、<start>と
     <end>を使ってください。 <string>の一番目の文字は位置1にあることに注
     意してください。

          (%i1) ssearch("~s","~{~S ~}~%",'sequalignore);
          (%o1)                                  4

 -- 関数: ssort (<string>)
 -- 関数: ssort (<string>, <test>)
     ‘test (<c>, <d>)’が‘false’、かつ、‘test (<d>, <c>)’が‘true’であるよ
     うな2つの連続する文字<c>と<d>がないような順で <string>の文字すべて
     を含む文字列を返します。

     ソートのためのデフォルトのテスト関数は<clessp>です。 テスト関数一式
     は‘{clessp, clesspignore, cgreaterp, cgreaterpignore, cequal,
     cequalignore}’です。

          (%i1) ssort("I don't like Mondays.");
          (%o1)                    '.IMaddeiklnnoosty
          (%i2) ssort("I don't like Mondays.",'cgreaterpignore);
          (%o2)                 ytsoonnMlkIiedda.'

 -- 関数: ssubst (<new>, <old>, <string>)
 -- 関数: ssubst (<new>, <old>, <string>, <test>)
 -- 関数: ssubst (<new>, <old>, <string>, <test>, <start>)
 -- 関数: ssubst (<new>, <old>, <string>, <test>, <start>, <end>)
     <string>の中の<old>にマッチするすべての部分文字列を <new>で置き換え
     た文字列を返します。 <old>と<new>は同じ長さである必要はありません。
     マッチのためのデフォルトのテスト関数は‘sequal’です。 もし‘ssubst’が
     oldを検索する間大文字小文字を無視すべきなら、 テストとして
     ‘sequalignore’を使ってください。 検索を制限するには、<start>と
     <end>を使ってください。 <string>の一番目の文字は位置1にあることに注
     意してください。

          (%i1) ssubst("like","hate","I hate Thai food. I hate green tea.");
          (%o1)          I like Thai food. I like green tea.
          (%i2) ssubst("Indian","thai",%,'sequalignore,8,12);
          (%o2)         I like Indian food. I like green tea.

 -- 関数: ssubstfirst (<new>, <old>, <string>)
 -- 関数: ssubstfirst (<new>, <old>, <string>, <test>)
 -- 関数: ssubstfirst (<new>, <old>, <string>, <test>, <start>)
 -- 関数: ssubstfirst (<new>, <old>, <string>, <test>, <start>, <end>)
     <old>とマッチする最初の部分文字列だけを置き換えることを除いて、
     ‘subst’と同様です。

 -- 関数: strim (<seq>,<string>)
     <string>の両端から<seq>に現れるすべての文字を除いた文字列を返します
     。

          (%i1) "/* comment */"$
          (%i2) strim(" /*",%);
          (%o2)                        comment
          (%i3) slength(%);
          (%o3)                           7

 -- 関数: striml (<seq>, <string>)
     <string>の左端だけトリムすることを除いて ‘strim’と同様です。

 -- 関数: strimr (<seq>, <string>)
     <string>の右端だけトリムすることを除いて ‘strim’と同様です。

 -- 関数: substring (<string>, <start>)
 -- 関数: substring (<string>, <start>, <end>)
     位置<start>で始まり位置<end>で終わる <string>の部分文字列を返します
     。 位置<end>の文字は含まれません。 もし<end>が与えられないなら、部
     分文字列は文字列の残りを含みます。 <string>の一番目の文字は位置1に
     あることに注意してください。

          (%i1) substring("substring",4);
          (%o1)                        string
          (%i2) substring(%,4,6);
          (%o2)                          in

 -- 関数: supcase (<string>)
 -- 関数: supcase (<string>, <start>)
 -- 関数: supcase (<string>, <start>, <end>)
     <string>の位置<start>から<end>までの小文字を対応する大文字に置き換
     えた 文字列を返します。 もし<end>が与えられないなら、 <start>から
     <string>の終わりまでのすべての小文字が置き換えられます。

          (%i1) supcase("english",1,2);
          (%o1)                        English

 -- 関数: tokens (<string>)
 -- 関数: tokens (<string>, <test>)
     <string>から抽出されたトークンのリストを返します。 トークンは、文字
     があるテスト関数を満たす部分文字列です。 もしテストが与えられないな
     ら、 <constituent>がデフォルトテストとして使われます。
     ‘{constituent, alphacharp, digitcharp, lowercasep, uppercasep,
     charp, characterp, alphanumericp}’はテスト関数一式です。 (The
     Lisp-version of ‘tokens’のLispバージョンはPaul Grahamによって書かれ
     ました。 ANSI Common Lisp, 1996, page 67.)

          (%i1) tokens("24 October 2005");
          (%o1)                  [24, October, 2005]
          (%i2) tokens("05-10-24",'digitcharp);
          (%o2)                     [05, 10, 24]
          (%i3) map(parse_string,%);
          (%o3)                      [5, 10, 24]


File: maxima.info,  Node: to_poly_solve,  Next: unit,  Prev: stringproc,  Up: Top

80 to_poly_solve
****************

* Menu:

* Functions and Variables for to_poly_solve::


File: maxima.info,  Node: Functions and Variables for to_poly_solve,  Prev: to_poly_solve,  Up: to_poly_solve

80.1 Functions and Variables for to_poly_solve
==============================================

パッケージ ‘to_poly’と ‘to_poly_solve’は実験的なものです; これらのパッケ
ージの関数の仕様は変更の可能性があり、 これらのパッケージの関数のいくつ
かは他のMaxima関数にマージされるかもしれません。

   Barton Willis (University of Nebraska at Kearneyの数学科の教授)が
‘to_poly’と ‘to_poly_solve’パッケージと これらのパッケージのための英語の
ユーザードキュメンテーションを書きました。

 -- Operator: %and

     演算子 ‘%and’は整理化(simplifying)非短絡論理積です。 Maximaは
     ‘%and’式をtrueかfalseか論理的に同値ですが整理された式に整理します。
     演算子 ‘%and’は結合的で可換でべき等的です。 そして、 ‘%and’が名詞形
     を返す時、 ‘%and’の引数は非冗長なソートされたリストを形成します; 例
     えば、

          (%i1) a %and (a %and b);
          (%o1)                       a %and b

     もし積の引数の1つが 明示的にもう一つの引数の否定なら、 ‘%and’は
     falseを返します:

          (%i2) a %and (not a);
          (%o2)                         false

     積のいずれかのメンバーがfalseなら、 たとえ他のメンバーが明白に非ブ
     ーリアンでも積はfalseに整理されます; 例えば、

          (%i3) 42 %and false;
          (%o3)                         false

     inequation(すなわち、不等もしくは等式)の‘%and’式の任意の引数は
     Fourier消去パッケージを使って整理されます。 Fourier消去整理器は す
     べてでないですがいくつかの非線形inequationを線形inequationに変換す
     る プリプロセッサを持ちます; 例えば、Fourier消去コードは ‘abs(x) +
     1 > 0’を trueに整理します。だから、

          (%i4) (x < 1) %and (abs(x) + 1 > 0);
          (%o4)                         x < 1

     注釈
        • オプション変数 ‘prederror’は ‘%and’式の整理を変えません。

        • 演算子の優先順位エラーを避けるため、 演算子 ‘%and, %or’と
          ‘not’を含む複合式は完全に括弧でくくらなくてはいけません。

        • Maxima演算子 ‘and’と ‘or’はどちらも短絡的です。 なので ‘and’は
          結合的でなかったり可換ではなかったりします。

     制限 積 ‘%and’はinequationを 大域的にではなく局所的に整理します。 こ
     れは以下のような積はfalseに整理されないことを意味します。

          (%i5) (x < 1) %and (x > 1);
          (%o5)                 (x > 1) %and (x < 1)

     また、 Fourier消去コードは事実データベースを無視します。

          (%i6) assume(x > 5);
          (%o6)                        [x > 5]
          (%i7) (x > 1) %and (x > 2);
          (%o7)                 (x > 1) %and (x > 2)

     最終的に、同値の線形inequationに容易に変換されない非線形
     inequationは整理されません。

     ‘%or’上に ‘%and’を分配するためのサポートはありません; ‘%and’上に論
     理否定を分配するサポートもありません。

     利用のためには ‘load("to_poly_solve")’

     関連関数 ‘%or, %if, and, or, not’

     状況 演算子 ‘%and’は実験的です; この関数の仕様は変更の可能性があり
     、 その機能は他のMaxima関数にマージされるかもしれません。

 -- 演算子: %if (<bool>, <a>, <b>)

     演算子 ‘%if’は整理化条件文です。 条件 <bool>はブーリアン値でなけれ
     ばいけません。 条件がtrueの時、二番目の引数を返します; 条件が
     falseの時、三番目の引数を返します; その他の場合、名詞形を返します。

     Maxima inequations (不等式か等式)はブーリアン値ではありません; 例え
     ば、 Maximaは 5 < 6をtrueに整理 しませんし、 5 = 6をfalseに整理しま
     せん; しかしながら、 to false; however, in the context of a
     conditional to an ‘%if’文への条件の文脈では、 Maximaは 自動的に
     inequationの真値を決定しようとします。 例:

          (%i1) f : %if(x # 1, 2, 8);
          (%o1)                 %if(x - 1 # 0, 2, 8)
          (%i2) [subst(x = -1,f), subst(x=1,f)];
          (%o2)                        [2, 8]

     もし条件がinequationを含むなら、 MaximaはFourier消去パッケージを使
     ってそれを整理します。

     注釈

        • もし条件が明白に非ブーリアンなら、Maximaは名詞形を返します:

          (%i3) %if(42,1,2);
          (%o3)                     %if(42, 1, 2)

        • Maxima演算子 ‘if’はn項演算子ですが、演算子 ‘%if’は n項演算子で
          はないです。

     制限 Fourier消去コードは 同値の線形inequationに容易に変換可能な非線
     形inequationだけを 整理します。

     利用には: ‘load("to_poly_solve")’

     状況: 演算子 ‘%if’は実験的です; 仕様は変更の可能性があり、 機能は他
     のMaxima関数にマージされるかもしれません。

 -- 演算子: %or

     演算子 ‘%or’は整理化非短絡論理和です。 Maximaは ‘%or’式をtrueか
     falseか論理的に同値ですが整理された式に整理します。 演算子 ‘%or’は
     結合的で可換でべき等です。 そして ‘%or’が名詞形を返す時、 ‘%or’の引
     数は非冗長なソートされたリストを形成します; 例えば、

          (%i1) a %or (a %or b);
          (%o1)                        a %or b

     もし和のメンバーの１つが明示的に他のメンバーの否定なら、 ‘%or’は
     trueを返します:

          (%i2) a %or (not a);
          (%o2)                         true

     もし和の任意のメンバーがtrueなら、 たとえ和の他のメンバーが明白に非
     ブーリアンでも和はtrueに整理されます。 例えば

          (%i3) 42 %or true;
          (%o3)                         true

     inequation(不等式か等式)である ‘%or’式の任意の引数は Fourier消去パ
     ッケージを使って整理されます。 Fourier消去コードは ‘abs(x) + 1 >
     0’をtrueに整理します。 なので、

          (%i4) (x < 1) %or (abs(x) + 1 > 0);
          (%o4)                         true

     注釈
        • オプション変数 ‘prederror’は ‘%or’式の整理を変更しません。

        • 演算子 ‘%and, %or’, ‘not’を含む複合式は括弧でくくらなければい
          けません; これらの演算子の結合力は期待と一致しないことがありま
          す。

        • Maxima演算子 ‘and’と ‘or’はどちらも短絡的です。 なので ‘or’は
          結合的でないか可換でないかです。

     制限 和 ‘%or’はinequationを 大域的にではなく、局所的に整理します。
     これは以下のような和はtrueに整理されないことを意味します。

          (%i1) (x < 1) %or (x >= 1);
          (%o1) (x > 1) %or (x >= 1)

     更に Fourier消去コードは事実データベースを無視します:

          (%i2) assume(x > 5);
          (%o2)                        [x > 5]
          (%i3) (x > 1) %and (x > 2);
          (%o3)                 (x > 1) %and (x > 2)

     最終的に、同値の線形inequationに容易に変換されない非線形
     inequationは整理されません。

     両方ともfalseである項を探すアルゴリズムは弱いものです; また、
     ‘%and’上に ‘%or’を分配するためのサポートはありません; ‘%or’上に論理
     否定を分配するサポートもありません。

     利用のためには ‘load("to_poly_solve")’

     関連関数 ‘%or, %if, and, or, not’

     状況 演算子 ‘%or’は実験的です; 仕様は変更の可能性があり、 機能は他
     のMaxima関数にマージされるかもしれません。

 -- 関数: complex_number_p (<x>)

     もし引数が ‘a + %i * b’, ‘a’, ‘%i b’, ‘%i’のいずれかなら、 述語論理
     ‘complex_number_p’はtrueを返します。 ここで ‘a’と ‘b’は有理数か(多
     倍長浮動小数点数を含む)浮動小数点数です; 他のすべての入力に対して、
     ‘complex_number_p’はfalseを返します; 例えば

          (%i1) map('complex_number_p,[2/3, 2 + 1.5 * %i, %i]);
          (%o1)                  [true, true, true]
          (%i2) complex_number_p((2+%i)/(5-%i));
          (%o2)                         false
          (%i3) complex_number_p(cos(5 - 2 * %i));
          (%o3)                         false

     関連関数 ‘isreal_p’

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘complex_number_p’は実験的です; 仕様は変更の可能性があり
     、 機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: compose_functions (<l>)

     関数コール ‘compose_functions(l)’は リスト <l>の中の関数の合成をラ
     ムダ形を返します。 関数は右から 左へ適用されます; 例えば

          (%i1) compose_functions([cos, exp]);
                                                  %g151
          (%o1)             lambda([%g151], cos(%e     ))
          (%i2) %(x);
                                            x
          (%o2)                       cos(%e )

     関数リストが空のとき、恒等関数を返します:

          (%i3) compose_functions([]);
          (%o3)                lambda([%g152], %g152)
          (%i4)  %(x);
          (%o4)                           x

     注釈
        • Maximaがリストメンバーがシンボルやラムダ形でないか決める時、
          (‘compose_functions’ではなく) ‘funmake’がエラーをシグナルしま
          す:

          (%i5) compose_functions([a < b]);

          funmake: first argument must be a symbol, subscripted symbol,
          string, or lambda expression; found: a < b
          #0: compose_functions(l=[a < b])(to_poly_solve.mac line 40)
           -- an error. To debug this try: debugmode(true);

        • 名前の衝突を避けるために、独立変数は 関数 ‘new_variable’が決め
          ます。

          (%i6) compose_functions([%g0]);
          (%o6)              lambda([%g154], %g0(%g154))
          (%i7) compose_functions([%g0]);
          (%o7)              lambda([%g155], %g0(%g155))

        • 独立変数が違っても、 Maximaはこれらのラムダ形が意味的に等しい
          ことを演繹できます:

          (%i8) is(equal(%o6,%o7));
          (%o8)                         true

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘compose_functions’は実験的です; 仕様は変更の可能性があり
     、 機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: dfloat (<x>)

     関数 ‘dfloat’は ‘float’に似ていますが、 ‘float’が IEEE 倍精度浮動小
     数点数に評価するのを失敗した時、 関数 ‘dfloat’は ‘rectform’を適用し
     ます; 例えば

          (%i1) float(4.5^(1 + %i));
                                         %i + 1
          (%o1)                       4.5
          (%i2) dfloat(4.5^(1 + %i));
          (%o2)        4.48998802962884 %i + .3000124893895671

     注釈

        • 式の直交形は 数値評価には不完全で合わないかもしれません–例えば
          、 直交形は不必要に浮動小数点数の差(桁落ち)を含むかもしれませ
          ん。

        • 識別子 ‘float’は(デフォルト値がfalseの)オプション変数であり か
          つ関数名です。

     関連関数 ‘float, bfloat’

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘dfloat’は実験的です; 仕様は変更の可能性があり、 機能は他
     のMaxima関数にマージされるかもしれません。

 -- 関数: elim (<l>, <x>)

     関数 ‘elim’は 集合もしくはリスト ‘l’内の等式から 集合もしくはリスト
     ‘x’内の変数を消去します。 ‘x’のメンバーそれぞれはシンボルでなければ
     いけません; must be a symbol; the members of ‘l’のメンバーは等式か
     零に等しいと仮定される式であり得ます。

     関数 ‘elim’は2つのリストのリストを返します; 一番目は変数が消去され
     た式のリストです; 二番目はピボットのリストです; 二番目のリストは
     ‘elim’が変数を消去するのに使った式のリストです。

     以下は線形方程式を消去する例です:

          (%i1) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y));
          (%o1)            [[2 z - 7], [y + 7, z - x + 1]]

     ‘x’と ‘y’の消去は一つの等式 ‘2 z - 7 = 0’をもたらします; 等式 ‘y +
     7 = 0’と ‘z - z + 1 = 1’がピボットとして使われました。 これらの等式
     から3つの変数すべての消去は、線形系を三角化します:

          (%i2) elim(set(x + y + z = 1, x - y  - z = 8, x - z = 1),
                     set(x,y,z));
          (%o2)           [[], [2 z - 7, y + 7, z - x + 1]]

     もちろん、等式は線形である必要はありません:

          (%i3) elim(set(x^2 - 2 * y^3 = 1,  x - y = 5), [x,y]);
                               3    2
          (%o3)       [[], [2 y  - y  - 10 y - 24, y - x + 5]]

     ユーザーは変数が消去される順序を制御しません。 確かに、アルゴリズム
     は 最良のピボットと最良の消去順序を選ぼうとする発見的方法を使います
     。

     注釈

        • 関連関数 ‘eliminate’と違い、 等式の数が変数の数と等しい時、関
          数 ‘elim’は ‘solve’を呼び出しません。

        • 関数 ‘elim’は終結式を適用することで機能します; オプション変数
          ‘resultant’は Maximaがどのアルゴリズムを使うか決めます。
          ‘sqfr’を使って、 Maximaは それぞれの終結式を因数分解し、 多重
          零点を抑制します。

        • ‘elim’は多項式方程式の非線形一式を三角化します; 三角化された集
          合の解集合は 三角化されていない集合の解集合よりも大きいかもし
          れません。 例えば、、 三角化された方程式は見せかけの解を持ち得
          ます。

     関連関数 elim_allbut, eliminate_using, eliminate

     オプション変数 resultant

     利用するには ‘load("to_poly")’

     状況 関数 ‘elim’は実験的です; 仕様は変更の可能性があり、 機能は他の
     Maxima関数にマージされるかもしれません。

 -- 関数: elim_allbut (<l>, <x>)

     この関数は ‘elim’に似ています。 等式のリスト ‘l’内の リスト ‘x’内の
     変数を 除いて 変数すべてを消去することを除いて

          (%i1) elim_allbut([x+y = 1, x - 5*y = 1],[]);
          (%o1)                 [[], [y, y + x - 1]]
          (%i2) elim_allbut([x+y = 1, x - 5*y = 1],[x]);
          (%o2)                [[x - 1], [y + x - 1]]

     利用するには ‘load("to_poly")’

     オプション変数 resultant

     関連関数 elim, eliminate_using, eliminate

     状況 関数 ‘elim_allbut’は実験的です; 仕様は変更の可能性があり、 機
     能は他のMaxima関数にマージされるかもしれません。

 -- 関数: eliminate_using (<l>, <e>, <x>)

     Using ‘e’ as the pivot, eliminate the symbol ‘x’ from the list or
     set of equations in ‘l’.  The function ‘eliminate_using’ returns a
     set.

          (%i1) eq : [x^2 - y^2 - z^3 , x*y - z^2 - 5, x - y + z];
                         3    2    2     2
          (%o1)      [- z  - y  + x , - z  + x y - 5, z - y + x]
          (%i2) eliminate_using(eq,first(eq),z);
                  3              2      2      3    2
          (%o2) {y  + (1 - 3 x) y  + 3 x  y - x  - x ,
                                  4    3  3       2  2             4
                                 y  - x  y  + 13 x  y  - 75 x y + x  + 125}
          (%i3) eliminate_using(eq,second(eq),z);
                  2            2       4    3  3       2  2             4
          (%o3) {y  - 3 x y + x  + 5, y  - x  y  + 13 x  y  - 75 x y + x
                                                                     + 125}
          (%i4) eliminate_using(eq, third(eq),z);
                  2            2       3              2      2      3    2
          (%o4) {y  - 3 x y + x  + 5, y  + (1 - 3 x) y  + 3 x  y - x  - x }

     オプション変数 resultant

     関連関数 elim, eliminate, elim_allbut

     利用するには ‘load("to_poly")’

     状況 関数 ‘elimimate_using’は実験的です; 仕様は変更の可能性があり、
     機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: fourier_elim ([<eq1>, <eq2>, …], [<var1>, <var>, …])

     Fourier消去は Gauss消去の線形inequation(等式か不等式)に関する類似物
     です。 関数コール ‘fourier_elim([eq1, eq2, ...], [var1, var2,
     ...]’は 線形inequationsのリスト ‘[eq1, eq2, ...]’上の 変数 ‘[var1,
     var2, ...]’に関するFourier消去です; 例えば

          (%i1) fourier_elim([y-x < 5, x - y < 7, 10 < y],[x,y]);
          (%o1)            [y - 5 < x, x < y + 7, 10 < y]
          (%i2) fourier_elim([y-x < 5, x - y < 7, 10 < y],[y,x]);
          (%o2)        [max(10, x - 7) < y, y < x + 5, 5 < x]

     Eliminating first with respect to 最初に xを次に yを消去することは
     yに依存する、xに関する下限と上限、 そしてyに関する下限と上限(それら
     は数です)ををもたらします。 他の順序での消去は x依存のyの下限と上限
     、 そしてxの数値的下限と上限を与えます。

     必要な時、 ‘fourier_elim’はinequationのリストの_論理和_を返します:

          (%i3) fourier_elim([x # 6],[x]);
          (%o3)                  [x < 6] or [6 < x]

     解集合が空の時、 ‘fourier_elim’は ‘emptyset’を返し、 解集合が実数す
     べての時、 ‘fourier_elim’は ‘universalset’を返します; 例えば

          (%i4) fourier_elim([x < 1, x > 1],[x]);
          (%o4)                       emptyset
          (%i5) fourier_elim([minf < x, x < inf],[x]);
          (%o5)                     universalset

     非線形inequationに対して、 ‘fourier_elim’は (幾分) 整理された
     inequationsのリストを返します:

          (%i6) fourier_elim([x^3 - 1 > 0],[x]);
                         2                             2
          (%o6) [1 < x, x  + x + 1 > 0] or [x < 1, - (x  + x + 1) > 0]
          (%i7) fourier_elim([cos(x) < 1/2],[x]);
          (%o7)                  [1 - 2 cos(x) > 0]

     inequationのリストの代わりに、 ‘fourier_elim’の一番目の引数は 論理
     和か論理積であるかもしれません:

          (%i8) fourier_elim((x + y < 5) and (x - y >8),[x,y]);
                                                        3
          (%o8)            [y + 8 < x, x < 5 - y, y < - -]
                                                        2
          (%i9) fourier_elim(((x + y < 5) and x < 1) or  (x - y >8),[x,y]);
          (%o9)          [y + 8 < x] or [x < min(1, 5 - y)]

     関数 ‘fourier_elim’は inequation演算子 ‘<, <=, >, >=, #’, ‘=’をサポ
     ートします。

     Fourier消去コードは 絶対値や最小、最大関数を含むいくつかの非線形
     inequationを 線形inequationに変換する プリプロセッサを持ちます． 加
     えて、プリプロセッサは 線形項の積か商であるいくつかの式を扱います:

          (%i10) fourier_elim([max(x,y) > 6, x # 8, abs(y-1) > 12],[x,y]);
          (%o10) [6 < x, x < 8, y < - 11] or [8 < x, y < - 11]
           or [x < 8, 13 < y] or [x = y, 13 < y] or [8 < x, x < y, 13 < y]
           or [y < x, 13 < y]
          (%i11) fourier_elim([(x+6)/(x-9) <= 6],[x]);
          (%o11)           [x = 12] or [12 < x] or [x < 9]
          (%i12) fourier_elim([x^2 - 1 # 0],[x]);
          (%o12)      [- 1 < x, x < 1] or [1 < x] or [x < - 1]

     利用するには ‘load("fourier_elim")’

 -- 関数: isreal_p (<e>)

     述語論理 ‘isreal_p’は、 Maximaが ‘e’が実数線全体上で実数値であるこ
     とを 決められる時 trueを返します; Maximaが 実数線の空でないある部分
     集合上で‘e’が実数値で ないことを 決められる時 falseを返します; 他の
     場合、名詞形を返します。

          (%i1) map('isreal_p, [-1, 0, %i, %pi]);
          (%o1)               [true, true, false, true]

     Maxima変数は実と仮定されます; たとえば

          (%i2) isreal_p(x);
          (%o2)                         true

     関数 ‘isreal_p’は事実データベースを検査します:

          (%i3) declare(z,complex)$

          (%i4) isreal_p(z);
          (%o4)                      isreal_p(z)

     制限 頻繁すぎるほど ‘isreal_p’は falseを返すことができる時に名詞形
     を返します; 対数函数は実数線全体で実数値ではありません。 だから
     ‘isreal_p(log(x))’はfalseを返すべきです; しかしながら

          (%i5) isreal_p(log(x));
          (%o5)                   isreal_p(log(x))

     利用するには ‘load("to_poly_solve")’

     関連関数 complex_number_p

     状況 関数 ‘real_p’は実験的です; 仕様は変更の可能性があり、 機能は他
     のMaxima関数にマージされるかもしれません。

 -- 関数: new_variable (type)

     ‘%[z,n,r,c,g]k’という形のユニークなシンボルを返します。 ここで ‘k’は
     整数です typeに許される値は integer, natural_number, real,
     natural_number, generalです。 (自然数(natural number)は 非負整数を
     意味します; なので零は自然数です 自然数の定義のすべてではありません
     がいくつかは零を除外します。)

     typeが許される値の１つでない時、 typeは generalにデフォルト設定され
     ます。 整数、自然数、複素数に対して、 Maximaは自動的にこの情報を事
     実データベースに追加します。

          (%i1) map('new_variable,
                    ['integer, 'natural_number, 'real, 'complex, 'general]);
          (%o1)          [%z144, %n145, %r146, %c147, %g148]
          (%i2) nicedummies(%);
          (%o2)               [%z0, %n0, %r0, %c0, %g0]
          (%i3) featurep(%z0, 'integer);
          (%o3)                         true
          (%i4) featurep(%n0, 'integer);
          (%o4)                         true
          (%i5) is(%n0 >= 0);
          (%o5)                         true
          (%i6) featurep(%c0, 'complex);
          (%o6)                         true

     注釈 一般に、‘new_variable’の引数はクォートすべきです。 クォートは
     以下に似たエラーを防ぎます。

          (%i7) integer : 12$

          (%i8) new_variable(integer);
          (%o8)                         %g149
          (%i9) new_variable('integer);
          (%o9)                         %z150

     関連関数 nicedummies

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘new_variable’は実験的です; 仕様は変更の可能性があり、 機
     能は他のMaxima関数にマージされるかもしれません。

 -- 関数: nicedummies

     関数 ‘nicedummies’は ‘new_variable’が導入した式の中の変数を零から再
     インデックスします;

          (%i1) new_variable('integer) + 52 * new_variable('integer);
          (%o1)                   52 %z136 + %z135
          (%i2) new_variable('integer) - new_variable('integer);
          (%o2)                     %z137 - %z138
          (%i3) nicedummies(%);
          (%o3)                       %z0 - %z1

     関連関数 new_variable

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘nicedummies’は実験的です; 仕様は変更の可能性があり、 機
     能は他のMaxima関数にマージされるかもしれません。

 -- 関数: parg (<x>)

     関数 ‘parg’は 複素偏角関数 ‘carg’の整理化バージョンです; 例えば

          (%i1) map('parg,[1,1+%i,%i, -1 + %i, -1]);
                                  %pi  %pi  3 %pi
          (%o1)               [0, ---, ---, -----, %pi]
                                   4    2     4

     一般に非定数入力に対して ‘parg’は名詞形を返します;例えば

          (%i2) parg(x + %i * sqrt(x));
          (%o2)                 parg(x + %i sqrt(x))

     ‘sign’を使って入力が正の実数か負の実数か決めることができる時
     ‘parg’は非定数入力に対して非名詞形を返します。 以下は2つの例です:

          (%i3) parg(abs(x));
          (%o3) 0
          (%i4) parg(-x^2-1);
          (%o4)                          %pi

     注釈 ‘sign’関数は 複素数と宣言された変数(‘declare(x,complex)’)を ほ
     とんど無視します; 複素数と宣言された変数に対して、 ‘parg’は間違った
     値を返す可能性があります; 例えば

          (%i1) declare(x,complex)$

          (%i2) parg(x^2 + 1);
          (%o2) 0

     Related function carg, isreal_p

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘parg’は実験的です; 仕様は変更の可能性があり、 機能は他の
     Maxima関数にマージされるかもしれません。

 -- 関数: real_imagpart_to_conjugate (<e>)

     関数 ‘real_imagpart_to_conjugate’は ‘realpart’と ‘imagpart’をすべて
     ‘conjugate’を含む代数的に同値な式に置き換えます。

          (%i1) declare(x, complex)$

          (%i2) real_imagpart_to_conjugate(realpart(x) +  imagpart(x) = 3);
                    conjugate(x) + x   %i (x - conjugate(x))
          (%o2)     ---------------- - --------------------- = 3
                           2                     2

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘real_imagpart_to_conjugate’は実験的です; 仕様は変更の可
     能性があり、 機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: rectform_log_if_constant (<e>)

     関数 ‘rectform_if_constant’は ‘ log(c)’の形の項をすべて
     ‘rectform(log(c))’に変換します。 ここで ‘c’は宣言された定数式か明示
     的に宣言された定数です。

          (%i1) rectform_log_if_constant(log(1-%i) - log(x - %i));
                                           log(2)   %i %pi
          (%o1)            - log(x - %i) + ------ - ------
                                             2        4
          (%i2) declare(a,constant, b,constant)$

          (%i3) rectform_log_if_constant(log(a + %i*b));
                                 2    2
                            log(b  + a )
          (%o3)             ------------ + %i atan2(b, a)
                                 2

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘rectform_log_if_constant’は実験的です; 仕様は変更の可能
     性があり、 機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: simp_inequality (<e>)

     関数 ‘simp_inequality’は inequationの論理積と論理和にいくつかの整理
     を適用します。

     制限 関数 ‘simp_inequality’は少なくとも2つの点で制限されます; 第一
     に整理が局所的です; 例えば

          (%i1) simp_inequality((x > minf) %and (x < 0));
          (%o1) (x>1) %and (x<1)

     第二に ‘simp_inequality’は事実データベースを参照しません:

          (%i2) assume(x > 0)$

          (%i3) simp_inequality(x > 0);
          (%o3)                         x > 0

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘simp_inequality’は実験的です; 仕様は変更の可能性があり、
     機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: standardize_inverse_trig (<e>)

     この関数は 恒等式 ‘cot(x) = atan(1/x), acsc(x) = asin(1/x),’と
     ‘asec, acoth, acsch’ ‘asech’に関する類似 の恒等式を式に適応します。
     Abramowitz and Stegun, Eqs.  4.4.6 から 4.4.8までと 4.6.4から
     4.6.6までを参照してください。

     利用するには ‘load("to_poly_solve")’

     状況 関数 ‘standardize_inverse_trig’は実験的です; 仕様は変更の可能
     性があり、 機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: subst_parallel (<l>, <e>)

     ‘l’が単一の等式か等式のリストの時、 それぞれの等式の右辺側を左辺に
     代入します。 代入は並列に行われます; 例えば

          (%i1) load("to_poly_solve")$

          (%i2) subst_parallel([x=y,y=x], [x,y]);
          (%o2)                        [y, x]

     これを順にされる代入と比較します:

          (%i3) subst([x=y,y=x],[x,y]);
          (%o3)                        [x, x]

     関数 ‘subst_parallel’は ‘subst_parallel’は非アトムの代入を許すこと
     を除いて ‘sublis’と似ています; 例えば

          (%i4) subst_parallel([x^2 = a, y = b], x^2 * y);
          (%o4)                          a b
          (%i5) sublis([x^2 = a, y = b], x^2 * y);

                                                                       2
          sublis: left-hand side of equation must be a symbol; found: x
           -- an error. To debug this try: debugmode(true);

     ‘subst_parallel’が行う代入は文字通りであり意味論的ではありません; な
     ので ‘subst_parallel’は x * yが x^2 * yの部分式であることを認識しま
     せん

          (%i6) subst_parallel([x * y = a], x^2 * y);
                                         2
          (%o6)                         x  y

     関数 ‘subst_parallel’は整理の前にすべての代入を完了します。 これは
     、もし整理が前に行われていたらエラーが起こるような 条件式への代入を
     許します:

          (%i7) subst_parallel([x = 0], %if(x < 1, 5, log(x)));
          (%o7)                           5
          (%i8) subst([x = 0], %if(x < 1, 5, log(x)));

          log: encountered log(0).
           -- an error. To debug this try: debugmode(true);

     関連関数 subst, sublis, ratsubst

     利用するには ‘load("to_poly_solve_extra.lisp")’

     状況 関数 ‘subst_parallel’は実験的です; 仕様は変更の可能性があり、
     機能は他のMaxima関数にマージされるかもしれません。

 -- 関数: to_poly (<e>, <l>)

     関数 ‘to_poly’は 等式 ‘e’を inequation制約を伴う多項式系に変換しよ
     うとします; 制約を満たす多項式系の解は 等式 ‘e’の解です。 非公式に
     は ‘to_poly’は 等式 <e>を多項式化しようとします; 例がわかりやすいか
     もしれません:

          (%i1) load("to_poly_solve")$

          (%i2) to_poly(sqrt(x) = 3, [x]);
                                      2
          (%o2) [[%g130 - 3, x = %g130 ],
                                %pi                               %pi
                             [- --- < parg(%g130), parg(%g130) <= ---], []]
                                 2                                 2

     条件 ‘-%pi/2<parg(%g6),parg(%g6)<=%pi/2’は ‘%g6’が平方根関数の範囲
     内であることを告げます。 これがtrueの時、 ‘sqrt(x) = 3’に設定された
     解は ‘%g6-3,x=%g6^2’に設定された解と同じです。

     三角式を多項式化するには、 非代数的代入の導入が必要です; これらの非
     代数的代入は ‘to_poly’が返す三番目のリスト内で返されます; 例えば

          (%i3) to_poly(cos(x),[x]);
                          2                                 %i x
          (%o3)    [[%g131  + 1], [2 %g131 # 0], [%g131 = %e    ]]

     数字1が変数リストのメンバーでない限り定数項は多項式化されません; 例
     えば

          (%i4) to_poly(x = sqrt(5),[x]);
          (%o4)                [[x - sqrt(5)], [], []]
          (%i5) to_poly(x = sqrt(5),[1,x]);
                                      2
          (%o5) [[x - %g132, 5 = %g132 ],
                                %pi                               %pi
                             [- --- < parg(%g132), parg(%g132) <= ---], []]
                                 2                                 2

     根の1つとしてsqrt(5) + sqrt(7)を持つ多項式を生成するには、 以下のコ
     マンドを使います。

          (%i6) first(elim_allbut(first(to_poly(x = sqrt(5) + sqrt(7),
                                                [1,x])), [x]));
                                    4       2
          (%o6)                   [x  - 24 x  + 4]

     関連関数 to_poly_solve

     利用するには ‘load("to_poly")’

     状況: 関数 ‘to_poly’は実験的です; 仕様は変更の可能性があり、 機能は
     他のMaxima関数にマージされるかもしれません。

 -- 関数: to_poly_solve (<e>, <l>, [options])

     関数 ‘to_poly_solve’は 等式 eを 変数 lについて解こうとします。 等式
     eは単一の式か式の集合もしくはリストでありえます; 同様に lは単一のシ
     ンボルかシンボルの集合のリストでありえます; eのメンバーが明示的に等
     式でない時(例えば x^2 -1)、 ソルバは式は0に等しいと仮定します。

     ‘to_poly_solve’の基本戦略は 入力を多項式形に変換するために
     ‘to_poly’を使い、 多項式系上で ‘algsys’をコールします。 なので Thus
     user options that affect ‘algsys’に影響を与えるユーザーオプション、
     特に ‘algexact’は ‘to_poly_solve’にも影響を与えます。 ‘algexact’の
     デフォルト値はfalseですが、 ‘to_poly_solve’のためには、、一般的に
     ‘algexact’はtrueであるべきです。 関数 ‘to_poly_solve’は ‘algexact’を
     局所的にtrueに設定しません。 ‘algsys’が厳密は解を決定することができ
     ない時 trueに設定すると近似解を見つけることが不可能になるためです。

     ‘to_poly_solve’が解集合を決定できる時、 解集合のそれぞれのメンバー
     は ‘%union’オブジェクト内のリストです:

          (%i1) load("to_poly_solve")$

          (%i2) to_poly_solve(x*(x-1) = 0, x);
          (%o2)               %union([x = 0], [x = 1])

     ‘to_poly_solve’が解集合を決定できない時 ‘%solve’名詞形が返されます
     。(この場合、警告が印字されます。)

          (%i3) to_poly_solve(x^k + 2* x + 1 = 0, x);

          Nonalgebraic argument given to 'to_poly'
          unable to solve
                                    k
          (%o3)            %solve([x  + 2 x + 1 = 0], [x])

     ‘%solve’名詞形への代入は時々解に帰着します。

          (%i4) subst(k = 2, %);
          (%o4)                   %union([x = - 1])

     特に三角等式の場合、 ソルバは時々任意整数の導入を必要とします。 こ
     れらの任意整数は ‘%zXXX’という形を持ちます。 ここで ‘XXX’は整数です
     ; 例えば

          (%i5) to_poly_solve(sin(x) = 0, x);
          (%o5)   %union([x = 2 %pi %z33 + %pi], [x = 2 %pi %z35])

     これらの変数を零から再インデックスするには ‘nicedummies’を使います:

          (%i6) nicedummies(%);
          (%o6)    %union([x = 2 %pi %z0 + %pi], [x = 2 %pi %z1])

     時折、ソルバは ‘%cXXX’という形の任意複素数か ‘%rXXX’という形の任意
     実数を導入します。 関数 ‘nicedummies’はこれらの識別子を零から再イン
     デックスします。

     解集合は時々 論理積、論理和、含意に関してそれぞれ ‘%and’か, ‘%or’,
     ‘%if’を含む様々な論理演算子の 整理化バージョンを含みます; 例えば

          (%i7) sol : to_poly_solve(abs(x) = a, x);
          (%o7) %union(%if(isnonnegative_p(a), [x = - a], %union()),
                                %if(isnonnegative_p(a), [x = a], %union()))
          (%i8) subst(a = 42, sol);
          (%o8)             %union([x = - 42], [x = 42])
          (%i9) subst(a = -42, sol);
          (%o9)                       %union()

     空集合は ‘%union’によって表現されます。

     関数 ‘to_poly_solve’は 有理数や非有理べき、絶対値、三角関数、最小最
     大を含む等式の(すべてではありませんが) いくつかを解くことができます
     。 Lambert W 函数を使って解くことができるいくつかの等式も解くことが
     できます; 例:

          (%i1) load("to_poly_solve")$

          (%i2) to_poly_solve(set(max(x,y) = 5, x+y = 2), set(x,y));
          (%o2)      %union([x = - 3, y = 5], [x = 5, y = - 3])
          (%i3) to_poly_solve(abs(1-abs(1-x)) = 10,x);
          (%o3)             %union([x = - 10], [x = 12])
          (%i4) to_poly_solve(set(sqrt(x) + sqrt(y) = 5, x + y = 10),
                              set(x,y));
                               3/2               3/2
                              5    %i - 10      5    %i + 10
          (%o4) %union([x = - ------------, y = ------------],
                                   2                 2
                                          3/2                 3/2
                                         5    %i + 10        5    %i - 10
                                    [x = ------------, y = - ------------])
                                              2                   2
          (%i5) to_poly_solve(cos(x) * sin(x) = 1/2,x,
                              'simpfuncs = ['expand, 'nicedummies]);
                                                   %pi
          (%o5)              %union([x = %pi %z0 + ---])
                                                    4
          (%i6) to_poly_solve(x^(2*a) + x^a + 1,x);
                                                  2 %i %pi %z81
                                                  -------------
                                            1/a         a
                            (sqrt(3) %i - 1)    %e
          (%o6) %union([x = -----------------------------------],
                                            1/a
                                           2
                                                            2 %i %pi %z83
                                                            -------------
                                                      1/a         a
                                    (- sqrt(3) %i - 1)    %e
                               [x = -------------------------------------])
                                                     1/a
                                                    2
          (%i7) to_poly_solve(x * exp(x) = a, x);
          (%o7)              %union([x = lambert_w(a)])

     線形不等式に対して、 ‘to_poly_solve’は自動的にFourier消去を行います
     :

          (%i8) to_poly_solve([x + y < 1, x - y >= 8], [x,y]);
                                         7
          (%o8) %union([x = y + 8, y < - -],
                                         2
                                                                        7
                                           [y + 8 < x, x < 1 - y, y < - -])
                                                                        2

     ‘to_poly_solve’のオプション引数のそれぞれは等式でなければいけません
     ; 一般にこれらのオプションの順序は問題になりません．

        • ‘simpfuncs = l’, ここで ‘l’は函数のリストです。 lのメンバーの
          合成をそれぞれの解に適用します。

          (%i1) to_poly_solve(x^2=%i,x);
                                         1/4             1/4
          (%o1)       %union([x = - (- 1)   ], [x = (- 1)   ])
          (%i2) to_poly_solve(x^2= %i,x, 'simpfuncs = ['rectform]);
                                %i         1             %i         1
          (%o2) %union([x = - ------- - -------], [x = ------- + -------])
                              sqrt(2)   sqrt(2)        sqrt(2)   sqrt(2)

        • 時々追加の整理は整理を戻すことがあります; 例えば

          (%i3) to_poly_solve(x^2=1,x);
          (%o3)              %union([x = - 1], [x = 1])
          (%i4) to_poly_solve(x^2= 1,x, 'simpfuncs = [polarform]);
                                                  %i %pi
          (%o4)            %union([x = 1], [x = %e      ]

        • Maximaは 関数リスト ‘l’のそれぞれのメンバーが純粋に整理である
          かチェックしようとしません; 例えば

          (%i5) to_poly_solve(x^2 = %i,x, 'simpfuncs = [lambda([s],s^2)]);
          (%o5)                   %union([x = %i])

        • それぞれの解を倍精度浮動小数点数に変換するには ‘simpfunc =
          ['dfloat]’を使います:

          (%i6) to_poly_solve(x^3 +x + 1 = 0,x,
                              'simpfuncs = ['dfloat]), algexact : true;
          (%o6) %union([x = - .6823278038280178],
          [x = .3411639019140089 - 1.161541399997251 %i],
          [x = 1.161541399997251 %i + .3411639019140089])

        • ‘use_grobner = true’ このオプションを使うと 解を企てる前に関数
          ‘poly_reduced_grobner’が 等式に適用されます 主として、このオプ
          ションは 関数 ‘algsys’の弱みに対する応急措置を提供します。 以
          下はそんな応急措置の例です:

          (%i7) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y],
                              'use_grobner = true);
                              sqrt(7) - 1      sqrt(7) + 1
          (%o7) %union([x = - -----------, y = -----------],
                                   2                2
                                           sqrt(7) + 1        sqrt(7) - 1
                                      [x = -----------, y = - -----------])
                                                2                  2
          (%i8) to_poly_solve([x^2+y^2=2^2,(x-1)^2+(y-1)^2=2^2],[x,y]);
          (%o8)                       %union()

        • ‘maxdepth = k’, ここで ‘k’は正の整数です。 この関数はソルバの
          最大再帰深さを制御します。 ‘maxdepth’のデフォルト値は5です。 再
          帰深さを越えた時、ソルバはエラーをシグナルします:

          (%i9) to_poly_solve(cos(x) = x,x, 'maxdepth = 2);

          Unable to solve
          Unable to solve
          (%o9)        %solve([cos(x) = x], [x], maxdepth = 2)

        • ‘parameters = l’, ここで ‘l’はシンボルのリストです。 ソルバは
          リスト ‘l’のメンバーすべてに有効な解を返そうとします; 例えば:

          (%i10) to_poly_solve(a * x = x, x);
          (%o10)                   %union([x = 0])
          (%i11) to_poly_solve(a * x = x, x, 'parameters = [a]);
          (%o11) %union(%if(a - 1 = 0, [x = %c111], %union()),
                                         %if(a - 1 # 0, [x = 0], %union()))

        • ‘(%o2)’で、ソルバはダミー変数を導入しました; これらのダミー変
          数を再インデックスするには、 関数 ‘nicedummies’を使います:

          (%i12) nicedummies(%);
          (%o12) %union(%if(a - 1 = 0, [x = %c0], %union()),
                                         %if(a - 1 # 0, [x = 0], %union()))

     f(a) = f(b)という形の等式を解くために ‘to_poly_solve’は ハッシュ配
     列 ‘one_to_one_reduce’に記憶されたデータを使います。 割り当て
     ‘one_to_one_reduce['f,'f] : lambda([a,b], a=b)’は ‘to_poly_solve’に
     f(a) = f(b)の解集合がa=bの解集合に等しいことを告げます; 例えば

          (%i13) one_to_one_reduce['f,'f] : lambda([a,b], a=b)$

          (%i14) to_poly_solve(f(x^2-1) = f(0),x);
          (%o14)             %union([x = - 1], [x = 1])

     さらに一般的に、 割り当て ‘one_to_one_reduce['f,'g] : lambda([a,b],
     w(a, b) = 0’は ‘to_poly_solve’に f(a) = f(b)の解集合が w(a,b) = 0の
     解集合に等しいことを告げます; 例えば

          (%i15) one_to_one_reduce['f,'g] : lambda([a,b], a = 1 + b/2)$

          (%i16) to_poly_solve(f(x) - g(x),x);
          (%o16)                   %union([x = 2])

     加えて、f(a) = bという形の等式を解くために 関数 ‘to_poly_solve’は ハ
     ッシュ配列 ‘function_inverse’に記憶されたデータを使います。 割り当
     て ‘function_inverse['f] : lambda([s], g(s))’は ‘to_poly_solve’に
     ‘f(x) = b’に設定された解が ‘x = g(b)’に設定された解に等しいことを知
     らせます; 2つの例:

          (%i17) function_inverse['Q] : lambda([s], P(s))$

          (%i18) to_poly_solve(Q(x-1) = 2009,x);
          (%o18)              %union([x = P(2009) + 1])
          (%i19) function_inverse['G] : lambda([s], s+new_variable(integer));
          (%o19)       lambda([s], s + new_variable(integer))
          (%i20) to_poly_solve(G(x - a) = b,x);
          (%o20)             %union([x = b + a + %z125])

     注釈

        • 解く変数はシンボルである必要はありません; ‘fullratsubst’が適切
          に代入できる時、 解く変数は非シンボルであり得ます:

          (%i1) to_poly_solve([x^2 + y^2 + x * y = 5, x * y = 8],
                              [x^2 + y^2, x * y]);
                                            2    2
          (%o1)           %union([x y = 8, y  + x  = - 3])

        • 複素共役を含む等式に対して、 ソルバは自動的に共役等式を追加し
          ます; 例えば

          (%i1) declare(x,complex)$

          (%i2) to_poly_solve(x + (5 + %i) * conjugate(x) = 1, x);
                                             %i + 21
          (%o2)              %union([x = - -----------])
                                           25 %i - 125
          (%i3) declare(y,complex)$

          (%i4) to_poly_solve(set(conjugate(x) - y = 42 + %i,
                                  x + conjugate(y) = 0), set(x,y));
                                     %i - 42        %i + 42
          (%o4)        %union([x = - -------, y = - -------])
                                        2              2

        • 絶対値関数を含む等式に対して、 ‘to_poly_solve’は 絶対値の引数
          が複素数値か決めるため 事実データベースに問い合わせます。

          (%i1) to_poly_solve(abs(x) = 6, x);
          (%o1)              %union([x = - 6], [x = 6])
          (%i2) declare(z,complex)$

          (%i3) to_poly_solve(abs(z) = 6, z);
          (%o3) %union(%if((%c11 # 0) %and (%c11 conjugate(%c11) - 36 =
                                                 0), [z = %c11], %union()))

        • これはソルバが事実データベースを参照する唯一の状況です。例えば
          、もし解く変数が整数と宣言されていたら、‘to_poly_solve’はこの
          宣言を無視します。

     Relevant option variables algexact, resultant, algebraic

     関連関数 to_poly

     利用するには ‘load("to_poly_solve")’

     状況: 関数 ‘to_poly_solve’は実験的です; 仕様は変更の可能性があり、
     機能は他のMaxima関数にマージされるかもしれません。


File: maxima.info,  Node: unit,  Next: zeilberger,  Prev: to_poly_solve,  Up: Top

81 unit
*******

* Menu:

* Introduction to Units::
* Functions and Variables for Units::


File: maxima.info,  Node: Introduction to Units,  Next: Functions and Variables for Units,  Prev: unit,  Up: unit

81.1 Introduction to Units
==========================

_unit_パッケージは、ユーザーが 任意の単位間での変換したり、方程式の中の
次元を扱うことを可能にします。 このパッケージの機能はオリジナルの
Maxima単位パッケージとは根本的に違います - オリジナルは定義の基本的なリ
ストでしたが、 このパッケージは、ユーザーが 次元基底毎に最後の答えが翻訳
される単位を選ぶことを可能にするようなルールセットを使います。 表示でそ
れらを混ぜる代わりに単位を分離し、 ユーザーが 個々の答えに関連付けられた
単位を容易に識別することを可能にします。 演繹された単位に整理する間、巧
みな制御を供給することはもちろん、 ユーザーが式を基本的な基底単位に整理
することを可能にします。 次元解析が可能で、変換と整理オプションを管理す
るために様々なツールが利用可能です。 カスタマイズ可能な自動変換に加えて
、 _units_はこれまでの手動変換オプションも提供します。

   注意 - 単位変換が正確でない時、Maximaは 分数に帰着する近似を行います
。 これは、単位を整理するのに使われる手法の結果です。 このタイプの代入を
警告するメッセージは、 この状況はしばしば起こり、警告が出力を群れをなし
ておおうので、 (通常オンですが)単位の場合デフォルトでディセーブルにされ
ています。 (単位変換の後、ratprintの存在している状態は復元されます。 だ
から、そうでなければ、ユーザーのその設定への変更は保持されます。) もしユ
ーザーが単位に関するこの情報を必要とするなら、 単位変換プロセスからの警
告の印字を再アクティベートするために _unitverbose:on_を設定できます。

   _unit_はMaximaに、share/contrib/unitディレクトリに含まれます。 通常の
Maximaのパッケージローディング慣例に従います：

     (%i1) load("unit")$
     *******************************************************************
     *                       Units version 0.50                        *
     *          Definitions based on the NIST Reference on             *
     *              Constants, Units, and Uncertainty                  *
     *       Conversion factors from various sources including         *
     *                   NIST and the GNU units package                *
     *******************************************************************

     Redefining necessary functions...
     WARNING: DEFUN/DEFMACRO: redefining function TOPLEVEL-MACSYMA-EVAL ...
     WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
     WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
     WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
     Initializing unit arrays...
     Done.

   WARNINGメッセージが予想されますが、心配の原因ではありません - それら
は _unit_パッケージが本来のMaximaで既に定義されている関数を再定義してい
ることを示しています。 これは単位を適切には使うために必要です。 ユーザー
は、もし他のパッケージがこれらの関数に他の変更を加えたならそれらの変更は
このロードプロセスによって上書きされることに気づくべきです。

   _unit.mac_ファイルは、 パッケージに必要なlisp関数を含む lispファイル
_unit-functions.lisp_もロードします。

   Clifford Yappは主作者です。 彼は、 Nebraska大学Kearney校(UNK)のBarton
Willis, Robert Dodier, そしてMaximaメーリングリストの他の大胆不敵な人々
から 価値ある援助を受けました。

   たぶん多くのバグがあります。知らせてください。 ‘float’と‘numer’は期待
の動作をしません。

   TODO : 次元機能、温度の扱い、略語表示、仲間。単位を含む量の足し算の例
を示す。


File: maxima.info,  Node: Functions and Variables for Units,  Prev: Introduction to Units,  Up: unit

81.2 Functions and Variables for Units
======================================

 -- 関数: setunits (<list>)
     デフォルトでは、 _unit_パッケージは 組み立てられた次元はどんなもの
     でも使いませんが、 MKS単位を使ってすべての単位を7つの基本的な次元に
     変換します。
          (%i2) N;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) dyn;
                                             1      kg m
          (%o3)                           (------) (----)
                                           100000     2
                                                     s
          (%i4) g;
                                              1
          (%o4)                             (----) (kg)
                                             1000
          (%i5) centigram*inch/minutes^2;
                                            127        kg m
          (%o5)                       (-------------) (----)
                                       1800000000000     2
                                                        s

     いくつかの場合、これは望みの振る舞いです。 もしユーザーが他の単位を
     使いたいなら、 これは ‘setunits’コマンドで達成されます:
          (%i6) setunits([centigram,inch,minute]);
          (%o6)                                done
          (%i7) N;
                                      1800000000000   %in cg
          (%o7)                      (-------------) (------)
                                           127            2
                                                      %min
          (%i8) dyn;
                                         18000000   %in cg
          (%o8)                         (--------) (------)
                                           127          2
                                                    %min
          (%i9) g;
          (%o9)                             (100) (cg)
          (%i10) centigram*inch/minutes^2;
                                              %in cg
          (%o10)                              ------
                                                  2
                                              %min

     単位の設定は実に柔軟性があります。 例えば、もしキログラム、メータ、
     秒に、それらの次元のデフォルトとして戻りたいなら、 以下のようにでき
     ます:
          (%i11) setunits([kg,m,s]);
          (%o11)                               done
          (%i12) centigram*inch/minutes^2;
                                            127        kg m
          (%o12)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     組立単位もこのコマンドで扱います:
          (%i17) setunits(N);
          (%o17)                               done
          (%i18) N;
          (%o18)                                 N
          (%i19) dyn;
                                              1
          (%o19)                           (------) (N)
                                            100000
          (%i20) kg*m/s^2;
          (%o20)                                 N
          (%i21) centigram*inch/minutes^2;
                                              127
          (%o21)                        (-------------) (N)
                                         1800000000000

     Notice that the _unit_パッケージは 質量、長さ、力として二乗された逆
     時間の非MKS組み合わせを認識し、 それをNewtonのものに変換したことに
     注目してください。 これは一般にMaximaがどのように働くかを示します。
     例えば、もしNewtonのものよりダインを好むなら、 単に以下をします:
          (%i22) setunits(dyn);
          (%o22)                               done
          (%i23) kg*m/s^2;
          (%o23)                          (100000) (dyn)
          (%i24) centigram*inch/minutes^2;
                                            127
          (%o24)                         (--------) (dyn)
                                          18000000

     任意の力に整理することを中断するには、 uforgetコマンドを使います:
          (%i26) uforget(dyn);
          (%o26)                               false
          (%i27) kg*m/s^2;
                                               kg m
          (%o27)                               ----
                                                 2
                                                s
          (%i28) centigram*inch/minutes^2;
                                            127        kg m
          (%o28)                      (-------------) (----)
                                       1800000000000     2
                                                        s
     これは、 ‘uforget(N)’か ‘uforget(%force)’を使って 同じようにうまく
     働きました。

     ‘uforget’も参照してください。 この関数を使うには、最初に
     ‘load("unit")’を書いてください。

 -- 関数: uforget (<list>)
     デフォルトでは、 _unit_パッケージは 、NKS単位を使って、単位すべてを
     7つの基本次元に変換します。 この振る舞いは ‘setunits’コマンドを使っ
     て変えることができます。 その後、ユーザーは、 ‘uforget’コマンドを使
     って， 特定の次元に関してデフォルトの振る舞いに戻すことができます:
          (%i13) setunits([centigram,inch,minute]);
          (%o13)                               done
          (%i14) centigram*inch/minutes^2;
                                              %in cg
          (%o14)                              ------
                                                  2
                                              %min
          (%i15) uforget([cg,%in,%min]);
          (%o15)                      [false, false, false]
          (%i16) centigram*inch/minutes^2;
                                            127        kg m
          (%o16)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     ‘uforget’は単位ではなく次元上で働きます。 だから、特定の次元の任意
     の単位は機能します。 次元それ自身も合法な引数です。

     ‘setunits’も参照してください。 この関数を使うには、最初に
     ‘load("unit")’を書いてください。

 -- 関数: convert (<expr>, <list>)
     グローバル環境をリセットすることがやりすぎの時、 ‘convert’コマンド
     があります。 これは1回変換を許します。 変換に使うのに、1つの引数か
     単位のリストを受け付けることができます。 変換演算がされた時、 望み
     の結果が再変換されるのを避けるために 正常なグローバル評価系は迂回さ
     れます。 結果として、 もしこの振る舞いを制御しているグローバル環境
     (‘ratprint’)が真なら、 不正確な計算に対して、"rat"警告が見られるで
     しょう。 これは グローバル変換の精度の抜き取り検査に 役に立ちます。
     別の特長は たとえグローバル環境が組立次元に整理するように設定されて
     も ‘convert’はユーザーに基本次元変換することを許すことです。

          (%i2) kg*m/s^2;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) convert(kg*m/s^2,[g,km,s]);
                                               g km
          (%o3)                                ----
                                                 2
                                                s
          (%i4) convert(kg*m/s^2,[g,inch,minute]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                        18000000000   %in g
          (%o4)                        (-----------) (-----)
                                            127           2
                                                      %min
          (%i5) convert(kg*m/s^2,[N]);
          (%o5)                                  N
          (%i6) convert(kg*m^2/s^2,[N]);
          (%o6)                                 m N
          (%i7) setunits([N,J]);
          (%o7)                                done
          (%i8) convert(kg*m^2/s^2,[N]);
          (%o8)                                 m N
          (%i9) convert(kg*m^2/s^2,[N,inch]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                           5000
          (%o9)                           (----) (%in N)
                                           127
          (%i10) convert(kg*m^2/s^2,[J]);
          (%o10)                                 J
          (%i11) kg*m^2/s^2;
          (%o11)                                 J
          (%i12) setunits([g,inch,s]);
          (%o12)                               done
          (%i13) kg*m/s^2;
          (%o13)                                 N
          (%i14) uforget(N);
          (%o14)                               false
          (%i15) kg*m/s^2;
                                          5000000   %in g
          (%o15)                         (-------) (-----)
                                            127       2
                                                     s
          (%i16) convert(kg*m/s^2,[g,inch,s]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                          5000000   %in g
          (%o16)                         (-------) (-----)
                                            127       2
                                                     s

     See also ‘setunits’と ‘uforget’も参照してください。 この関数を使う
     には、最初に ‘load("unit")’を書いてください。

 -- オプション変数: usersetunits
     デフォルト値: none

     もしユーザーが 記述されたものよりもデフォルト単位の振る舞いを持ちた
     いなら、 それらは _maxima-init.mac_と _usersetunits_変数を利用する
     ことができます。 _unit_パッケージは この変数がリストに割り当てられ
     ているかを見るためにスタートアップ時にチェックします。 もし割り当て
     られているなら、そのリスト上でsetunitsを使い、 そのリストからの単位
     をデフォルトに取ります。 ‘uforget’は 自身のデフォルト上に
     usersetunitsで定義された振る舞いに戻します。 例えば、 もし 以下を含
     む_maxima-init.mac_ファイルを持っているなら:
          usersetunits : [N,J];
     we would see the following behavior:
          (%i1) load("unit")$
          *******************************************************************
          *                       Units version 0.50                        *
          *          Definitions based on the NIST Reference on             *
          *              Constants, Units, and Uncertainty                  *
          *       Conversion factors from various sources including         *
          *                   NIST and the GNU units package                *
          *******************************************************************

          Redefining necessary functions...
          WARNING: DEFUN/DEFMACRO: redefining function
           TOPLEVEL-MACSYMA-EVAL ...
          WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
          WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
          WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
          Initializing unit arrays...
          Done.
          User defaults found...
          User defaults initialized.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) kg*m^3/s^2;
          (%o4)                                 J m
          (%i5) kg*m*km/s^2;
          (%o5)                             (1000) (J)
          (%i6) setunits([dyn,eV]);
          (%o6)                                done
          (%i7) kg*m/s^2;
          (%o7)                           (100000) (dyn)
          (%i8) kg*m^2/s^2;
          (%o8)                     (6241509596477042688) (eV)
          (%i9) kg*m^3/s^2;
          (%o9)                    (6241509596477042688) (eV m)
          (%i10) kg*m*km/s^2;
          (%o10)                   (6241509596477042688000) (eV)
          (%i11) uforget([dyn,eV]);
          (%o11)                           [false, false]
          (%i12) kg*m/s^2;
          (%o12)                                 N
          (%i13) kg*m^2/s^2;
          (%o13)                                 J
          (%i14) kg*m^3/s^2;
          (%o14)                                J m
          (%i15) kg*m*km/s^2;
          (%o15)                            (1000) (J)
     ‘usersetunits’なしでは、 初期の入力はMKSに変換されたでしょうし、
     uforgetはMKS規則への復帰をもたらしたでしょう。 なるほど、 ユーザー
     の好みは両方のケースで考慮されます。 もし望まれるなら、これらはまだ
     オーバーライドされることができることに注目してください。 この整理を
     完全に消すには - すなわち、ユーザーデフォルトを出荷デフォルトに再設
     定するには - ‘dontusedimension’コマンドをつかうことができます。
     ‘usedimension’が‘uforget’を使用上自由にする時だけ ‘uforget’はユーザ
     ー設定を再び戻すことができますが、 代わりに、 ‘kill(usersetunits)’は
     ユーザーデフォルトの知識すべてをセッションから完全に削除します。 以
     下は これらの様々なオプションがいかに働くかを示すいくつかの例です。
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) setunits([dyn,eV]);
          (%o4)                                done
          (%i5) kg*m/s^2;
          (%o5)                           (100000) (dyn)
          (%i6) kg*m^2/s^2;
          (%o6)                     (6241509596477042688) (eV)
          (%i7) uforget([dyn,eV]);
          (%o7)                          [false, false]
          (%i8) kg*m/s^2;
          (%o8)                                  N
          (%i9) kg*m^2/s^2;
          (%o9)                                  J
          (%i10) dontusedimension(N);
          (%o10)                             [%force]
          (%i11) dontusedimension(J);
          (%o11)                         [%energy, %force]
          (%i12) kg*m/s^2;
                                               kg m
          (%o12)                               ----
                                                 2
                                                s
          (%i13) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o13)                               -----
                                                 2
                                                s
          (%i14) setunits([dyn,eV]);
          (%o14)                               done
          (%i15) kg*m/s^2;
                                               kg m
          (%o15)                               ----
                                                 2
                                                s
          (%i16) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o16)                               -----
                                                 2
                                                s
          (%i17) uforget([dyn,eV]);
          (%o17)                         [false, false]
          (%i18) kg*m/s^2;
                                               kg m
          (%o18)                               ----
                                                 2
                                                s
          (%i19) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o19)                               -----
                                                 2
                                                s
          (%i20) usedimension(N);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o20)                               true
          (%i21) usedimension(J);
          Done.  To have Maxima simplify to this dimension, use
          setunits([unit]) to select a unit.
          (%o21)                               true
          (%i22) kg*m/s^2;
                                               kg m
          (%o22)                               ----
                                                 2
                                                s
          (%i23) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o23)                               -----
                                                 2
                                                s
          (%i24) setunits([dyn,eV]);
          (%o24)                               done
          (%i25) kg*m/s^2;
          (%o25)                          (100000) (dyn)
          (%i26) kg*m^2/s^2;
          (%o26)                    (6241509596477042688) (eV)
          (%i27) uforget([dyn,eV]);
          (%o27)                           [false, false]
          (%i28) kg*m/s^2;
          (%o28)                                 N
          (%i29) kg*m^2/s^2;
          (%o29)                                 J
          (%i30) kill(usersetunits);
          (%o30)                               done
          (%i31) uforget([dyn,eV]);
          (%o31)                          [false, false]
          (%i32) kg*m/s^2;
                                               kg m
          (%o32)                               ----
                                                 2
                                                s
          (%i33) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o33)                               -----
                                                 2
                                                s
     不運にも、 このオプションの広い多様性は 最初は少し混乱するものです
     が、 一旦、ユーザーがそれらを使うのに成長すれば、 それらがワーキン
     グ環境上でまさに完全な制御を持つことをユーザーは見いだすに違いあり
     ません。

 -- 関数: metricexpandall (<x>)
     望みの計量単位すべてを自動的に生成するグローバル単位リストを再構築
     します。 <x>は ユーザーがいくつの計量接頭子の定義を望むか指定するの
     に使われる数値引数です。 引数は、より低い数字の単位を定義するより高
     い数字それぞれを持つような 以下のようなものです:
                     0 - none. Only base units
                     1 - kilo, centi, milli
          (default)  2 - giga, mega, kilo, hecto, deka, deci, centi, milli,
                         micro, nano
                     3 - peta, tera, giga, mega, kilo, hecto, deka, deci,
                         centi, milli, micro, nano, pico, femto
                     4 - all
     通常は、Maximaは これは非常にたくさんの数の単位をもたらすので、完全
     な展開を定義しませんが、 多少なりとも完全な方法でリストを再構築する
     のに ‘metricexpandall’を使うことができます。 _unit.mac_ファイルの中
     の適切な変数は <%unitexpand>です。

 -- 変数: %unitexpand
     デフォルト値: ‘2’

     これは _unit_の初期ロードの最中に ‘metricexpandall’に供給される 値
     です。


File: maxima.info,  Node: zeilberger,  Next: Function and Variable Index,  Prev: unit,  Up: Top

82 zeilberger
*************

* Menu:

* Introduction to zeilberger::
* Functions and Variables for zeilberger::


File: maxima.info,  Node: Introduction to zeilberger,  Next: Functions and Variables for zeilberger,  Prev: zeilberger,  Up: zeilberger

82.1 Introduction to zeilberger
===============================

‘zeilberger’は 超幾何定総和に関するZeilbergerのアルゴリズムと 超幾何不定
総和に関するGosperのアルゴリズムの実装します。

   ‘zeilberger’は Axel Rieseによって開発された「フィルタリング」最適化法
を利用します。

   ‘zeilberger’はFabrizio Carusoによって開発されました。

   ‘load ("zeilberger")’はこのパッケージをロードします。

82.1.1 The indefinite summation problem
---------------------------------------

‘zeilberger’は 超幾何不定総和に関するGosperのアルゴリズムの実装します。
kの超幾何項F_kが与えられたとして、 超幾何反差(anti-difference)、すなわち
、以下のような超幾何項f_k を見つけることを望みます。

   F_k = f_(k+1) - f_k.

82.1.2 The definite summation problem
-------------------------------------

‘zeilberger’は 超幾何定総和に関するGosperのアルゴリズムの実装します。 適
当な(nとkに関する)超幾何項 F_(n,k) と正の整数dが与えられたとして、
F_(n,k) に関する(nに関する)多項式係数を持つd次の線形漸化式と、 a_0
F_(n,k) + ... + a_d F_(n+d),k = Delta_k(R(n,k) F_(n,k)), のようなnとkに
関する有理函数Rを見つけることを望みます。

   ここで、 Delta_k は k-順方向差分演算子です。すなわち、 Delta_k(t_k)
:= t_(k+1) - t_k.

82.1.3 Verbosity levels
-----------------------

以下の接尾辞の1つを追加することでコールされる出力が冗長なバージョンのコ
マンドもあります:

‘Summary’
     終わりにサマリだけが表示されます。
‘Verbose’
     中間ステップでのある情報。
‘VeryVerbose’
     更なる情報。
‘Extra’
     Zeilbergerのアルゴリズムでの線形系上の情報を含む更なる情報。

   例えば:
‘GosperVerbose’, ‘parGosperVeryVerbose’, ‘ZeilbergerExtra’,
‘AntiDifferenceSummary’.


File: maxima.info,  Node: Functions and Variables for zeilberger,  Prev: Introduction to zeilberger,  Up: zeilberger

82.2 Functions and Variables for zeilberger
===========================================

 -- 関数: AntiDifference (F_k, <k>)

     もし存在すれば、F_kの超幾何反差を返します。
     そうでなければ、 ‘AntiDifference’は ‘no_hyp_antidifference’を返しま
     す。

 -- 関数: Gosper (F_k, <k>)
     もし存在すれば、 F_kに対する有理証(rational certificate)、 すなわち
     、 以下のような有理函数を返します。 F_k = R(k+1) F_(k+1) - R(k)
     F_k, そうでなければ、 ‘Gosper’は ‘no_hyp_sol’を返します。

 -- 関数: GosperSum (F_k, <k>, <a>, <b>)

     もし F_kが超幾何反差を持つなら、 <k> = <a>から <k> = <b>までの F_kの
     和を返します。 そうでなければ、 ‘GosperSum’は ‘nongosper_summable’を
     返します。

     例:

          (%i1) load ("zeilberger")$
          (%i2) GosperSum ((-1)^k*k / (4*k^2 - 1), k, 1, n);
          Dependent equations eliminated:  (1)
                                     3       n + 1
                                (n + -) (- 1)
                                     2               1
          (%o2)               - ------------------ - -
                                            2        4
                                2 (4 (n + 1)  - 1)
          (%i3) GosperSum (1 / (4*k^2 - 1), k, 1, n);
                                          3
                                    - n - -
                                          2       1
          (%o3)                  -------------- + -
                                          2       2
                                 4 (n + 1)  - 1
          (%i4) GosperSum (x^k, k, 1, n);
                                    n + 1
                                   x          x
          (%o4)                    ------ - -----
                                   x - 1    x - 1
          (%i5) GosperSum ((-1)^k*a! / (k!*(a - k)!), k, 1, n);
                                          n + 1
                          a! (n + 1) (- 1)              a!
          (%o5)       - ------------------------- - ----------
                        a (- n + a - 1)! (n + 1)!   a (a - 1)!
          (%i6) GosperSum (k*k!, k, 1, n);
          Dependent equations eliminated:  (1)
          (%o6)                     (n + 1)! - 1
          (%i7) GosperSum ((k + 1)*k! / (k + 1)!, k, 1, n);
                            (n + 1) (n + 2) (n + 1)!
          (%o7)             ------------------------ - 1
                                    (n + 2)!
          (%i8) GosperSum (1 / ((a - k)!*k!), k, 1, n);
          (%o8)                  NON_GOSPER_SUMMABLE

 -- 関数: parGosper (F_(n,k), <k>, <n>, <d>)

     F_(n,k)に対して次数<d>の漸化式を見つけようとします。

     アルゴリズムは解の列 [s_1, s_2, ..., s_m]をもたらします。 解それぞ
     れは形式

     [R(n, k), [a_0, a_1, ..., a_d]].

     を持ちます。

     もし漸化式を見つけられないなら、 ‘parGosper’は ‘[]’を返します。

 -- 関数: Zeilberger (F_(n,k), <k>, <n>)

     F_(n,k)の超幾何不定総和を計算しようとします。

     ‘Zeilberger’は最初に ‘Gosper’を呼び出し、 もしそれが解を見つけるの
     に失敗したら、 次数 1, 2, 3, ..., から ‘MAX_ORD’までを使って
     ‘parGosper’を呼び出します。 もしZeilbergerが ‘MAX_ORD’に達する前に
     停止して、解を返します。

     アルゴリズムは解の列 [s_1, s_2, ..., s_m]をもたらします。 解それぞ
     れは形式

     [R(n,k), [a_0, a_1, ..., a_d]].

     を持ちます。

     もし解を見つけられなかったら、 ‘Zeilberger’は ‘[]’を返します。

     ‘Zeilberger’は ‘Gosper_in_Zeilberger’が ‘true’の時だけ ‘Gosper’を呼
     び出します。

82.3 General global variables
=============================

 -- グローバル変数: MAX_ORD
     デフォルト値: 5

     ‘MAX_ORD’は ‘Zeilberger’が試みる漸化式の最大次数です。

 -- グローバル変数: simplified_output
     デフォルト値: ‘false’

     ‘simplified_output’が ‘true’の時、 ‘zeilberger’パッケージの関数は 解
     の更なる整理を試みます。

 -- グローバル変数: linear_solver
     デフォルト値: ‘linsolve’

     ‘linear_solver’は Zeilbergerのアルゴリズムで方程式系を解くのに使う
     ソルバを指定します。

 -- グローバル変数: warnings
     デフォルト値: ‘true’

     ‘warnings’が ‘true’の時、 ‘zeilberger’パッケージの関数は 実行中に警
     告メッッセージを印字します。

 -- グローバル変数: Gosper_in_Zeilberger
     デフォルト値: ‘true’

     ‘Gosper_in_Zeilberger’が ‘true’の時、 ‘Zeilberger’関数は
     ‘parGosper’をコールする前に ‘Gosper’をコールします。 そうでないなら
     、 ‘Zeilberger’はすぐに ‘parGosper’に向かいます。

 -- グローバル変数: trivial_solutions
     デフォルト値: ‘true’

     ‘trivial_solutions’が ‘true’の時、 ‘Zeilberger’は 零に等しい証を持
     つ解か、 すべての係数が零に等しい解 を返します。

82.4 Variables related to the modular test
==========================================

 -- グローバル変数: mod_test
     デフォルト値: ‘false’

     ‘mod_test’が ‘true’の時、 ‘parGosper’は 解を持たない系を除くために
     モジュラーテストを実行します。

 -- グローバル変数: modular_linear_solver
     デフォルト値: ‘linsolve’

     ‘modular_linear_solver’は ‘parGosper’でのモジュラーテストが使う線形
     ソルバを指定します。

 -- グローバル変数: ev_point
     デフォルト値: ‘big_primes[10]’

     ‘parGosper’でモジュラーテストを実行する時 ‘ev_point’で変数 <n>が評
     価されます。

 -- グローバル変数: mod_big_prime
     デフォルト値: ‘big_primes[1]’

     ‘mod_big_prime’は ‘parGosper’でモジュラーテストが使う法です。

 -- グローバル変数: mod_threshold
     デフォルト値: 4

     ‘mod_threshold’は ‘parGosper’でのモジュラーテストが試みられる際の最
     大次数です。


File: maxima.info,  Node: Function and Variable Index,  Next: Translator's Comments,  Prev: zeilberger,  Up: Top

83 Indices
**********

 [index ]
* Menu:

* !:                                     Combinatorial Functions.
                                                             (line   50)
* !!:                                    Combinatorial Functions.
                                                             (line    6)
* #:                                     Operators for Equations.
                                                             (line    6)
* %:                                     Functions and Variables for Command Line.
                                                             (line   87)
* %%:                                    Functions and Variables for Command Line.
                                                             (line  100)
* %and:                                  Functions and Variables for to_poly_solve.
                                                             (line   14)
* %c:                                    Functions and Variables for contrib_ode.
                                                             (line   71)
* %e:                                    Functions and Variables for Constants.
                                                             (line    6)
* %edispflag:                            Functions and Variables for Display.
                                                             (line    6)
* %emode:                                Root Exponential and Logarithmic Functions.
                                                             (line   14)
* %enumer:                               Root Exponential and Logarithmic Functions.
                                                             (line   30)
* %e_to_numlog:                          Root Exponential and Logarithmic Functions.
                                                             (line    6)
* %f:                                    Hypergeometric Functions.
                                                             (line   19)
* %gamma:                                Functions and Variables for Constants.
                                                             (line   19)
* %i:                                    Functions and Variables for Constants.
                                                             (line   10)
* %iargs:                                Functions and Variables for Trigonometric.
                                                             (line   50)
* %if:                                   Functions and Variables for to_poly_solve.
                                                             (line   81)
* %k1:                                   Functions and Variables for contrib_ode.
                                                             (line   75)
* %k2:                                   Functions and Variables for contrib_ode.
                                                             (line   79)
* %m:                                    Hypergeometric Functions.
                                                             (line   12)
* %or:                                   Functions and Variables for to_poly_solve.
                                                             (line  119)
* %phi:                                  Functions and Variables for Constants.
                                                             (line   46)
* %pi:                                   Functions and Variables for Constants.
                                                             (line   98)
* %piargs:                               Functions and Variables for Trigonometric.
                                                             (line    6)
* %rnum_list:                            Functions and Variables for Equations.
                                                             (line    6)
* %s:                                    Bessel Functions.   (line  164)
* %th:                                   Functions and Variables for Command Line.
                                                             (line  144)
* %unitexpand:                           Functions and Variables for Units.
                                                             (line  400)
* %w:                                    Hypergeometric Functions.
                                                             (line   16)
* ':                                     Functions and Variables for Evaluation.
                                                             (line    6)
* '':                                    Functions and Variables for Evaluation.
                                                             (line   96)
* *:                                     Arithmetic operators.
                                                             (line    8)
* **:                                    Arithmetic operators.
                                                             (line  158)
* +:                                     Arithmetic operators.
                                                             (line    6)
* -:                                     Arithmetic operators.
                                                             (line    7)
* .:                                     Arithmetic operators.
                                                             (line  197)
* /:                                     Arithmetic operators.
                                                             (line    9)
* ::                                     Assignment operators.
                                                             (line    6)
* :::                                    Assignment operators.
                                                             (line   85)
* ::=:                                   Assignment operators.
                                                             (line  111)
* :=:                                    Assignment operators.
                                                             (line  182)
* <:                                     Relational operators.
                                                             (line    6)
* <=:                                    Relational operators.
                                                             (line    7)
* =:                                     Operators for Equations.
                                                             (line   28)
* >:                                     Relational operators.
                                                             (line    9)
* >=:                                    Relational operators.
                                                             (line    8)
* ?:                                     Functions and Variables for Command Line.
                                                             (line  171)
* ??:                                    Functions and Variables for Command Line.
                                                             (line  183)
* @:                                     Functions and Variables for Structures.
                                                             (line   71)
* [:                                     Functions and Variables for Lists.
                                                             (line    6)
* ]:                                     Functions and Variables for Lists.
                                                             (line    7)
* ^:                                     Arithmetic operators.
                                                             (line   10)
* ^^:                                    Arithmetic operators.
                                                             (line  180)
* _:                                     Functions and Variables for Command Line.
                                                             (line   44)
* __:                                    Functions and Variables for Command Line.
                                                             (line    6)
* `:                                     Functions and Variables for ezunits.
                                                             (line    6)
* ` <1>:                                 Functions and Variables for ezunits.
                                                             (line   88)
* |:                                     Functions and Variables for itensor.
                                                             (line 1324)
* ~:                                     Functions and Variables for itensor.
                                                             (line 1291)
* abasep:                                Functions and Variables for atensor.
                                                             (line  114)
* abs:                                   Functions for Numbers.
                                                             (line    6)
* absboxchar:                            Functions and Variables for Display.
                                                             (line   25)
* absint:                                Functions and Variables for Fourier series.
                                                             (line   31)
* absint <1>:                            Functions and Variables for Fourier series.
                                                             (line   32)
* absint <2>:                            Functions and Variables for Fourier series.
                                                             (line   33)
* absolute_real_time:                    Functions and Variables for Runtime Environment.
                                                             (line  166)
* acos:                                  Functions and Variables for Trigonometric.
                                                             (line   76)
* acosh:                                 Functions and Variables for Trigonometric.
                                                             (line   79)
* acot:                                  Functions and Variables for Trigonometric.
                                                             (line   82)
* acoth:                                 Functions and Variables for Trigonometric.
                                                             (line   85)
* acsc:                                  Functions and Variables for Trigonometric.
                                                             (line   88)
* acsch:                                 Functions and Variables for Trigonometric.
                                                             (line   91)
* activate:                              Functions and Variables for Facts.
                                                             (line    6)
* activecontexts:                        Functions and Variables for Facts.
                                                             (line   14)
* adapt_depth:                           Plotting Options.   (line   12)
* adapt_depth <1>:                       Functions and Variables for draw.
                                                             (line  192)
* addcol:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line    6)
* additive:                              Functions and Variables for Simplification.
                                                             (line    6)
* addmatrices:                           Functions and Variables for linearalgebra.
                                                             (line    6)
* addrow:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line   11)
* add_edge:                              Functions and Variables for graphs.
                                                             (line 1107)
* add_edges:                             Functions and Variables for graphs.
                                                             (line 1120)
* add_vertex:                            Functions and Variables for graphs.
                                                             (line 1134)
* add_vertices:                          Functions and Variables for graphs.
                                                             (line 1148)
* adim:                                  Functions and Variables for atensor.
                                                             (line   61)
* adjacency_matrix:                      Functions and Variables for graphs.
                                                             (line  305)
* adjoin:                                Functions and Variables for Sets.
                                                             (line    6)
* adjoint:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line   16)
* af:                                    Functions and Variables for atensor.
                                                             (line   84)
* aform:                                 Functions and Variables for atensor.
                                                             (line   67)
* agd:                                   Package functs.     (line  128)
* airy_ai:                               Airy Functions.     (line   15)
* airy_bi:                               Airy Functions.     (line   27)
* airy_dai:                              Airy Functions.     (line   22)
* airy_dbi:                              Airy Functions.     (line   34)
* algebraic:                             Functions and Variables for Polynomials.
                                                             (line    6)
* algepsilon:                            Functions and Variables for Equations.
                                                             (line   28)
* algexact:                              Functions and Variables for Equations.
                                                             (line   33)
* algsys:                                Functions and Variables for Equations.
                                                             (line   48)
* algsys <1>:                            Functions and Variables for Equations.
                                                             (line   49)
* alias:                                 Functions and Variables for Expressions.
                                                             (line    6)
* alias <1>:                             Functions and Variables for Evaluation.
                                                             (line  229)
* aliases:                               Functions and Variables for Expressions.
                                                             (line   12)
* allbut:                                Functions and Variables for Expressions.
                                                             (line   19)
* allroots:                              Functions and Variables for Equations.
                                                             (line  142)
* allroots <1>:                          Functions and Variables for Equations.
                                                             (line  143)
* allsym:                                Functions and Variables for itensor.
                                                             (line  494)
* all_dotsimp_denoms:                    Functions and Variables for Affine.
                                                             (line  118)
* alphabetic:                            Functions and Variables for Miscellaneous Options.
                                                             (line    6)
* alphacharp:                            Functions and Variables for characters.
                                                             (line    6)
* alphanumericp:                         Functions and Variables for characters.
                                                             (line    9)
* amortization:                          Functions and Variables for finance.
                                                             (line   95)
* and:                                   Logical operators.  (line    6)
* annuity_fv:                            Functions and Variables for finance.
                                                             (line   60)
* annuity_pv:                            Functions and Variables for finance.
                                                             (line   49)
* antid:                                 Functions and Variables for Differentiation.
                                                             (line    6)
* antidiff:                              Functions and Variables for Differentiation.
                                                             (line   58)
* AntiDifference:                        Functions and Variables for zeilberger.
                                                             (line    6)
* antisymmetric:                         Functions and Variables for Simplification.
                                                             (line   20)
* append:                                Functions and Variables for Lists.
                                                             (line   40)
* appendfile:                            Functions and Variables for File Input and Output.
                                                             (line    6)
* apply:                                 Functions and Variables for Function Definition.
                                                             (line    6)
* apply1:                                Functions and Variables for Rules and Patterns.
                                                             (line    6)
* apply2:                                Functions and Variables for Rules and Patterns.
                                                             (line   21)
* applyb1:                               Functions and Variables for Rules and Patterns.
                                                             (line   33)
* apropos:                               Functions and Variables for Help.
                                                             (line    6)
* args:                                  Functions and Variables for Expressions.
                                                             (line   48)
* arithmetic:                            Package functs.     (line   89)
* arithsum:                              Package functs.     (line  107)
* arit_amortization:                     Functions and Variables for finance.
                                                             (line  119)
* array:                                 Functions and Variables for Arrays.
                                                             (line    6)
* array <1>:                             Functions and Variables for Arrays.
                                                             (line    7)
* array <2>:                             Functions and Variables for Arrays.
                                                             (line    8)
* arrayapply:                            Functions and Variables for Arrays.
                                                             (line   33)
* arrayinfo:                             Functions and Variables for Arrays.
                                                             (line   40)
* arraymake:                             Functions and Variables for Arrays.
                                                             (line  132)
* arrays:                                Functions and Variables for Arrays.
                                                             (line  174)
* ascii:                                 Functions and Variables for characters.
                                                             (line   12)
* asec:                                  Functions and Variables for Trigonometric.
                                                             (line   94)
* asech:                                 Functions and Variables for Trigonometric.
                                                             (line   97)
* asin:                                  Functions and Variables for Trigonometric.
                                                             (line  100)
* asinh:                                 Functions and Variables for Trigonometric.
                                                             (line  103)
* askexp:                                Functions and Variables for Facts.
                                                             (line   21)
* askinteger:                            Functions and Variables for Facts.
                                                             (line   28)
* askinteger <1>:                        Functions and Variables for Facts.
                                                             (line   29)
* askinteger <2>:                        Functions and Variables for Facts.
                                                             (line   30)
* askinteger <3>:                        Functions and Variables for Facts.
                                                             (line   31)
* asksign:                               Functions and Variables for Facts.
                                                             (line   42)
* assoc:                                 Functions and Variables for Lists.
                                                             (line   47)
* assoc <1>:                             Functions and Variables for Lists.
                                                             (line   48)
* assoc_legendre_p:                      Functions and Variables for orthogonal polynomials.
                                                             (line    6)
* assoc_legendre_q:                      Functions and Variables for orthogonal polynomials.
                                                             (line   12)
* assume:                                Functions and Variables for Facts.
                                                             (line   49)
* assumescalar:                          Functions and Variables for Facts.
                                                             (line  102)
* assume_external_byte_order:            Functions and Variables for binary input and output.
                                                             (line    6)
* assume_pos:                            Functions and Variables for Facts.
                                                             (line  125)
* assume_pos_pred:                       Functions and Variables for Facts.
                                                             (line  147)
* asymbol:                               Functions and Variables for atensor.
                                                             (line   73)
* asympa:                                Introduction to asympa.
                                                             (line    6)
* at:                                    Functions and Variables for Differentiation.
                                                             (line  106)
* at <1>:                                Functions and Variables for Differentiation.
                                                             (line  107)
* atan:                                  Functions and Variables for Trigonometric.
                                                             (line  106)
* atan2:                                 Functions and Variables for Trigonometric.
                                                             (line  109)
* atanh:                                 Functions and Variables for Trigonometric.
                                                             (line  112)
* atensimp:                              Functions and Variables for atensor.
                                                             (line   53)
* atom:                                  Functions and Variables for Expressions.
                                                             (line   61)
* atomgrad:                              Functions and Variables for Differentiation.
                                                             (line  149)
* atrig1:                                Functions and Variables for Trigonometric.
                                                             (line  115)
* atvalue:                               Functions and Variables for Differentiation.
                                                             (line  154)
* atvalue <1>:                           Functions and Variables for Differentiation.
                                                             (line  155)
* augcoefmatrix:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line   21)
* augmented_lagrangian_method:           Functions and Variables for augmented_lagrangian.
                                                             (line    6)
* augmented_lagrangian_method <1>:       Functions and Variables for augmented_lagrangian.
                                                             (line    7)
* augmented_lagrangian_method <2>:       Functions and Variables for augmented_lagrangian.
                                                             (line    9)
* augmented_lagrangian_method <3>:       Functions and Variables for augmented_lagrangian.
                                                             (line   10)
* av:                                    Functions and Variables for atensor.
                                                             (line   90)
* average_degree:                        Functions and Variables for graphs.
                                                             (line  320)
* axes:                                  Plotting Options.   (line   18)
* axis_3d:                               Functions and Variables for draw.
                                                             (line  199)
* axis_bottom:                           Functions and Variables for draw.
                                                             (line  217)
* axis_left:                             Functions and Variables for draw.
                                                             (line  234)
* axis_right:                            Functions and Variables for draw.
                                                             (line  251)
* axis_top:                              Functions and Variables for draw.
                                                             (line  268)
* azimuth:                               Plotting Options.   (line   27)
* background_color:                      Functions and Variables for draw.
                                                             (line  285)
* backsubst:                             Functions and Variables for Equations.
                                                             (line  210)
* backtrace:                             Functions and Variables for Program Flow.
                                                             (line    6)
* backtrace <1>:                         Functions and Variables for Program Flow.
                                                             (line    7)
* bars:                                  Functions and Variables for draw.
                                                             (line 2309)
* barsplot:                              Functions and Variables for statistical graphs.
                                                             (line    6)
* barsplot_description:                  Functions and Variables for statistical graphs.
                                                             (line    7)
* Base of natural logarithm:             Functions and Variables for Constants.
                                                             (line    7)
* bashindices:                           Sums and Products.  (line    6)
* batch:                                 Functions and Variables for File Input and Output.
                                                             (line   14)
* batch <1>:                             Functions and Variables for File Input and Output.
                                                             (line   15)
* batchload:                             Functions and Variables for File Input and Output.
                                                             (line   62)
* bc2:                                   Functions and Variables for Differential Equations.
                                                             (line    6)
* bdvac:                                 Functions and Variables for ctensor.
                                                             (line  728)
* belln:                                 Functions and Variables for Sets.
                                                             (line   24)
* benefit_cost:                          Functions and Variables for finance.
                                                             (line  226)
* berlefact:                             Functions and Variables for Polynomials.
                                                             (line   12)
* bern:                                  Functions and Variables for Number Theory.
                                                             (line    6)
* bernpoly:                              Functions and Variables for Number Theory.
                                                             (line   24)
* bernstein_approx:                      Functions and Variables for Bernstein.
                                                             (line   73)
* bernstein_expand:                      Functions and Variables for Bernstein.
                                                             (line  102)
* bernstein_explicit:                    Functions and Variables for Bernstein.
                                                             (line   48)
* bernstein_poly:                        Functions and Variables for Bernstein.
                                                             (line    6)
* besselexpand:                          Bessel Functions.   (line  126)
* bessel_i:                              Bessel Functions.   (line   33)
* bessel_j:                              Bessel Functions.   (line    6)
* bessel_k:                              Bessel Functions.   (line   48)
* bessel_y:                              Bessel Functions.   (line   22)
* beta:                                  Gamma and factorial Functions.
                                                             (line  166)
* beta_args_sum_to_integer:              Gamma and factorial Functions.
                                                             (line  642)
* beta_expand:                           Gamma and factorial Functions.
                                                             (line  636)
* beta_incomplete:                       Gamma and factorial Functions.
                                                             (line  272)
* beta_incomplete_generalized:           Gamma and factorial Functions.
                                                             (line  515)
* beta_incomplete_regularized:           Gamma and factorial Functions.
                                                             (line  419)
* bezout:                                Functions and Variables for Polynomials.
                                                             (line   19)
* bfallroots:                            Functions and Variables for Equations.
                                                             (line  200)
* bfallroots <1>:                        Functions and Variables for Equations.
                                                             (line  201)
* bffac:                                 Gamma and factorial Functions.
                                                             (line   10)
* bfhzeta:                               Functions and Variables for Number Theory.
                                                             (line   33)
* bfloat:                                Functions and Variables for Numbers.
                                                             (line    6)
* bfloatp:                               Functions and Variables for Numbers.
                                                             (line   15)
* bfpsi:                                 Gamma and factorial Functions.
                                                             (line   15)
* bfpsi0:                                Gamma and factorial Functions.
                                                             (line   16)
* bftorat:                               Functions and Variables for Numbers.
                                                             (line   20)
* bftrunc:                               Functions and Variables for Numbers.
                                                             (line   28)
* bfzeta:                                Functions and Variables for Number Theory.
                                                             (line   28)
* bf_find_root:                          Functions and Variables for fast Fourier transform.
                                                             (line  289)
* bf_find_root <1>:                      Functions and Variables for fast Fourier transform.
                                                             (line  290)
* bf_fmin_cobyla:                        Functions and Variables for cobyla.
                                                             (line   49)
* bf_fmin_cobyla <1>:                    Functions and Variables for cobyla.
                                                             (line   50)
* biconnected_components:                Functions and Variables for graphs.
                                                             (line  330)
* bimetric:                              Functions and Variables for ctensor.
                                                             (line  749)
* binomial:                              Combinatorial Functions.
                                                             (line   20)
* bipartition:                           Functions and Variables for graphs.
                                                             (line  344)
* block:                                 Functions and Variables for Function Definition.
                                                             (line   64)
* block <1>:                             Functions and Variables for Function Definition.
                                                             (line   65)
* blockmatrixp:                          Functions and Variables for linearalgebra.
                                                             (line   20)
* bode_gain:                             Functions and Variables for bode.
                                                             (line    6)
* bode_phase:                            Functions and Variables for bode.
                                                             (line   51)
* border:                                Functions and Variables for draw.
                                                             (line  293)
* bothcoef:                              Functions and Variables for Polynomials.
                                                             (line   24)
* boundaries_array:                      Functions and Variables for worldmap.
                                                             (line   11)
* box:                                   Functions and Variables for Expressions.
                                                             (line   68)
* box <1>:                               Functions and Variables for Expressions.
                                                             (line   69)
* box <2>:                               Plotting Options.   (line   39)
* boxchar:                               Functions and Variables for Expressions.
                                                             (line  116)
* boxplot:                               Functions and Variables for statistical graphs.
                                                             (line  135)
* boxplot <1>:                           Functions and Variables for statistical graphs.
                                                             (line  136)
* boxplot_description:                   Functions and Variables for statistical graphs.
                                                             (line  137)
* break:                                 Functions and Variables for Function Definition.
                                                             (line  106)
* breakup:                               Functions and Variables for Equations.
                                                             (line  227)
* bug_report:                            Functions and Variables for Bug Detection and Reporting.
                                                             (line   60)
* buildq:                                Macros.             (line    6)
* build_info:                            Functions and Variables for Bug Detection and Reporting.
                                                             (line   71)
* burn:                                  Functions and Variables for Number Theory.
                                                             (line   50)
* cabs:                                  Functions for Complex Numbers.
                                                             (line    6)
* canform:                               Functions and Variables for itensor.
                                                             (line  554)
* canform <1>:                           Functions and Variables for itensor.
                                                             (line  555)
* canten:                                Functions and Variables for itensor.
                                                             (line  478)
* cardinality:                           Functions and Variables for Sets.
                                                             (line   51)
* carg:                                  Functions for Complex Numbers.
                                                             (line    9)
* cartan:                                Functions and Variables for Differentiation.
                                                             (line  209)
* cartesian_product:                     Functions and Variables for Sets.
                                                             (line   69)
* catch:                                 Functions and Variables for Function Definition.
                                                             (line  112)
* cauchysum:                             Functions and Variables for Series.
                                                             (line    6)
* cauchy_matrix:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line   33)
* cauchy_matrix <1>:                     Functions and Variables for Matrices and Linear Algebra.
                                                             (line   35)
* cbffac:                                Gamma and factorial Functions.
                                                             (line   24)
* cbrange:                               Functions and Variables for draw.
                                                             (line  312)
* cbtics:                                Functions and Variables for draw.
                                                             (line  340)
* cdf_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  210)
* cdf_beta:                              Functions and Variables for continuous distributions.
                                                             (line  766)
* cdf_binomial:                          Functions and Variables for discrete distributions.
                                                             (line   91)
* cdf_cauchy:                            Functions and Variables for continuous distributions.
                                                             (line 1213)
* cdf_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  257)
* cdf_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  820)
* cdf_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  350)
* cdf_exp:                               Functions and Variables for continuous distributions.
                                                             (line  512)
* cdf_f:                                 Functions and Variables for continuous distributions.
                                                             (line  431)
* cdf_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  707)
* cdf_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   22)
* cdf_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  305)
* cdf_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1237)
* cdf_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  403)
* cdf_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1168)
* cdf_logistic:                          Functions and Variables for continuous distributions.
                                                             (line  871)
* cdf_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  644)
* cdf_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  458)
* cdf_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  382)
* cdf_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  162)
* cdf_normal:                            Functions and Variables for continuous distributions.
                                                             (line   10)
* cdf_pareto:                            Functions and Variables for continuous distributions.
                                                             (line  916)
* cdf_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  149)
* cdf_rank_sum:                          Functions and Variables for special distributions.
                                                             (line   24)
* cdf_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1017)
* cdf_signed_rank:                       Functions and Variables for special distributions.
                                                             (line   12)
* cdf_student_t:                         Functions and Variables for continuous distributions.
                                                             (line   76)
* cdf_weibull:                           Functions and Variables for continuous distributions.
                                                             (line  962)
* cdisplay:                              Functions and Variables for ctensor.
                                                             (line  773)
* ceiling:                               Functions for Numbers.
                                                             (line   14)
* central_moment:                        Functions and Variables for descriptive statistics.
                                                             (line  133)
* central_moment <1>:                    Functions and Variables for descriptive statistics.
                                                             (line  134)
* cequal:                                Functions and Variables for characters.
                                                             (line   21)
* cequalignore:                          Functions and Variables for characters.
                                                             (line   24)
* cf:                                    Functions and Variables for Number Theory.
                                                             (line   71)
* cfdisrep:                              Functions and Variables for Number Theory.
                                                             (line  131)
* cfexpand:                              Functions and Variables for Number Theory.
                                                             (line  147)
* cflength:                              Functions and Variables for Number Theory.
                                                             (line  163)
* cframe_flag:                           Functions and Variables for ctensor.
                                                             (line 1014)
* cgeodesic:                             Functions and Variables for ctensor.
                                                             (line  722)
* cgreaterp:                             Functions and Variables for characters.
                                                             (line   27)
* cgreaterpignore:                       Functions and Variables for characters.
                                                             (line   31)
* changename:                            Functions and Variables for itensor.
                                                             (line   22)
* changevar:                             Functions and Variables for Integration.
                                                             (line    6)
* chaosgame:                             Functions and Variables for dynamics.
                                                             (line    6)
* charat:                                Functions and Variables for strings.
                                                             (line   10)
* charfun:                               Functions and Variables for Predicates.
                                                             (line    6)
* charfun2:                              Functions and Variables for interpol.
                                                             (line  101)
* charlist:                              Functions and Variables for strings.
                                                             (line   17)
* charp:                                 Functions and Variables for characters.
                                                             (line   34)
* charpoly:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line   64)
* chebyshev_t:                           Functions and Variables for orthogonal polynomials.
                                                             (line   17)
* chebyshev_u:                           Functions and Variables for orthogonal polynomials.
                                                             (line   22)
* checkdiv:                              Functions and Variables for ctensor.
                                                             (line  714)
* check_overlaps:                        Functions and Variables for Affine.
                                                             (line   79)
* cholesky:                              Functions and Variables for linearalgebra.
                                                             (line   67)
* cholesky <1>:                          Functions and Variables for linearalgebra.
                                                             (line   68)
* christof:                              Functions and Variables for ctensor.
                                                             (line  172)
* chromatic_index:                       Functions and Variables for graphs.
                                                             (line  356)
* chromatic_number:                      Functions and Variables for graphs.
                                                             (line  365)
* cint:                                  Functions and Variables for characters.
                                                             (line   38)
* circulant_graph:                       Functions and Variables for graphs.
                                                             (line   67)
* clear_edge_weight:                     Functions and Variables for graphs.
                                                             (line  375)
* clear_rules:                           Functions and Variables for Rules and Patterns.
                                                             (line  803)
* clear_vertex_label:                    Functions and Variables for graphs.
                                                             (line  388)
* clebsch_graph:                         Functions and Variables for graphs.
                                                             (line   87)
* clessp:                                Functions and Variables for characters.
                                                             (line   41)
* clesspignore:                          Functions and Variables for characters.
                                                             (line   45)
* close:                                 Functions and Variables for input and output.
                                                             (line   25)
* closefile:                             Functions and Variables for File Input and Output.
                                                             (line   77)
* cmetric:                               Functions and Variables for ctensor.
                                                             (line   14)
* cmetric <1>:                           Functions and Variables for ctensor.
                                                             (line   15)
* cnonmet_flag:                          Functions and Variables for ctensor.
                                                             (line 1028)
* coeff:                                 Functions and Variables for Polynomials.
                                                             (line   39)
* coeff <1>:                             Functions and Variables for Polynomials.
                                                             (line   40)
* coefmatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  100)
* cograd:                                Functions and Variables for ctensor.
                                                             (line  663)
* col:                                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  110)
* collapse:                              Functions and Variables for Expressions.
                                                             (line  125)
* collectterms:                          Package facexp.     (line   87)
* color:                                 Plotting Options.   (line   46)
* color <1>:                             Functions and Variables for draw.
                                                             (line  363)
* colorbox:                              Plotting Options.   (line   61)
* colorbox <1>:                          Functions and Variables for draw.
                                                             (line  411)
* columnop:                              Functions and Variables for linearalgebra.
                                                             (line   24)
* columns:                               Functions and Variables for draw.
                                                             (line  432)
* columnspace:                           Functions and Variables for linearalgebra.
                                                             (line   35)
* columnswap:                            Functions and Variables for linearalgebra.
                                                             (line   30)
* columnvector:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  114)
* combination:                           Package functs.     (line  153)
* combine:                               Functions and Variables for Simplification.
                                                             (line   26)
* commutative:                           Functions and Variables for Simplification.
                                                             (line   30)
* comp2pui:                              Functions and Variables for Symmetries.
                                                             (line    9)
* compare:                               Functions and Variables for Predicates.
                                                             (line   22)
* compfile:                              Functions and Variables for Function Definition.
                                                             (line  135)
* compfile <1>:                          Functions and Variables for Function Definition.
                                                             (line  136)
* compfile <2>:                          Functions and Variables for Function Definition.
                                                             (line  137)
* compile:                               Functions and Variables for Function Definition.
                                                             (line  152)
* compile <1>:                           Functions and Variables for Function Definition.
                                                             (line  153)
* compile <2>:                           Functions and Variables for Function Definition.
                                                             (line  154)
* compile_file:                          Functions and Variables for Function Definition.
                                                             (line 1234)
* compile_file <1>:                      Functions and Variables for Function Definition.
                                                             (line 1235)
* compile_file <2>:                      Functions and Variables for Function Definition.
                                                             (line 1236)
* complement_graph:                      Functions and Variables for graphs.
                                                             (line   90)
* complete_bipartite_graph:              Functions and Variables for graphs.
                                                             (line   93)
* complete_graph:                        Functions and Variables for graphs.
                                                             (line   96)
* Complex infinity:                      Functions and Variables for Constants.
                                                             (line   39)
* complex_number_p:                      Functions and Variables for to_poly_solve.
                                                             (line  185)
* components:                            Functions and Variables for itensor.
                                                             (line  183)
* compose_functions:                     Functions and Variables for to_poly_solve.
                                                             (line  206)
* concan:                                Functions and Variables for itensor.
                                                             (line  488)
* concat:                                Functions and Variables for Strings.
                                                             (line    6)
* conditional evaluation:                Functions and Variables for to_poly_solve.
                                                             (line   82)
* conjugate:                             Functions for Complex Numbers.
                                                             (line   37)
* conmetderiv:                           Functions and Variables for itensor.
                                                             (line  728)
* connected_components:                  Functions and Variables for graphs.
                                                             (line  401)
* connect_vertices:                      Functions and Variables for graphs.
                                                             (line 1151)
* cons:                                  Functions and Variables for Lists.
                                                             (line   58)
* constant:                              Functions and Variables for Predicates.
                                                             (line   52)
* constantp:                             Functions and Variables for Predicates.
                                                             (line   57)
* constituent:                           Functions and Variables for characters.
                                                             (line   48)
* constvalue:                            Functions and Variables for ezunits.
                                                             (line  246)
* cont2part:                             Functions and Variables for Symmetries.
                                                             (line  196)
* content:                               Functions and Variables for Polynomials.
                                                             (line  121)
* context:                               Functions and Variables for Facts.
                                                             (line  214)
* contexts:                              Functions and Variables for Facts.
                                                             (line  231)
* continuous_freq:                       Functions and Variables for data manipulation.
                                                             (line    6)
* continuous_freq <1>:                   Functions and Variables for data manipulation.
                                                             (line    7)
* contortion:                            Functions and Variables for ctensor.
                                                             (line  602)
* contour:                               Functions and Variables for draw.
                                                             (line  450)
* contour_levels:                        Functions and Variables for draw.
                                                             (line  478)
* contour_plot:                          Functions and Variables for Plotting.
                                                             (line    6)
* contract:                              Functions and Variables for itensor.
                                                             (line  168)
* contract <1>:                          Functions and Variables for Symmetries.
                                                             (line  207)
* Contraction with a vector:             Functions and Variables for itensor.
                                                             (line 1325)
* contract_edge:                         Functions and Variables for graphs.
                                                             (line 1169)
* contragrad:                            Functions and Variables for ctensor.
                                                             (line  667)
* contrib_ode:                           Functions and Variables for contrib_ode.
                                                             (line    6)
* convert:                               Functions and Variables for Units.
                                                             (line  137)
* coord:                                 Functions and Variables for itensor.
                                                             (line  708)
* copy:                                  Functions and Variables for linearalgebra.
                                                             (line   41)
* copylist:                              Functions and Variables for Lists.
                                                             (line   64)
* copymatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  140)
* copy_graph:                            Functions and Variables for graphs.
                                                             (line   64)
* cor:                                   Functions and Variables for descriptive statistics.
                                                             (line  564)
* cor <1>:                               Functions and Variables for descriptive statistics.
                                                             (line  565)
* cos:                                   Functions and Variables for Trigonometric.
                                                             (line  122)
* cosh:                                  Functions and Variables for Trigonometric.
                                                             (line  125)
* cosnpiflag:                            Functions and Variables for Fourier series.
                                                             (line   62)
* cot:                                   Functions and Variables for Trigonometric.
                                                             (line  128)
* coth:                                  Functions and Variables for Trigonometric.
                                                             (line  131)
* cov:                                   Functions and Variables for descriptive statistics.
                                                             (line  468)
* cov1:                                  Functions and Variables for descriptive statistics.
                                                             (line  497)
* covdiff:                               Functions and Variables for itensor.
                                                             (line  863)
* covect:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  115)
* covers:                                Package functs.     (line  138)
* create_graph:                          Functions and Variables for graphs.
                                                             (line    9)
* create_graph <1>:                      Functions and Variables for graphs.
                                                             (line   10)
* create_graph <2>:                      Functions and Variables for graphs.
                                                             (line   11)
* create_list:                           Functions and Variables for Lists.
                                                             (line   68)
* csc:                                   Functions and Variables for Trigonometric.
                                                             (line  134)
* csch:                                  Functions and Variables for Trigonometric.
                                                             (line  137)
* csetup:                                Functions and Variables for ctensor.
                                                             (line    9)
* cspline:                               Functions and Variables for interpol.
                                                             (line  169)
* cspline <1>:                           Functions and Variables for interpol.
                                                             (line  170)
* ctaylor:                               Functions and Variables for ctensor.
                                                             (line  288)
* ctaypov:                               Functions and Variables for ctensor.
                                                             (line 1045)
* ctaypt:                                Functions and Variables for ctensor.
                                                             (line 1050)
* ctayswitch:                            Functions and Variables for ctensor.
                                                             (line 1034)
* ctayvar:                               Functions and Variables for ctensor.
                                                             (line 1040)
* ctorsion_flag:                         Functions and Variables for ctensor.
                                                             (line 1022)
* ctransform:                            Functions and Variables for ctensor.
                                                             (line  614)
* ctranspose:                            Functions and Variables for linearalgebra.
                                                             (line   75)
* ctrgsimp:                              Functions and Variables for ctensor.
                                                             (line 1009)
* ct_coords:                             Functions and Variables for ctensor.
                                                             (line 1177)
* ct_coordsys:                           Functions and Variables for ctensor.
                                                             (line   30)
* ct_coordsys <1>:                       Functions and Variables for ctensor.
                                                             (line   31)
* cube_graph:                            Functions and Variables for graphs.
                                                             (line  108)
* cuboctahedron_graph:                   Functions and Variables for graphs.
                                                             (line  105)
* cunlisp:                               Functions and Variables for characters.
                                                             (line   60)
* Current input expression:              Functions and Variables for Command Line.
                                                             (line    7)
* current_let_rule_package:              Functions and Variables for Rules and Patterns.
                                                             (line   48)
* cv:                                    Functions and Variables for descriptive statistics.
                                                             (line  157)
* cv <1>:                                Functions and Variables for descriptive statistics.
                                                             (line  158)
* cycle_digraph:                         Functions and Variables for graphs.
                                                             (line   99)
* cycle_graph:                           Functions and Variables for graphs.
                                                             (line  102)
* cylindrical:                           Functions and Variables for draw.
                                                             (line 2337)
* data_file_name:                        Functions and Variables for draw.
                                                             (line  529)
* days360:                               Functions and Variables for finance.
                                                             (line    6)
* dblint:                                Functions and Variables for Integration.
                                                             (line   58)
* deactivate:                            Functions and Variables for Facts.
                                                             (line  259)
* debugmode:                             Functions and Variables for Debugging.
                                                             (line    6)
* declare:                               Functions and Variables for Properties.
                                                             (line    6)
* declare_constvalue:                    Functions and Variables for ezunits.
                                                             (line  247)
* declare_dimensions:                    Functions and Variables for ezunits.
                                                             (line  474)
* declare_fundamental_dimensions:        Functions and Variables for ezunits.
                                                             (line  504)
* declare_fundamental_units:             Functions and Variables for ezunits.
                                                             (line  535)
* declare_qty:                           Functions and Variables for ezunits.
                                                             (line  351)
* declare_translated:                    Functions and Variables for Function Definition.
                                                             (line 1261)
* declare_units:                         Functions and Variables for ezunits.
                                                             (line  291)
* declare_unit_conversion:               Functions and Variables for ezunits.
                                                             (line  434)
* declare_weights:                       Functions and Variables for Affine.
                                                             (line   50)
* decsym:                                Functions and Variables for itensor.
                                                             (line  502)
* default_let_rule_package:              Functions and Variables for Rules and Patterns.
                                                             (line   60)
* defcon:                                Functions and Variables for itensor.
                                                             (line  147)
* defcon <1>:                            Functions and Variables for itensor.
                                                             (line  148)
* define:                                Functions and Variables for Function Definition.
                                                             (line  166)
* define <1>:                            Functions and Variables for Function Definition.
                                                             (line  167)
* define <2>:                            Functions and Variables for Function Definition.
                                                             (line  168)
* define <3>:                            Functions and Variables for Function Definition.
                                                             (line  169)
* define <4>:                            Functions and Variables for Function Definition.
                                                             (line  170)
* define_variable:                       Functions and Variables for Function Definition.
                                                             (line  251)
* defint:                                Functions and Variables for Integration.
                                                             (line   99)
* defmatch:                              Functions and Variables for Rules and Patterns.
                                                             (line   67)
* defmatch <1>:                          Functions and Variables for Rules and Patterns.
                                                             (line   68)
* defrule:                               Functions and Variables for Rules and Patterns.
                                                             (line  162)
* defstruct:                             Functions and Variables for Structures.
                                                             (line   11)
* defstruct <1>:                         Functions and Variables for Structures.
                                                             (line   12)
* deftaylor:                             Functions and Variables for Series.
                                                             (line   37)
* degree_sequence:                       Functions and Variables for graphs.
                                                             (line  436)
* del:                                   Functions and Variables for Differentiation.
                                                             (line  220)
* delay:                                 Functions and Variables for draw.
                                                             (line  540)
* delete:                                Functions and Variables for Lists.
                                                             (line   95)
* delete <1>:                            Functions and Variables for Lists.
                                                             (line   96)
* deleten:                               Functions and Variables for ctensor.
                                                             (line  987)
* delta:                                 Functions and Variables for Differentiation.
                                                             (line  239)
* demo:                                  Functions and Variables for Help.
                                                             (line   31)
* demoivre:                              Functions and Variables for Simplification.
                                                             (line   36)
* demoivre <1>:                          Functions and Variables for Simplification.
                                                             (line   37)
* denom:                                 Functions and Variables for Polynomials.
                                                             (line  132)
* dependencies:                          Functions and Variables for Differentiation.
                                                             (line  254)
* depends:                               Functions and Variables for Differentiation.
                                                             (line  264)
* derivabbrev:                           Functions and Variables for Differentiation.
                                                             (line  318)
* derivdegree:                           Functions and Variables for Differentiation.
                                                             (line  325)
* derivlist:                             Functions and Variables for Differentiation.
                                                             (line  341)
* derivsubst:                            Functions and Variables for Differentiation.
                                                             (line  345)
* describe:                              Functions and Variables for Help.
                                                             (line   68)
* describe <1>:                          Functions and Variables for Help.
                                                             (line   69)
* describe <2>:                          Functions and Variables for Help.
                                                             (line   70)
* desolve:                               Functions and Variables for Differential Equations.
                                                             (line   15)
* desolve <1>:                           Functions and Variables for Differential Equations.
                                                             (line   16)
* determinant:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  150)
* detout:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  159)
* dfloat:                                Functions and Variables for to_poly_solve.
                                                             (line  256)
* dgauss_a:                              Functions and Variables for contrib_ode.
                                                             (line   98)
* dgauss_b:                              Functions and Variables for contrib_ode.
                                                             (line  101)
* dgeev:                                 Functions and Variables for lapack.
                                                             (line    6)
* dgeev <1>:                             Functions and Variables for lapack.
                                                             (line    7)
* dgemm:                                 Functions and Variables for lapack.
                                                             (line  279)
* dgemm <1>:                             Functions and Variables for lapack.
                                                             (line  280)
* dgeqrf:                                Functions and Variables for lapack.
                                                             (line   68)
* dgesv:                                 Functions and Variables for lapack.
                                                             (line   97)
* dgesvd:                                Functions and Variables for lapack.
                                                             (line  166)
* dgesvd <1>:                            Functions and Variables for lapack.
                                                             (line  167)
* diag:                                  Functions and Variables for diag.
                                                             (line    6)
* diagmatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  186)
* diagmatrixp:                           Functions and Variables for ctensor.
                                                             (line  759)
* diagmetric:                            Functions and Variables for ctensor.
                                                             (line 1000)
* diag_matrix:                           Functions and Variables for linearalgebra.
                                                             (line   80)
* diameter:                              Functions and Variables for graphs.
                                                             (line  410)
* diff:                                  Functions and Variables for Differentiation.
                                                             (line  419)
* diff <1>:                              Functions and Variables for Differentiation.
                                                             (line  351)
* diff <2>:                              Functions and Variables for Differentiation.
                                                             (line  352)
* diff <3>:                              Functions and Variables for Differentiation.
                                                             (line  353)
* diff <4>:                              Functions and Variables for Differentiation.
                                                             (line  354)
* diff <5>:                              Functions and Variables for itensor.
                                                             (line  573)
* digitcharp:                            Functions and Variables for characters.
                                                             (line   63)
* dim:                                   Functions and Variables for ctensor.
                                                             (line  993)
* dimacs_export:                         Functions and Variables for graphs.
                                                             (line 1219)
* dimacs_export <1>:                     Functions and Variables for graphs.
                                                             (line 1220)
* dimacs_import:                         Functions and Variables for graphs.
                                                             (line 1225)
* dimension:                             Functions and Variables for Equations.
                                                             (line  298)
* dimension <1>:                         Functions and Variables for Equations.
                                                             (line  299)
* dimensionless:                         Functions and Variables for ezunits.
                                                             (line  652)
* dimensions:                            Functions and Variables for draw.
                                                             (line  567)
* dimensions <1>:                        Functions and Variables for ezunits.
                                                             (line  574)
* dimensions_as_list:                    Functions and Variables for ezunits.
                                                             (line  575)
* direct:                                Functions and Variables for Symmetries.
                                                             (line  255)
* discrete_freq:                         Functions and Variables for data manipulation.
                                                             (line   45)
* disjoin:                               Functions and Variables for Sets.
                                                             (line   88)
* disjointp:                             Functions and Variables for Sets.
                                                             (line  107)
* disolate:                              Functions and Variables for Expressions.
                                                             (line  135)
* disp:                                  Functions and Variables for Display.
                                                             (line   37)
* dispcon:                               Functions and Variables for itensor.
                                                             (line    9)
* dispcon <1>:                           Functions and Variables for itensor.
                                                             (line   10)
* dispflag:                              Functions and Variables for Equations.
                                                             (line  305)
* dispform:                              Functions and Variables for Expressions.
                                                             (line  144)
* dispform <1>:                          Functions and Variables for Expressions.
                                                             (line  145)
* dispfun:                               Functions and Variables for Function Definition.
                                                             (line  343)
* dispfun <1>:                           Functions and Variables for Function Definition.
                                                             (line  344)
* dispJordan:                            Functions and Variables for diag.
                                                             (line   94)
* display:                               Functions and Variables for Display.
                                                             (line   59)
* display2d:                             Functions and Variables for Display.
                                                             (line   83)
* display_format_internal:               Functions and Variables for Display.
                                                             (line  100)
* disprule:                              Functions and Variables for Rules and Patterns.
                                                             (line  175)
* disprule <1>:                          Functions and Variables for Rules and Patterns.
                                                             (line  176)
* dispterms:                             Functions and Variables for Display.
                                                             (line  122)
* distrib:                               Functions and Variables for Simplification.
                                                             (line   52)
* distribute_over:                       Functions and Variables for Simplification.
                                                             (line   73)
* divide:                                Functions and Variables for Polynomials.
                                                             (line  136)
* divisors:                              Functions and Variables for Sets.
                                                             (line  121)
* divsum:                                Functions and Variables for Number Theory.
                                                             (line  179)
* divsum <1>:                            Functions and Variables for Number Theory.
                                                             (line  180)
* dkummer_m:                             Functions and Variables for contrib_ode.
                                                             (line  122)
* dkummer_u:                             Functions and Variables for contrib_ode.
                                                             (line  125)
* dlange:                                Functions and Variables for lapack.
                                                             (line  260)
* do:                                    Functions and Variables for Program Flow.
                                                             (line   53)
* doallmxops:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  199)
* dodecahedron_graph:                    Functions and Variables for graphs.
                                                             (line  111)
* domain:                                Functions and Variables for Simplification.
                                                             (line  120)
* domxexpt:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  206)
* domxmxops:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  238)
* domxnctimes:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  245)
* dontfactor:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  250)
* doscmxops:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  259)
* doscmxplus:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  264)
* dot0nscsimp:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  270)
* dot0simp:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  276)
* dot1simp:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  282)
* dotassoc:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  288)
* dotconstrules:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line  293)
* dotdistrib:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  300)
* dotexptsimp:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  306)
* dotident:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  311)
* dotproduct:                            Functions and Variables for linearalgebra.
                                                             (line  100)
* dotscrules:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  316)
* dotsimp:                               Functions and Variables for Affine.
                                                             (line   62)
* dpart:                                 Functions and Variables for Expressions.
                                                             (line  196)
* draw:                                  Functions and Variables for draw.
                                                             (line   53)
* draw2d:                                Functions and Variables for draw.
                                                             (line  100)
* draw3d:                                Functions and Variables for draw.
                                                             (line  110)
* drawdf:                                Functions and Variables for drawdf.
                                                             (line    9)
* drawdf <1>:                            Functions and Variables for drawdf.
                                                             (line   10)
* drawdf <2>:                            Functions and Variables for drawdf.
                                                             (line   11)
* drawdf <3>:                            Functions and Variables for drawdf.
                                                             (line   13)
* drawdf <4>:                            Functions and Variables for drawdf.
                                                             (line   14)
* drawdf <5>:                            Functions and Variables for drawdf.
                                                             (line   16)
* draw_file:                             Functions and Variables for draw.
                                                             (line  120)
* draw_graph:                            Functions and Variables for graphs.
                                                             (line 1266)
* draw_graph <1>:                        Functions and Variables for graphs.
                                                             (line 1267)
* draw_graph_program:                    Functions and Variables for graphs.
                                                             (line 1369)
* dscalar:                               Functions and Variables for Differentiation.
                                                             (line  424)
* dscalar <1>:                           Functions and Variables for ctensor.
                                                             (line  694)
* e:                                     Functions and Variables for Constants.
                                                             (line    7)
* echelon:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  322)
* edges:                                 Functions and Variables for graphs.
                                                             (line  449)
* edge_color:                            Functions and Variables for graphs.
                                                             (line 1435)
* edge_coloring:                         Functions and Variables for graphs.
                                                             (line 1462)
* edge_coloring <1>:                     Functions and Variables for graphs.
                                                             (line  418)
* edge_connectivity:                     Functions and Variables for graphs.
                                                             (line  444)
* edge_partition:                        Functions and Variables for graphs.
                                                             (line 1458)
* edge_type:                             Functions and Variables for graphs.
                                                             (line 1441)
* edge_width:                            Functions and Variables for graphs.
                                                             (line 1438)
* eigens_by_jacobi:                      Functions and Variables for linearalgebra.
                                                             (line  106)
* eigens_by_jacobi <1>:                  Functions and Variables for linearalgebra.
                                                             (line  107)
* eigenvalues:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  350)
* eigenvectors:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  375)
* eighth:                                Functions and Variables for Lists.
                                                             (line  160)
* einstein:                              Functions and Variables for ctensor.
                                                             (line  200)
* eivals:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  351)
* eivects:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  376)
* elapsed_real_time:                     Functions and Variables for Runtime Environment.
                                                             (line  180)
* elapsed_run_time:                      Functions and Variables for Runtime Environment.
                                                             (line  195)
* ele2comp:                              Functions and Variables for Symmetries.
                                                             (line   26)
* ele2polynome:                          Functions and Variables for Symmetries.
                                                             (line  467)
* ele2pui:                               Functions and Variables for Symmetries.
                                                             (line   20)
* elem:                                  Functions and Variables for Symmetries.
                                                             (line   32)
* elementp:                              Functions and Variables for Sets.
                                                             (line  161)
* elevation:                             Plotting Options.   (line   70)
* elevation_grid:                        Functions and Variables for draw.
                                                             (line 2356)
* elim:                                  Functions and Variables for to_poly_solve.
                                                             (line  284)
* eliminate:                             Functions and Variables for Polynomials.
                                                             (line  151)
* eliminate_using:                       Functions and Variables for to_poly_solve.
                                                             (line  362)
* elim_allbut:                           Functions and Variables for to_poly_solve.
                                                             (line  343)
* ellipse:                               Functions and Variables for draw.
                                                             (line 2384)
* elliptic_e:                            Functions and Variables for Elliptic Integrals.
                                                             (line   13)
* elliptic_ec:                           Functions and Variables for Elliptic Integrals.
                                                             (line   50)
* elliptic_eu:                           Functions and Variables for Elliptic Integrals.
                                                             (line   20)
* elliptic_f:                            Functions and Variables for Elliptic Integrals.
                                                             (line    6)
* elliptic_kc:                           Functions and Variables for Elliptic Integrals.
                                                             (line   42)
* elliptic_pi:                           Functions and Variables for Elliptic Integrals.
                                                             (line   35)
* ematrix:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  484)
* emptyp:                                Functions and Variables for Sets.
                                                             (line  173)
* empty_graph:                           Functions and Variables for graphs.
                                                             (line  114)
* endcons:                               Functions and Variables for Lists.
                                                             (line  165)
* enhanced3d:                            Functions and Variables for draw.
                                                             (line  608)
* entermatrix:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  489)
* entertensor:                           Functions and Variables for itensor.
                                                             (line   15)
* entier:                                Functions for Numbers.
                                                             (line   54)
* epsilon_lp:                            Functions and Variables for simplex.
                                                             (line    6)
* equal:                                 Functions and Variables for Predicates.
                                                             (line   87)
* equalp:                                Functions and Variables for Fourier series.
                                                             (line    6)
* equiv_classes:                         Functions and Variables for Sets.
                                                             (line  184)
* erf:                                   Error Function.     (line    9)
* erfc:                                  Error Function.     (line   14)
* erfflag:                               Functions and Variables for Integration.
                                                             (line  112)
* erfi:                                  Error Function.     (line   19)
* erf_generalized:                       Error Function.     (line   24)
* erf_representation:                    Error Function.     (line   51)
* errcatch:                              Functions and Variables for Program Flow.
                                                             (line  225)
* error:                                 Functions and Variables for Program Flow.
                                                             (line  235)
* error <1>:                             Functions and Variables for Program Flow.
                                                             (line  236)
* errormsg:                              Functions and Variables for Program Flow.
                                                             (line  312)
* errormsg <1>:                          Functions and Variables for Program Flow.
                                                             (line  307)
* errors:                                Functions and Variables for draw.
                                                             (line 2415)
* error_size:                            Functions and Variables for Program Flow.
                                                             (line  249)
* error_syms:                            Functions and Variables for Program Flow.
                                                             (line  292)
* error_type:                            Functions and Variables for draw.
                                                             (line  641)
* euler:                                 Functions and Variables for Number Theory.
                                                             (line  195)
* Euler’s number:                        Functions and Variables for Constants.
                                                             (line    7)
* Euler-Mascheroni constant:             Functions and Variables for Constants.
                                                             (line   20)
* ev:                                    Functions and Variables for Evaluation.
                                                             (line  234)
* eval:                                  Functions and Variables for Evaluation.
                                                             (line  388)
* eval_string:                           Functions and Variables for strings.
                                                             (line   25)
* evenfun:                               Functions and Variables for Simplification.
                                                             (line  126)
* evenp:                                 Functions and Variables for Numbers.
                                                             (line   36)
* every:                                 Functions and Variables for Sets.
                                                             (line  213)
* every <1>:                             Functions and Variables for Sets.
                                                             (line  214)
* evflag:                                Functions and Variables for Evaluation.
                                                             (line  406)
* evfun:                                 Functions and Variables for Evaluation.
                                                             (line  467)
* evolution:                             Functions and Variables for dynamics.
                                                             (line   15)
* evolution2d:                           Functions and Variables for dynamics.
                                                             (line   26)
* evundiff:                              Functions and Variables for itensor.
                                                             (line  634)
* ev_point:                              Functions and Variables for zeilberger.
                                                             (line  149)
* example:                               Functions and Variables for Help.
                                                             (line  132)
* example <1>:                           Functions and Variables for Help.
                                                             (line  133)
* exp:                                   Root Exponential and Logarithmic Functions.
                                                             (line   41)
* expand:                                Functions and Variables for Simplification.
                                                             (line  147)
* expand <1>:                            Functions and Variables for Simplification.
                                                             (line  148)
* expandwrt:                             Functions and Variables for Simplification.
                                                             (line  227)
* expandwrt_denom:                       Functions and Variables for Simplification.
                                                             (line  238)
* expandwrt_factored:                    Functions and Variables for Simplification.
                                                             (line  246)
* expintegral_chi:                       Exponential Integrals.
                                                             (line   30)
* expintegral_ci:                        Exponential Integrals.
                                                             (line   24)
* expintegral_e:                         Exponential Integrals.
                                                             (line   18)
* expintegral_e1:                        Exponential Integrals.
                                                             (line    9)
* expintegral_ei:                        Exponential Integrals.
                                                             (line   12)
* expintegral_li:                        Exponential Integrals.
                                                             (line   15)
* expintegral_shi:                       Exponential Integrals.
                                                             (line   27)
* expintegral_si:                        Exponential Integrals.
                                                             (line   21)
* expintexpand:                          Exponential Integrals.
                                                             (line   40)
* expintrep:                             Exponential Integrals.
                                                             (line   33)
* explicit:                              Functions and Variables for draw.
                                                             (line 2455)
* explicit <1>:                          Functions and Variables for draw.
                                                             (line 2456)
* explose:                               Functions and Variables for Symmetries.
                                                             (line  222)
* expon:                                 Functions and Variables for Simplification.
                                                             (line  254)
* exponentialize:                        Functions and Variables for Simplification.
                                                             (line  261)
* exponentialize <1>:                    Functions and Variables for Simplification.
                                                             (line  262)
* expop:                                 Functions and Variables for Simplification.
                                                             (line  274)
* express:                               Functions and Variables for Differentiation.
                                                             (line  430)
* expt:                                  Functions and Variables for Display.
                                                             (line  134)
* exptdispflag:                          Functions and Variables for Display.
                                                             (line  143)
* exptisolate:                           Functions and Variables for Expressions.
                                                             (line  210)
* exptsubst:                             Functions and Variables for Expressions.
                                                             (line  216)
* exsec:                                 Package functs.     (line  143)
* extdiff:                               Functions and Variables for itensor.
                                                             (line 1352)
* extract_linear_equations:              Functions and Variables for Affine.
                                                             (line  101)
* extremal_subset:                       Functions and Variables for Sets.
                                                             (line  278)
* extremal_subset <1>:                   Functions and Variables for Sets.
                                                             (line  279)
* ezgcd:                                 Functions and Variables for Polynomials.
                                                             (line  178)
* f90:                                   Functions and Variables for f90.
                                                             (line    6)
* facexpand:                             Functions and Variables for Polynomials.
                                                             (line  207)
* facsum:                                Package facexp.     (line   22)
* facsum_combine:                        Package facexp.     (line   70)
* factcomb:                              Combinatorial Functions.
                                                             (line   42)
* factlim:                               Combinatorial Functions.
                                                             (line  134)
* factor:                                Functions and Variables for Polynomials.
                                                             (line  213)
* factor <1>:                            Functions and Variables for Polynomials.
                                                             (line  214)
* factorfacsum:                          Package facexp.     (line   81)
* factorflag:                            Functions and Variables for Polynomials.
                                                             (line  340)
* factorial:                             Combinatorial Functions.
                                                             (line   49)
* factorial_expand:                      Combinatorial Functions.
                                                             (line  140)
* factorout:                             Functions and Variables for Polynomials.
                                                             (line  346)
* factorsum:                             Functions and Variables for Polynomials.
                                                             (line  365)
* facts:                                 Functions and Variables for Facts.
                                                             (line  263)
* facts <1>:                             Functions and Variables for Facts.
                                                             (line  264)
* false:                                 Functions and Variables for Constants.
                                                             (line   14)
* fasttimes:                             Functions and Variables for Polynomials.
                                                             (line  384)
* fast_central_elements:                 Functions and Variables for Affine.
                                                             (line   68)
* fast_linsolve:                         Functions and Variables for Affine.
                                                             (line    6)
* fb:                                    Functions and Variables for ctensor.
                                                             (line 1129)
* feature:                               Functions and Variables for Runtime Environment.
                                                             (line    6)
* featurep:                              Functions and Variables for Runtime Environment.
                                                             (line   16)
* features:                              Functions and Variables for Properties.
                                                             (line  306)
* fernfale:                              Definitions for IFS fractals.
                                                             (line   39)
* Fetch documentation:                   Functions and Variables for Command Line.
                                                             (line  172)
* Fetch documentation (inexact search):  Functions and Variables for Command Line.
                                                             (line  184)
* fft:                                   Functions and Variables for fast Fourier transform.
                                                             (line   94)
* fib:                                   Functions and Variables for Number Theory.
                                                             (line  204)
* fibtophi:                              Functions and Variables for Number Theory.
                                                             (line  214)
* fifth:                                 Functions and Variables for Lists.
                                                             (line  171)
* filename_merge:                        Functions and Variables for File Input and Output.
                                                             (line   95)
* file_name:                             Functions and Variables for draw.
                                                             (line  651)
* file_name <1>:                         Functions and Variables for graphs.
                                                             (line 1491)
* file_output_append:                    Functions and Variables for File Input and Output.
                                                             (line   82)
* file_search:                           Functions and Variables for File Input and Output.
                                                             (line  104)
* file_search <1>:                       Functions and Variables for File Input and Output.
                                                             (line  105)
* file_search_demo:                      Functions and Variables for File Input and Output.
                                                             (line  148)
* file_search_lisp:                      Functions and Variables for File Input and Output.
                                                             (line  147)
* file_search_maxima:                    Functions and Variables for File Input and Output.
                                                             (line  146)
* file_search_tests:                     Functions and Variables for File Input and Output.
                                                             (line  150)
* file_search_usage:                     Functions and Variables for File Input and Output.
                                                             (line  149)
* file_type:                             Functions and Variables for File Input and Output.
                                                             (line  183)
* file_type_lisp:                        Functions and Variables for File Input and Output.
                                                             (line  206)
* file_type_maxima:                      Functions and Variables for File Input and Output.
                                                             (line  214)
* fillarray:                             Functions and Variables for Arrays.
                                                             (line  201)
* filled_func:                           Functions and Variables for draw.
                                                             (line  685)
* fill_color:                            Functions and Variables for draw.
                                                             (line  669)
* fill_density:                          Functions and Variables for draw.
                                                             (line  677)
* findde:                                Functions and Variables for ctensor.
                                                             (line  619)
* find_root:                             Functions and Variables for fast Fourier transform.
                                                             (line  287)
* find_root <1>:                         Functions and Variables for fast Fourier transform.
                                                             (line  288)
* find_root_abs:                         Functions and Variables for fast Fourier transform.
                                                             (line  292)
* find_root_error:                       Functions and Variables for fast Fourier transform.
                                                             (line  291)
* find_root_rel:                         Functions and Variables for fast Fourier transform.
                                                             (line  293)
* first:                                 Functions and Variables for Lists.
                                                             (line  176)
* fix:                                   Functions for Numbers.
                                                             (line   98)
* fixed_vertices:                        Functions and Variables for graphs.
                                                             (line 1502)
* flatten:                               Functions and Variables for Sets.
                                                             (line  296)
* flength:                               Functions and Variables for input and output.
                                                             (line   28)
* flipflag:                              Functions and Variables for itensor.
                                                             (line  136)
* float:                                 Functions and Variables for Numbers.
                                                             (line   41)
* float2bf:                              Functions and Variables for Numbers.
                                                             (line   47)
* floatnump:                             Functions and Variables for Numbers.
                                                             (line   54)
* floor:                                 Functions for Numbers.
                                                             (line   58)
* flower_snark:                          Functions and Variables for graphs.
                                                             (line  117)
* flush:                                 Functions and Variables for itensor.
                                                             (line  687)
* flush1deriv:                           Functions and Variables for itensor.
                                                             (line  820)
* flushd:                                Functions and Variables for itensor.
                                                             (line  690)
* flushnd:                               Functions and Variables for itensor.
                                                             (line  693)
* fmin_cobyla:                           Functions and Variables for cobyla.
                                                             (line    6)
* fmin_cobyla <1>:                       Functions and Variables for cobyla.
                                                             (line    7)
* font:                                  Functions and Variables for draw.
                                                             (line  719)
* font_size:                             Functions and Variables for draw.
                                                             (line  804)
* for:                                   Functions and Variables for Program Flow.
                                                             (line  347)
* forget:                                Functions and Variables for Facts.
                                                             (line  275)
* forget <1>:                            Functions and Variables for Facts.
                                                             (line  276)
* fortindent:                            Functions and Variables for fast Fourier transform.
                                                             (line  196)
* fortran:                               Functions and Variables for fast Fourier transform.
                                                             (line  203)
* fortspaces:                            Functions and Variables for fast Fourier transform.
                                                             (line  254)
* fourcos:                               Functions and Variables for Fourier series.
                                                             (line   73)
* fourexpand:                            Functions and Variables for Fourier series.
                                                             (line   67)
* fourier:                               Functions and Variables for Fourier series.
                                                             (line   47)
* fourier_elim:                          Functions and Variables for to_poly_solve.
                                                             (line  393)
* fourint:                               Functions and Variables for Fourier series.
                                                             (line   87)
* fourintcos:                            Functions and Variables for Fourier series.
                                                             (line   92)
* fourintsin:                            Functions and Variables for Fourier series.
                                                             (line   95)
* foursimp:                              Functions and Variables for Fourier series.
                                                             (line   52)
* foursin:                               Functions and Variables for Fourier series.
                                                             (line   78)
* fourth:                                Functions and Variables for Lists.
                                                             (line  189)
* fposition:                             Functions and Variables for input and output.
                                                             (line   31)
* fposition <1>:                         Functions and Variables for input and output.
                                                             (line   32)
* fpprec:                                Functions and Variables for Numbers.
                                                             (line   58)
* fpprintprec:                           Functions and Variables for Numbers.
                                                             (line   66)
* frame_bracket:                         Functions and Variables for ctensor.
                                                             (line  419)
* freeof:                                Functions and Variables for Expressions.
                                                             (line  222)
* freshline:                             Functions and Variables for input and output.
                                                             (line   38)
* freshline <1>:                         Functions and Variables for input and output.
                                                             (line   39)
* fresnel_c:                             Error Function.     (line   27)
* fresnel_s:                             Error Function.     (line   39)
* from_adjacency_matrix:                 Functions and Variables for graphs.
                                                             (line  126)
* frucht_graph:                          Functions and Variables for graphs.
                                                             (line  129)
* fullmap:                               Functions and Variables for Function Definition.
                                                             (line  424)
* fullmapl:                              Functions and Variables for Function Definition.
                                                             (line  442)
* fullratsimp:                           Functions and Variables for Polynomials.
                                                             (line  392)
* fullratsubst:                          Functions and Variables for Polynomials.
                                                             (line  429)
* fullsetify:                            Functions and Variables for Sets.
                                                             (line  369)
* full_listify:                          Functions and Variables for Sets.
                                                             (line  355)
* funcsolve:                             Functions and Variables for Equations.
                                                             (line  312)
* functions:                             Functions and Variables for Function Definition.
                                                             (line  452)
* fundamental_dimensions:                Functions and Variables for ezunits.
                                                             (line  506)
* fundamental_units:                     Functions and Variables for ezunits.
                                                             (line  617)
* fundamental_units <1>:                 Functions and Variables for ezunits.
                                                             (line  618)
* fundef:                                Functions and Variables for Function Definition.
                                                             (line  496)
* funmake:                               Functions and Variables for Function Definition.
                                                             (line  513)
* funp:                                  Functions and Variables for Fourier series.
                                                             (line   21)
* funp <1>:                              Functions and Variables for Fourier series.
                                                             (line   22)
* fv:                                    Functions and Variables for finance.
                                                             (line   16)
* gamma:                                 Gamma and factorial Functions.
                                                             (line   29)
* gammalim:                              Gamma and factorial Functions.
                                                             (line  151)
* gamma_incomplete:                      Gamma and factorial Functions.
                                                             (line  118)
* gamma_incomplete_generalized:          Gamma and factorial Functions.
                                                             (line  139)
* gamma_incomplete_regularized:          Gamma and factorial Functions.
                                                             (line  130)
* gaussprob:                             Package functs.     (line  118)
* gauss_a:                               Functions and Variables for contrib_ode.
                                                             (line   83)
* gauss_b:                               Functions and Variables for contrib_ode.
                                                             (line   95)
* gcd:                                   Functions and Variables for Polynomials.
                                                             (line  474)
* gcdex:                                 Functions and Variables for Polynomials.
                                                             (line  517)
* gcdex <1>:                             Functions and Variables for Polynomials.
                                                             (line  518)
* gcdivide:                              Package functs.     (line   49)
* gcfac:                                 Package scifac.     (line    6)
* gcfactor:                              Functions and Variables for Polynomials.
                                                             (line  556)
* gd:                                    Package functs.     (line  123)
* gdet:                                  Functions and Variables for ctensor.
                                                             (line 1055)
* genfact:                               Combinatorial Functions.
                                                             (line  146)
* genindex:                              Functions and Variables for Miscellaneous Options.
                                                             (line   25)
* genmatrix:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  528)
* genmatrix <1>:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line  529)
* genmatrix <2>:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line  530)
* gensumnum:                             Functions and Variables for Miscellaneous Options.
                                                             (line   31)
* gensym:                                Functions and Variables for Miscellaneous Options.
                                                             (line   38)
* gensym <1>:                            Functions and Variables for Miscellaneous Options.
                                                             (line   39)
* gen_laguerre:                          Functions and Variables for orthogonal polynomials.
                                                             (line   27)
* geomap:                                Functions and Variables for worldmap.
                                                             (line  141)
* geomap <1>:                            Functions and Variables for worldmap.
                                                             (line  142)
* geometric:                             Package functs.     (line   95)
* geometric_mean:                        Functions and Variables for descriptive statistics.
                                                             (line  351)
* geometric_mean <1>:                    Functions and Variables for descriptive statistics.
                                                             (line  352)
* geosum:                                Package functs.     (line  112)
* geo_amortization:                      Functions and Variables for finance.
                                                             (line  146)
* geo_annuity_fv:                        Functions and Variables for finance.
                                                             (line   83)
* geo_annuity_pv:                        Functions and Variables for finance.
                                                             (line   71)
* get:                                   Functions and Variables for Properties.
                                                             (line  337)
* get_edge_weight:                       Functions and Variables for graphs.
                                                             (line  457)
* get_edge_weight <1>:                   Functions and Variables for graphs.
                                                             (line  458)
* get_lu_factors:                        Functions and Variables for linearalgebra.
                                                             (line  164)
* get_pixel:                             Functions and Variables for pictures.
                                                             (line    6)
* get_plot_option:                       Functions and Variables for Plotting.
                                                             (line   34)
* get_tex_environment:                   Functions and Variables for File Input and Output.
                                                             (line  679)
* get_tex_environment_default:           Functions and Variables for File Input and Output.
                                                             (line  716)
* get_vertex_label:                      Functions and Variables for graphs.
                                                             (line  475)
* gfactor:                               Functions and Variables for Polynomials.
                                                             (line  562)
* gfactorsum:                            Functions and Variables for Polynomials.
                                                             (line  573)
* ggf:                                   Functions and Variables for ggf.
                                                             (line   31)
* GGFCFMAX:                              Functions and Variables for ggf.
                                                             (line   19)
* GGFINFINITY:                           Functions and Variables for ggf.
                                                             (line    6)
* girth:                                 Functions and Variables for graphs.
                                                             (line  540)
* globalsolve:                           Functions and Variables for Equations.
                                                             (line  334)
* global_variances:                      Functions and Variables for descriptive statistics.
                                                             (line  526)
* global_variances <1>:                  Functions and Variables for descriptive statistics.
                                                             (line  527)
* gnuplot_close:                         Gnuplot_pipes Format Functions.
                                                             (line   11)
* gnuplot_curve_styles:                  Gnuplot Options.    (line   74)
* gnuplot_curve_titles:                  Gnuplot Options.    (line   70)
* gnuplot_default_term_command:          Gnuplot Options.    (line   78)
* gnuplot_dumb_term_command:             Gnuplot Options.    (line   83)
* gnuplot_file_name:                     Functions and Variables for draw.
                                                             (line  817)
* gnuplot_out_file:                      Gnuplot Options.    (line   48)
* gnuplot_pm3d:                          Gnuplot Options.    (line   58)
* gnuplot_preamble:                      Gnuplot Options.    (line   63)
* gnuplot_ps_term_command:               Gnuplot Options.    (line   89)
* gnuplot_replot:                        Gnuplot_pipes Format Functions.
                                                             (line   20)
* gnuplot_replot <1>:                    Gnuplot_pipes Format Functions.
                                                             (line   21)
* gnuplot_reset:                         Gnuplot_pipes Format Functions.
                                                             (line   27)
* gnuplot_restart:                       Gnuplot_pipes Format Functions.
                                                             (line   15)
* gnuplot_start:                         Gnuplot_pipes Format Functions.
                                                             (line    6)
* gnuplot_term:                          Gnuplot Options.    (line   12)
* go:                                    Functions and Variables for Program Flow.
                                                             (line  352)
* Golden mean:                           Functions and Variables for Constants.
                                                             (line   47)
* Gosper:                                Functions and Variables for zeilberger.
                                                             (line   12)
* GosperSum:                             Functions and Variables for zeilberger.
                                                             (line   17)
* Gosper_in_Zeilberger:                  Functions and Variables for zeilberger.
                                                             (line  121)
* gr2d:                                  Functions and Variables for draw.
                                                             (line    9)
* gr3d:                                  Functions and Variables for draw.
                                                             (line   29)
* gradef:                                Functions and Variables for Differentiation.
                                                             (line  490)
* gradef <1>:                            Functions and Variables for Differentiation.
                                                             (line  491)
* gradefs:                               Functions and Variables for Differentiation.
                                                             (line  529)
* gramschmidt:                           Functions and Variables for Matrices and Linear Algebra.
                                                             (line  588)
* gramschmidt <1>:                       Functions and Variables for Matrices and Linear Algebra.
                                                             (line  589)
* graph6_decode:                         Functions and Variables for graphs.
                                                             (line 1229)
* graph6_encode:                         Functions and Variables for graphs.
                                                             (line 1233)
* graph6_export:                         Functions and Variables for graphs.
                                                             (line 1237)
* graph6_import:                         Functions and Variables for graphs.
                                                             (line 1242)
* graph_center:                          Functions and Variables for graphs.
                                                             (line  494)
* graph_charpoly:                        Functions and Variables for graphs.
                                                             (line  484)
* graph_eigenvalues:                     Functions and Variables for graphs.
                                                             (line  503)
* graph_flow:                            Functions and Variables for finance.
                                                             (line   38)
* graph_order:                           Functions and Variables for graphs.
                                                             (line  531)
* graph_periphery:                       Functions and Variables for graphs.
                                                             (line  513)
* graph_product:                         Functions and Variables for graphs.
                                                             (line  132)
* graph_size:                            Functions and Variables for graphs.
                                                             (line  522)
* graph_union:                           Functions and Variables for graphs.
                                                             (line  140)
* great_rhombicosidodecahedron_graph:    Functions and Variables for graphs.
                                                             (line  146)
* great_rhombicuboctahedron_graph:       Functions and Variables for graphs.
                                                             (line  149)
* grid:                                  Plotting Options.   (line   82)
* grid <1>:                              Functions and Variables for draw.
                                                             (line  838)
* grid_graph:                            Functions and Variables for graphs.
                                                             (line  143)
* grind:                                 Functions and Variables for Display.
                                                             (line  164)
* grind <1>:                             Functions and Variables for Display.
                                                             (line  165)
* grobner_basis:                         Functions and Variables for Affine.
                                                             (line   19)
* grotzch_graph:                         Functions and Variables for graphs.
                                                             (line  152)
* halfangles:                            Functions and Variables for Trigonometric.
                                                             (line  140)
* hamilton_cycle:                        Functions and Variables for graphs.
                                                             (line  549)
* hamilton_path:                         Functions and Variables for graphs.
                                                             (line  560)
* hankel:                                Functions and Variables for linearalgebra.
                                                             (line  171)
* hankel <1>:                            Functions and Variables for linearalgebra.
                                                             (line  172)
* hankel_1:                              Bessel Functions.   (line   59)
* hankel_2:                              Bessel Functions.   (line  108)
* harmonic:                              Package functs.     (line  101)
* harmonic_mean:                         Functions and Variables for descriptive statistics.
                                                             (line  325)
* harmonic_mean <1>:                     Functions and Variables for descriptive statistics.
                                                             (line  326)
* hav:                                   Package functs.     (line  148)
* head_angle:                            Functions and Variables for draw.
                                                             (line  852)
* head_angle <1>:                        Functions and Variables for graphs.
                                                             (line 1472)
* head_both:                             Functions and Variables for draw.
                                                             (line  886)
* head_length:                           Functions and Variables for draw.
                                                             (line  906)
* head_length <1>:                       Functions and Variables for graphs.
                                                             (line 1477)
* head_type:                             Functions and Variables for draw.
                                                             (line  928)
* heawood_graph:                         Functions and Variables for graphs.
                                                             (line  155)
* Help:                                  Functions and Variables for Help.
                                                             (line   71)
* hermite:                               Functions and Variables for orthogonal polynomials.
                                                             (line   32)
* hessian:                               Functions and Variables for linearalgebra.
                                                             (line  178)
* hgfred:                                Functions and Variables for Special Functions.
                                                             (line   95)
* hilbertmap:                            Definitions for Peano maps.
                                                             (line    8)
* hilbert_matrix:                        Functions and Variables for linearalgebra.
                                                             (line  204)
* hipow:                                 Functions and Variables for Polynomials.
                                                             (line  578)
* histogram:                             Functions and Variables for statistical graphs.
                                                             (line  189)
* histogram <1>:                         Functions and Variables for statistical graphs.
                                                             (line  190)
* histogram <2>:                         Functions and Variables for statistical graphs.
                                                             (line  191)
* histogram <3>:                         Functions and Variables for statistical graphs.
                                                             (line  192)
* histogram <4>:                         Functions and Variables for statistical graphs.
                                                             (line  193)
* histogram <5>:                         Functions and Variables for statistical graphs.
                                                             (line  194)
* histogram_description:                 Functions and Variables for statistical graphs.
                                                             (line  195)
* hodge:                                 Functions and Variables for itensor.
                                                             (line 1381)
* horner:                                Functions and Variables for fast Fourier transform.
                                                             (line  260)
* horner <1>:                            Functions and Variables for fast Fourier transform.
                                                             (line  261)
* hypergeometric:                        Hypergeometric Functions.
                                                             (line   23)
* hypergeometric_representation:         Error Function.     (line   57)
* i:                                     Functions and Variables for Constants.
                                                             (line   11)
* ibase:                                 Functions and Variables for Display.
                                                             (line  263)
* ic1:                                   Functions and Variables for Differential Equations.
                                                             (line   64)
* ic2:                                   Functions and Variables for Differential Equations.
                                                             (line   72)
* icc1:                                  Functions and Variables for itensor.
                                                             (line 1048)
* icc2:                                  Functions and Variables for itensor.
                                                             (line 1063)
* ichr1:                                 Functions and Variables for itensor.
                                                             (line  840)
* ichr2:                                 Functions and Variables for itensor.
                                                             (line  847)
* icosahedron_graph:                     Functions and Variables for graphs.
                                                             (line  158)
* icosidodecahedron_graph:               Functions and Variables for graphs.
                                                             (line  161)
* icounter:                              Functions and Variables for itensor.
                                                             (line  334)
* icurvature:                            Functions and Variables for itensor.
                                                             (line  853)
* ic_convert:                            Functions and Variables for itensor.
                                                             (line 1472)
* ident:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line  641)
* identfor:                              Functions and Variables for linearalgebra.
                                                             (line  209)
* identfor <1>:                          Functions and Variables for linearalgebra.
                                                             (line  210)
* identity:                              Functions and Variables for Sets.
                                                             (line  386)
* idiff:                                 Functions and Variables for itensor.
                                                             (line  592)
* idim:                                  Functions and Variables for itensor.
                                                             (line  836)
* idummy:                                Functions and Variables for itensor.
                                                             (line  322)
* idummyx:                               Functions and Variables for itensor.
                                                             (line  329)
* ieqn:                                  Functions and Variables for Equations.
                                                             (line  388)
* ieqnprint:                             Functions and Variables for Equations.
                                                             (line  417)
* if:                                    Functions and Variables for Program Flow.
                                                             (line  364)
* ifactors:                              Functions and Variables for Number Theory.
                                                             (line  240)
* ifb:                                   Functions and Variables for itensor.
                                                             (line 1020)
* ifc1:                                  Functions and Variables for itensor.
                                                             (line 1079)
* ifc2:                                  Functions and Variables for itensor.
                                                             (line 1092)
* ifg:                                   Functions and Variables for itensor.
                                                             (line 1113)
* ifgi:                                  Functions and Variables for itensor.
                                                             (line 1118)
* ifr:                                   Functions and Variables for itensor.
                                                             (line 1103)
* iframes:                               Functions and Variables for itensor.
                                                             (line 1014)
* iframe_bracket_form:                   Functions and Variables for itensor.
                                                             (line 1122)
* ifri:                                  Functions and Variables for itensor.
                                                             (line 1108)
* ifs:                                   Functions and Variables for dynamics.
                                                             (line   36)
* igcdex:                                Functions and Variables for Number Theory.
                                                             (line  254)
* igeodesic_coords:                      Functions and Variables for itensor.
                                                             (line  911)
* igeowedge_flag:                        Functions and Variables for itensor.
                                                             (line 1419)
* ikt1:                                  Functions and Variables for itensor.
                                                             (line 1171)
* ikt2:                                  Functions and Variables for itensor.
                                                             (line 1185)
* ilt:                                   Functions and Variables for Integration.
                                                             (line  118)
* image:                                 Functions and Variables for draw.
                                                             (line 2504)
* Imaginary unit:                        Functions and Variables for Constants.
                                                             (line   11)
* imagpart:                              Functions for Complex Numbers.
                                                             (line   56)
* imetric:                               Functions and Variables for itensor.
                                                             (line  827)
* imetric <1>:                           Functions and Variables for itensor.
                                                             (line  828)
* implicit:                              Functions and Variables for draw.
                                                             (line 2591)
* implicit <1>:                          Functions and Variables for draw.
                                                             (line 2593)
* implicit_derivative:                   Functions and Variables for impdiff.
                                                             (line    6)
* implicit_plot:                         Functions and Variables for implicit_plot.
                                                             (line    6)
* implicit_plot <1>:                     Functions and Variables for implicit_plot.
                                                             (line    7)
* inchar:                                Functions and Variables for Command Line.
                                                             (line  190)
* ind:                                   Functions and Variables for Constants.
                                                             (line   23)
* Indeterminate:                         Functions and Variables for Constants.
                                                             (line   24)
* indexed_tensor:                        Functions and Variables for itensor.
                                                             (line  177)
* indices:                               Functions and Variables for itensor.
                                                             (line   52)
* induced_subgraph:                      Functions and Variables for graphs.
                                                             (line  164)
* inf:                                   Functions and Variables for Constants.
                                                             (line   34)
* inferencep:                            Functions and Variables for inference_result.
                                                             (line   47)
* inference_result:                      Functions and Variables for inference_result.
                                                             (line    6)
* infeval:                               Functions and Variables for Evaluation.
                                                             (line  535)
* infinity:                              Functions and Variables for Constants.
                                                             (line   38)
* infix:                                 User defined operators.
                                                             (line    6)
* infix <1>:                             User defined operators.
                                                             (line    7)
* infix <2>:                             User defined operators.
                                                             (line    8)
* inflag:                                Functions and Variables for Expressions.
                                                             (line  307)
* infolists:                             Functions and Variables for Command Line.
                                                             (line  214)
* init_atensor:                          Functions and Variables for atensor.
                                                             (line    6)
* init_atensor <1>:                      Functions and Variables for atensor.
                                                             (line    7)
* init_ctensor:                          Functions and Variables for ctensor.
                                                             (line  131)
* inm:                                   Functions and Variables for itensor.
                                                             (line 1135)
* inmc1:                                 Functions and Variables for itensor.
                                                             (line 1145)
* inmc2:                                 Functions and Variables for itensor.
                                                             (line 1157)
* innerproduct:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line  645)
* inpart:                                Functions and Variables for Expressions.
                                                             (line  325)
* inprod:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  646)
* inrt:                                  Functions and Variables for Number Theory.
                                                             (line  276)
* intanalysis:                           Functions and Variables for Integration.
                                                             (line  161)
* integerp:                              Functions and Variables for Numbers.
                                                             (line   84)
* integer_partitions:                    Functions and Variables for Sets.
                                                             (line  398)
* integer_partitions <1>:                Functions and Variables for Sets.
                                                             (line  399)
* integrate:                             Functions and Variables for Integration.
                                                             (line  198)
* integrate <1>:                         Functions and Variables for Integration.
                                                             (line  199)
* integrate_use_rootsof:                 Functions and Variables for Integration.
                                                             (line  414)
* integration_constant:                  Functions and Variables for Integration.
                                                             (line  355)
* integration_constant_counter:          Functions and Variables for Integration.
                                                             (line  379)
* intersect:                             Functions and Variables for Sets.
                                                             (line  439)
* intersection:                          Functions and Variables for Sets.
                                                             (line  443)
* intervalp:                             Functions and Variables for orthogonal polynomials.
                                                             (line   37)
* intfaclim:                             Functions and Variables for Polynomials.
                                                             (line  601)
* intopois:                              Poisson series.     (line    6)
* intosum:                               Sums and Products.  (line   33)
* invariant1:                            Functions and Variables for ctensor.
                                                             (line  736)
* invariant2:                            Functions and Variables for ctensor.
                                                             (line  741)
* inverse_fft:                           Functions and Variables for fast Fourier transform.
                                                             (line   40)
* inverse_jacobi_cd:                     Functions and Variables for Elliptic Functions.
                                                             (line   66)
* inverse_jacobi_cn:                     Functions and Variables for Elliptic Functions.
                                                             (line   45)
* inverse_jacobi_cs:                     Functions and Variables for Elliptic Functions.
                                                             (line   63)
* inverse_jacobi_dc:                     Functions and Variables for Elliptic Functions.
                                                             (line   75)
* inverse_jacobi_dn:                     Functions and Variables for Elliptic Functions.
                                                             (line   48)
* inverse_jacobi_ds:                     Functions and Variables for Elliptic Functions.
                                                             (line   72)
* inverse_jacobi_nc:                     Functions and Variables for Elliptic Functions.
                                                             (line   60)
* inverse_jacobi_nd:                     Functions and Variables for Elliptic Functions.
                                                             (line   69)
* inverse_jacobi_ns:                     Functions and Variables for Elliptic Functions.
                                                             (line   51)
* inverse_jacobi_sc:                     Functions and Variables for Elliptic Functions.
                                                             (line   54)
* inverse_jacobi_sd:                     Functions and Variables for Elliptic Functions.
                                                             (line   57)
* inverse_jacobi_sn:                     Functions and Variables for Elliptic Functions.
                                                             (line   42)
* invert:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  657)
* invert_by_lu:                          Functions and Variables for linearalgebra.
                                                             (line  222)
* inv_mod:                               Functions and Variables for Number Theory.
                                                             (line  284)
* in_neighbors:                          Functions and Variables for graphs.
                                                             (line  583)
* ip_grid:                               Functions and Variables for draw.
                                                             (line  952)
* ip_grid_in:                            Functions and Variables for draw.
                                                             (line  960)
* irr:                                   Functions and Variables for finance.
                                                             (line  213)
* is:                                    Functions and Variables for Facts.
                                                             (line  283)
* ishow:                                 Functions and Variables for itensor.
                                                             (line   45)
* isolate:                               Functions and Variables for Expressions.
                                                             (line  351)
* isolate_wrt_times:                     Functions and Variables for Expressions.
                                                             (line  367)
* isomorphism:                           Functions and Variables for graphs.
                                                             (line  571)
* isqrt:                                 Functions and Variables for Number Theory.
                                                             (line  296)
* isreal_p:                              Functions and Variables for to_poly_solve.
                                                             (line  460)
* is_biconnected:                        Functions and Variables for graphs.
                                                             (line  594)
* is_bipartite:                          Functions and Variables for graphs.
                                                             (line  605)
* is_connected:                          Functions and Variables for graphs.
                                                             (line  616)
* is_digraph:                            Functions and Variables for graphs.
                                                             (line  625)
* is_edge_in_graph:                      Functions and Variables for graphs.
                                                             (line  636)
* is_graph:                              Functions and Variables for graphs.
                                                             (line  652)
* is_graph_or_digraph:                   Functions and Variables for graphs.
                                                             (line  662)
* is_isomorphic:                         Functions and Variables for graphs.
                                                             (line  673)
* is_planar:                             Functions and Variables for graphs.
                                                             (line  686)
* is_sconnected:                         Functions and Variables for graphs.
                                                             (line  703)
* is_tree:                               Functions and Variables for graphs.
                                                             (line  726)
* is_vertex_in_graph:                    Functions and Variables for graphs.
                                                             (line  714)
* items_inference:                       Functions and Variables for inference_result.
                                                             (line   52)
* itr:                                   Functions and Variables for itensor.
                                                             (line 1197)
* jacobi:                                Functions and Variables for Number Theory.
                                                             (line  300)
* jacobian:                              Functions and Variables for linearalgebra.
                                                             (line  227)
* jacobi_cd:                             Functions and Variables for Elliptic Functions.
                                                             (line   30)
* jacobi_cn:                             Functions and Variables for Elliptic Functions.
                                                             (line    9)
* jacobi_cs:                             Functions and Variables for Elliptic Functions.
                                                             (line   27)
* jacobi_dc:                             Functions and Variables for Elliptic Functions.
                                                             (line   39)
* jacobi_dn:                             Functions and Variables for Elliptic Functions.
                                                             (line   12)
* jacobi_ds:                             Functions and Variables for Elliptic Functions.
                                                             (line   36)
* jacobi_nc:                             Functions and Variables for Elliptic Functions.
                                                             (line   24)
* jacobi_nd:                             Functions and Variables for Elliptic Functions.
                                                             (line   33)
* jacobi_ns:                             Functions and Variables for Elliptic Functions.
                                                             (line   15)
* jacobi_p:                              Functions and Variables for orthogonal polynomials.
                                                             (line   40)
* jacobi_sc:                             Functions and Variables for Elliptic Functions.
                                                             (line   18)
* jacobi_sd:                             Functions and Variables for Elliptic Functions.
                                                             (line   21)
* jacobi_sn:                             Functions and Variables for Elliptic Functions.
                                                             (line    6)
* JF:                                    Functions and Variables for diag.
                                                             (line   32)
* join:                                  Functions and Variables for Lists.
                                                             (line  194)
* jordan:                                Functions and Variables for diag.
                                                             (line   55)
* julia:                                 Functions and Variables for dynamics.
                                                             (line   50)
* julia_parameter:                       Definitions for complex fractals.
                                                             (line   38)
* julia_set:                             Definitions for complex fractals.
                                                             (line   21)
* julia_sin:                             Definitions for complex fractals.
                                                             (line   46)
* kdels:                                 Functions and Variables for itensor.
                                                             (line  354)
* kdelta:                                Functions and Variables for itensor.
                                                             (line  341)
* keepfloat:                             Functions and Variables for Polynomials.
                                                             (line  617)
* key:                                   Functions and Variables for draw.
                                                             (line  968)
* kill:                                  Functions and Variables for Command Line.
                                                             (line  257)
* kill <1>:                              Functions and Variables for Command Line.
                                                             (line  258)
* kill <2>:                              Functions and Variables for Command Line.
                                                             (line  259)
* kill <3>:                              Functions and Variables for Command Line.
                                                             (line  260)
* kill <4>:                              Functions and Variables for Command Line.
                                                             (line  261)
* kill <5>:                              Functions and Variables for Command Line.
                                                             (line  262)
* kill <6>:                              Functions and Variables for Command Line.
                                                             (line  263)
* kill <7>:                              Functions and Variables for Command Line.
                                                             (line  264)
* killcontext:                           Functions and Variables for Facts.
                                                             (line  335)
* kinvariant:                            Functions and Variables for ctensor.
                                                             (line 1133)
* kostka:                                Functions and Variables for Symmetries.
                                                             (line  421)
* kronecker_product:                     Functions and Variables for linearalgebra.
                                                             (line  249)
* kron_delta:                            Functions and Variables for Sets.
                                                             (line  468)
* kt:                                    Functions and Variables for ctensor.
                                                             (line 1160)
* kummer_m:                              Functions and Variables for contrib_ode.
                                                             (line  104)
* kummer_u:                              Functions and Variables for contrib_ode.
                                                             (line  115)
* kurtosis:                              Functions and Variables for descriptive statistics.
                                                             (line  375)
* kurtosis <1>:                          Functions and Variables for descriptive statistics.
                                                             (line  376)
* kurtosis_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  274)
* kurtosis_beta:                         Functions and Variables for continuous distributions.
                                                             (line  799)
* kurtosis_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  127)
* kurtosis_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  348)
* kurtosis_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line  851)
* kurtosis_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  382)
* kurtosis_exp:                          Functions and Variables for continuous distributions.
                                                             (line  613)
* kurtosis_f:                            Functions and Variables for continuous distributions.
                                                             (line  475)
* kurtosis_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  740)
* kurtosis_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   67)
* kurtosis_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  333)
* kurtosis_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1277)
* kurtosis_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  435)
* kurtosis_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1194)
* kurtosis_logistic:                     Functions and Variables for continuous distributions.
                                                             (line  897)
* kurtosis_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  688)
* kurtosis_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  497)
* kurtosis_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  413)
* kurtosis_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  212)
* kurtosis_normal:                       Functions and Variables for continuous distributions.
                                                             (line   55)
* kurtosis_pareto:                       Functions and Variables for continuous distributions.
                                                             (line  943)
* kurtosis_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  180)
* kurtosis_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1131)
* kurtosis_student_t:                    Functions and Variables for continuous distributions.
                                                             (line  118)
* kurtosis_weibull:                      Functions and Variables for continuous distributions.
                                                             (line  988)
* label:                                 Functions and Variables for draw.
                                                             (line 2640)
* label <1>:                             Functions and Variables for draw.
                                                             (line 2641)
* labels:                                Functions and Variables for Command Line.
                                                             (line  319)
* labels <1>:                            Functions and Variables for Command Line.
                                                             (line  320)
* label_alignment:                       Functions and Variables for draw.
                                                             (line  990)
* label_alignment <1>:                   Functions and Variables for graphs.
                                                             (line 1385)
* label_orientation:                     Functions and Variables for draw.
                                                             (line 1015)
* lagrange:                              Functions and Variables for interpol.
                                                             (line    6)
* lagrange <1>:                          Functions and Variables for interpol.
                                                             (line    7)
* laguerre:                              Functions and Variables for orthogonal polynomials.
                                                             (line   49)
* lambda:                                Functions and Variables for Function Definition.
                                                             (line  597)
* lambda <1>:                            Functions and Variables for Function Definition.
                                                             (line  598)
* lambda <2>:                            Functions and Variables for Function Definition.
                                                             (line  599)
* lambert_w:                             Functions and Variables for Special Functions.
                                                             (line  143)
* laplace:                               Functions and Variables for Differentiation.
                                                             (line  536)
* laplacian_matrix:                      Functions and Variables for graphs.
                                                             (line  736)
* lassociative:                          Functions and Variables for Simplification.
                                                             (line  283)
* last:                                  Functions and Variables for Lists.
                                                             (line  213)
* lbfgs:                                 Functions and Variables for lbfgs.
                                                             (line    6)
* lbfgs <1>:                             Functions and Variables for lbfgs.
                                                             (line    7)
* lbfgs_ncorrections:                    Functions and Variables for lbfgs.
                                                             (line  266)
* lbfgs_nfeval_max:                      Functions and Variables for lbfgs.
                                                             (line  259)
* lc2kdt:                                Functions and Variables for itensor.
                                                             (line  379)
* lcharp:                                Functions and Variables for characters.
                                                             (line   66)
* lcm:                                   Functions and Variables for Number Theory.
                                                             (line  308)
* lc_l:                                  Functions and Variables for itensor.
                                                             (line  447)
* lc_u:                                  Functions and Variables for itensor.
                                                             (line  471)
* ldefint:                               Functions and Variables for Integration.
                                                             (line  460)
* ldisp:                                 Functions and Variables for Display.
                                                             (line  317)
* ldisplay:                              Functions and Variables for Display.
                                                             (line  348)
* legend:                                Plotting Options.   (line   89)
* legend <1>:                            Plotting Options.   (line   90)
* legendre_p:                            Functions and Variables for orthogonal polynomials.
                                                             (line   55)
* legendre_q:                            Functions and Variables for orthogonal polynomials.
                                                             (line   61)
* leinstein:                             Functions and Variables for ctensor.
                                                             (line  209)
* length:                                Functions and Variables for Lists.
                                                             (line  216)
* let:                                   Functions and Variables for Rules and Patterns.
                                                             (line  210)
* let <1>:                               Functions and Variables for Rules and Patterns.
                                                             (line  211)
* letrat:                                Functions and Variables for Rules and Patterns.
                                                             (line  284)
* letrules:                              Functions and Variables for Rules and Patterns.
                                                             (line  306)
* letrules <1>:                          Functions and Variables for Rules and Patterns.
                                                             (line  307)
* letsimp:                               Functions and Variables for Rules and Patterns.
                                                             (line  320)
* letsimp <1>:                           Functions and Variables for Rules and Patterns.
                                                             (line  321)
* letsimp <2>:                           Functions and Variables for Rules and Patterns.
                                                             (line  322)
* let_rule_packages:                     Functions and Variables for Rules and Patterns.
                                                             (line  337)
* levi_civita:                           Functions and Variables for itensor.
                                                             (line  374)
* lfg:                                   Functions and Variables for ctensor.
                                                             (line 1084)
* lfreeof:                               Functions and Variables for Expressions.
                                                             (line  433)
* lg:                                    Functions and Variables for ctensor.
                                                             (line 1116)
* lgtreillis:                            Functions and Variables for Symmetries.
                                                             (line  428)
* lhospitallim:                          Functions and Variables for Limits.
                                                             (line    6)
* lhs:                                   Functions and Variables for Equations.
                                                             (line  435)
* li:                                    Root Exponential and Logarithmic Functions.
                                                             (line   56)
* liediff:                               Functions and Variables for itensor.
                                                             (line  604)
* limit:                                 Functions and Variables for Limits.
                                                             (line   13)
* limit <1>:                             Functions and Variables for Limits.
                                                             (line   14)
* limit <2>:                             Functions and Variables for Limits.
                                                             (line   15)
* limsubst:                              Functions and Variables for Limits.
                                                             (line   54)
* Lindstedt:                             Functions and Variables for lindstedt.
                                                             (line    6)
* linear:                                Functions and Variables for Simplification.
                                                             (line  289)
* linear <1>:                            Package functs.     (line   42)
* linearinterpol:                        Functions and Variables for interpol.
                                                             (line  105)
* linearinterpol <1>:                    Functions and Variables for interpol.
                                                             (line  106)
* linear_program:                        Functions and Variables for simplex.
                                                             (line   13)
* linear_solver:                         Functions and Variables for zeilberger.
                                                             (line  109)
* linechar:                              Functions and Variables for Command Line.
                                                             (line  352)
* linel:                                 Functions and Variables for Display.
                                                             (line  381)
* linenum:                               Functions and Variables for Command Line.
                                                             (line  368)
* line_graph:                            Functions and Variables for graphs.
                                                             (line  181)
* line_type:                             Functions and Variables for draw.
                                                             (line 1040)
* line_width:                            Functions and Variables for draw.
                                                             (line 1063)
* linsolve:                              Functions and Variables for Equations.
                                                             (line  476)
* linsolvewarn:                          Functions and Variables for Equations.
                                                             (line  542)
* linsolve_params:                       Functions and Variables for Equations.
                                                             (line  548)
* lispdisp:                              Functions and Variables for Display.
                                                             (line  390)
* List delimiters:                       Functions and Variables for Lists.
                                                             (line    8)
* listarith:                             Functions and Variables for Lists.
                                                             (line  227)
* listarray:                             Functions and Variables for Arrays.
                                                             (line  249)
* listconstvars:                         Functions and Variables for Expressions.
                                                             (line  392)
* listdummyvars:                         Functions and Variables for Expressions.
                                                             (line  400)
* listify:                               Functions and Variables for Sets.
                                                             (line  491)
* listoftens:                            Functions and Variables for itensor.
                                                             (line   30)
* listofvars:                            Functions and Variables for Expressions.
                                                             (line  417)
* listp:                                 Functions and Variables for Lists.
                                                             (line  233)
* listp <1>:                             Functions and Variables for linearalgebra.
                                                             (line  253)
* listp <2>:                             Functions and Variables for linearalgebra.
                                                             (line  254)
* list_correlations:                     Functions and Variables for descriptive statistics.
                                                             (line  606)
* list_correlations <1>:                 Functions and Variables for descriptive statistics.
                                                             (line  607)
* list_matrix_entries:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  685)
* list_nc_monomials:                     Functions and Variables for Affine.
                                                             (line  110)
* list_nc_monomials <1>:                 Functions and Variables for Affine.
                                                             (line  111)
* lmax:                                  Functions for Numbers.
                                                             (line  101)
* lmin:                                  Functions for Numbers.
                                                             (line  106)
* lmxchar:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  694)
* load:                                  Functions and Variables for File Input and Output.
                                                             (line  222)
* loadfile:                              Functions and Variables for File Input and Output.
                                                             (line  277)
* loadprint:                             Functions and Variables for File Input and Output.
                                                             (line  287)
* load_pathname:                         Functions and Variables for File Input and Output.
                                                             (line  251)
* local:                                 Functions and Variables for Function Definition.
                                                             (line  715)
* locate_matrix_entry:                   Functions and Variables for linearalgebra.
                                                             (line  262)
* log:                                   Root Exponential and Logarithmic Functions.
                                                             (line  113)
* logabs:                                Root Exponential and Logarithmic Functions.
                                                             (line  149)
* logarc:                                Root Exponential and Logarithmic Functions.
                                                             (line  157)
* logarc <1>:                            Root Exponential and Logarithmic Functions.
                                                             (line  158)
* logcb:                                 Functions and Variables for draw.
                                                             (line 1086)
* logconcoeffp:                          Root Exponential and Logarithmic Functions.
                                                             (line  167)
* logcontract:                           Root Exponential and Logarithmic Functions.
                                                             (line  176)
* logexpand:                             Root Exponential and Logarithmic Functions.
                                                             (line  195)
* Logical conjunction:                   Functions and Variables for to_poly_solve.
                                                             (line   15)
* Logical disjunction:                   Functions and Variables for to_poly_solve.
                                                             (line  120)
* lognegint:                             Root Exponential and Logarithmic Functions.
                                                             (line  205)
* lognumer:                              Root Exponential and Logarithmic Functions.
                                                             (line  211)
* logsimp:                               Root Exponential and Logarithmic Functions.
                                                             (line  218)
* logx:                                  Plotting Options.   (line   99)
* logx <1>:                              Functions and Variables for draw.
                                                             (line 1111)
* logy:                                  Plotting Options.   (line  104)
* logy <1>:                              Functions and Variables for draw.
                                                             (line 1127)
* logz:                                  Functions and Variables for draw.
                                                             (line 1143)
* log_gamma:                             Gamma and factorial Functions.
                                                             (line  114)
* lopow:                                 Functions and Variables for Polynomials.
                                                             (line  646)
* lorentz_gauge:                         Functions and Variables for itensor.
                                                             (line  907)
* lowercasep:                            Functions and Variables for characters.
                                                             (line   70)
* lpart:                                 Functions and Variables for Expressions.
                                                             (line  439)
* lratsubst:                             Functions and Variables for Polynomials.
                                                             (line  653)
* lreduce:                               Functions and Variables for Sets.
                                                             (line  505)
* lreduce <1>:                           Functions and Variables for Sets.
                                                             (line  506)
* lriem:                                 Functions and Variables for ctensor.
                                                             (line 1100)
* lriemann:                              Functions and Variables for ctensor.
                                                             (line  235)
* lsquares_estimates:                    Functions and Variables for lsquares.
                                                             (line    6)
* lsquares_estimates <1>:                Functions and Variables for lsquares.
                                                             (line    7)
* lsquares_estimates_approximate:        Functions and Variables for lsquares.
                                                             (line  145)
* lsquares_estimates_exact:              Functions and Variables for lsquares.
                                                             (line   96)
* lsquares_mse:                          Functions and Variables for lsquares.
                                                             (line  206)
* lsquares_residuals:                    Functions and Variables for lsquares.
                                                             (line  275)
* lsquares_residual_mse:                 Functions and Variables for lsquares.
                                                             (line  324)
* lsum:                                  Sums and Products.  (line   14)
* ltreillis:                             Functions and Variables for Symmetries.
                                                             (line  435)
* lu_backsub:                            Functions and Variables for linearalgebra.
                                                             (line  287)
* lu_factor:                             Functions and Variables for linearalgebra.
                                                             (line  292)
* m1pbranch:                             Functions and Variables for Numbers.
                                                             (line  112)
* macroexpand:                           Macros.             (line   93)
* macroexpand1:                          Macros.             (line  125)
* macroexpansion:                        Functions and Variables for Function Definition.
                                                             (line  745)
* macros:                                Macros.             (line  155)
* mainvar:                               Functions and Variables for Expressions.
                                                             (line  445)
* makebox:                               Functions and Variables for itensor.
                                                             (line  723)
* makefact:                              Gamma and factorial Functions.
                                                             (line  691)
* makegamma:                             Gamma and factorial Functions.
                                                             (line  160)
* makelist:                              Functions and Variables for Lists.
                                                             (line  237)
* makelist <1>:                          Functions and Variables for Lists.
                                                             (line  238)
* makeOrders:                            Functions and Variables for makeOrders.
                                                             (line    6)
* makeset:                               Functions and Variables for Sets.
                                                             (line  546)
* make_array:                            Functions and Variables for Arrays.
                                                             (line  337)
* make_graph:                            Functions and Variables for graphs.
                                                             (line  184)
* make_graph <1>:                        Functions and Variables for graphs.
                                                             (line  185)
* make_level_picture:                    Functions and Variables for pictures.
                                                             (line   10)
* make_level_picture <1>:                Functions and Variables for pictures.
                                                             (line   11)
* make_polygon:                          Functions and Variables for worldmap.
                                                             (line   60)
* make_poly_continent:                   Functions and Variables for worldmap.
                                                             (line   35)
* make_poly_continent <1>:               Functions and Variables for worldmap.
                                                             (line   36)
* make_poly_country:                     Functions and Variables for worldmap.
                                                             (line   50)
* make_random_state:                     Random Numbers.     (line    6)
* make_random_state <1>:                 Random Numbers.     (line    7)
* make_random_state <2>:                 Random Numbers.     (line    8)
* make_random_state <3>:                 Random Numbers.     (line    9)
* make_rgb_picture:                      Functions and Variables for pictures.
                                                             (line   39)
* make_transform:                        Functions and Variables for Plotting.
                                                             (line   43)
* mandelbrot:                            Functions and Variables for dynamics.
                                                             (line   72)
* mandelbrot_set:                        Definitions for complex fractals.
                                                             (line    6)
* manual_demo:                           Functions and Variables for Help.
                                                             (line  168)
* map:                                   Functions and Variables for Program Flow.
                                                             (line  413)
* mapatom:                               Functions and Variables for Program Flow.
                                                             (line  448)
* maperror:                              Functions and Variables for Program Flow.
                                                             (line  453)
* maplist:                               Functions and Variables for Program Flow.
                                                             (line  478)
* mapprint:                              Functions and Variables for Program Flow.
                                                             (line  469)
* matchdeclare:                          Functions and Variables for Rules and Patterns.
                                                             (line  344)
* matchfix:                              User defined operators.
                                                             (line   93)
* matchfix <1>:                          User defined operators.
                                                             (line   94)
* matrix:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  710)
* matrixmap:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  829)
* matrixp:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line  835)
* matrixp <1>:                           Functions and Variables for linearalgebra.
                                                             (line  405)
* matrixp <2>:                           Functions and Variables for linearalgebra.
                                                             (line  406)
* matrix_element_add:                    Functions and Variables for Matrices and Linear Algebra.
                                                             (line  840)
* matrix_element_mult:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line  871)
* matrix_element_transpose:              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  912)
* matrix_size:                           Functions and Variables for linearalgebra.
                                                             (line  415)
* mattrace:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line  959)
* mat_cond:                              Functions and Variables for linearalgebra.
                                                             (line  388)
* mat_cond <1>:                          Functions and Variables for linearalgebra.
                                                             (line  389)
* mat_fullunblocker:                     Functions and Variables for linearalgebra.
                                                             (line  419)
* mat_function:                          Functions and Variables for diag.
                                                             (line  180)
* mat_norm:                              Functions and Variables for linearalgebra.
                                                             (line  397)
* mat_norm <1>:                          Functions and Variables for linearalgebra.
                                                             (line  398)
* mat_norm <2>:                          Functions and Variables for linearalgebra.
                                                             (line  399)
* mat_trace:                             Functions and Variables for linearalgebra.
                                                             (line  425)
* mat_unblocker:                         Functions and Variables for linearalgebra.
                                                             (line  431)
* max:                                   Functions for Numbers.
                                                             (line  111)
* maxapplydepth:                         Functions and Variables for Rules and Patterns.
                                                             (line  490)
* maxapplyheight:                        Functions and Variables for Rules and Patterns.
                                                             (line  495)
* maxima_tempdir:                        Functions and Variables for Runtime Environment.
                                                             (line   33)
* maxima_userdir:                        Functions and Variables for Runtime Environment.
                                                             (line   46)
* maximize_lp:                           Functions and Variables for simplex.
                                                             (line   40)
* maxnegex:                              Functions and Variables for Simplification.
                                                             (line  301)
* maxposex:                              Functions and Variables for Simplification.
                                                             (line  307)
* maxpsifracdenom:                       Gamma and factorial Functions.
                                                             (line  684)
* maxpsifracnum:                         Gamma and factorial Functions.
                                                             (line  677)
* maxpsinegint:                          Gamma and factorial Functions.
                                                             (line  670)
* maxpsiposint:                          Gamma and factorial Functions.
                                                             (line  664)
* maxtayorder:                           Functions and Variables for Series.
                                                             (line   68)
* max_clique:                            Functions and Variables for graphs.
                                                             (line  752)
* max_degree:                            Functions and Variables for graphs.
                                                             (line  761)
* max_flow:                              Functions and Variables for graphs.
                                                             (line  772)
* max_independent_set:                   Functions and Variables for graphs.
                                                             (line  802)
* max_matching:                          Functions and Variables for graphs.
                                                             (line  812)
* MAX_ORD:                               Functions and Variables for zeilberger.
                                                             (line   98)
* maybe:                                 Functions and Variables for Facts.
                                                             (line  352)
* mean:                                  Functions and Variables for descriptive statistics.
                                                             (line    6)
* mean <1>:                              Functions and Variables for descriptive statistics.
                                                             (line    7)
* mean_bernoulli:                        Functions and Variables for discrete distributions.
                                                             (line  220)
* mean_beta:                             Functions and Variables for continuous distributions.
                                                             (line  783)
* mean_binomial:                         Functions and Variables for discrete distributions.
                                                             (line  109)
* mean_chi2:                             Functions and Variables for continuous distributions.
                                                             (line  286)
* mean_continuous_uniform:               Functions and Variables for continuous distributions.
                                                             (line  831)
* mean_deviation:                        Functions and Variables for descriptive statistics.
                                                             (line  273)
* mean_deviation <1>:                    Functions and Variables for descriptive statistics.
                                                             (line  274)
* mean_discrete_uniform:                 Functions and Variables for discrete distributions.
                                                             (line  361)
* mean_exp:                              Functions and Variables for continuous distributions.
                                                             (line  546)
* mean_f:                                Functions and Variables for continuous distributions.
                                                             (line  459)
* mean_gamma:                            Functions and Variables for continuous distributions.
                                                             (line  724)
* mean_general_finite_discrete:          Functions and Variables for discrete distributions.
                                                             (line   47)
* mean_geometric:                        Functions and Variables for discrete distributions.
                                                             (line  317)
* mean_gumbel:                           Functions and Variables for continuous distributions.
                                                             (line 1247)
* mean_hypergeometric:                   Functions and Variables for discrete distributions.
                                                             (line  415)
* mean_laplace:                          Functions and Variables for continuous distributions.
                                                             (line 1178)
* mean_logistic:                         Functions and Variables for continuous distributions.
                                                             (line  881)
* mean_lognormal:                        Functions and Variables for continuous distributions.
                                                             (line  672)
* mean_negative_binomial:                Functions and Variables for discrete distributions.
                                                             (line  476)
* mean_noncentral_chi2:                  Functions and Variables for continuous distributions.
                                                             (line  397)
* mean_noncentral_student_t:             Functions and Variables for continuous distributions.
                                                             (line  182)
* mean_normal:                           Functions and Variables for continuous distributions.
                                                             (line   38)
* mean_pareto:                           Functions and Variables for continuous distributions.
                                                             (line  927)
* mean_poisson:                          Functions and Variables for discrete distributions.
                                                             (line  164)
* mean_rayleigh:                         Functions and Variables for continuous distributions.
                                                             (line 1053)
* mean_student_t:                        Functions and Variables for continuous distributions.
                                                             (line   95)
* mean_weibull:                          Functions and Variables for continuous distributions.
                                                             (line  972)
* median:                                Functions and Variables for descriptive statistics.
                                                             (line  234)
* median <1>:                            Functions and Variables for descriptive statistics.
                                                             (line  235)
* median_deviation:                      Functions and Variables for descriptive statistics.
                                                             (line  299)
* median_deviation <1>:                  Functions and Variables for descriptive statistics.
                                                             (line  300)
* member:                                Functions and Variables for Lists.
                                                             (line  257)
* mesh:                                  Functions and Variables for draw.
                                                             (line 2680)
* mesh_lines_color:                      Plotting Options.   (line  109)
* method:                                Functions and Variables for contrib_ode.
                                                             (line   67)
* metricexpandall:                       Functions and Variables for Units.
                                                             (line  383)
* min:                                   Functions for Numbers.
                                                             (line  120)
* minf:                                  Functions and Variables for Constants.
                                                             (line   42)
* minfactorial:                          Combinatorial Functions.
                                                             (line  151)
* minimalPoly:                           Functions and Variables for diag.
                                                             (line  123)
* minimize_lp:                           Functions and Variables for simplex.
                                                             (line   48)
* minimum_spanning_tree:                 Functions and Variables for graphs.
                                                             (line  848)
* minor:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line  968)
* minpack_lsquares:                      Functions and Variables for minpack.
                                                             (line    6)
* minpack_solve:                         Functions and Variables for minpack.
                                                             (line   62)
* Minus infinity:                        Functions and Variables for Constants.
                                                             (line   43)
* min_degree:                            Functions and Variables for graphs.
                                                             (line  823)
* min_edge_cut:                          Functions and Variables for graphs.
                                                             (line  834)
* min_vertex_cover:                      Functions and Variables for graphs.
                                                             (line  839)
* min_vertex_cut:                        Functions and Variables for graphs.
                                                             (line  842)
* mnewton:                               Functions and Variables for mnewton.
                                                             (line   21)
* mod:                                   Functions and Variables for Number Theory.
                                                             (line  315)
* ModeMatrix:                            Functions and Variables for diag.
                                                             (line  144)
* mode_checkp:                           Functions and Variables for Function Definition.
                                                             (line  875)
* mode_check_errorp:                     Functions and Variables for Function Definition.
                                                             (line  881)
* mode_check_warnp:                      Functions and Variables for Function Definition.
                                                             (line  887)
* mode_declare:                          Functions and Variables for Function Definition.
                                                             (line  892)
* mode_identity:                         Functions and Variables for Function Definition.
                                                             (line  934)
* modular_linear_solver:                 Functions and Variables for zeilberger.
                                                             (line  143)
* modulus:                               Functions and Variables for Polynomials.
                                                             (line  678)
* mod_big_prime:                         Functions and Variables for zeilberger.
                                                             (line  155)
* mod_test:                              Functions and Variables for zeilberger.
                                                             (line  137)
* mod_threshold:                         Functions and Variables for zeilberger.
                                                             (line  160)
* moebius:                               Functions and Variables for Sets.
                                                             (line  580)
* mon2schur:                             Functions and Variables for Symmetries.
                                                             (line   57)
* mono:                                  Functions and Variables for Affine.
                                                             (line   90)
* monomial_dimensions:                   Functions and Variables for Affine.
                                                             (line   96)
* multibernstein_poly:                   Functions and Variables for Bernstein.
                                                             (line   63)
* multinomial:                           Functions and Variables for Symmetries.
                                                             (line  800)
* multinomial_coeff:                     Functions and Variables for Sets.
                                                             (line  613)
* multinomial_coeff <1>:                 Functions and Variables for Sets.
                                                             (line  614)
* multiplicative:                        Functions and Variables for Simplification.
                                                             (line  313)
* multiplicities:                        Functions and Variables for Equations.
                                                             (line  556)
* multiplot_mode:                        Functions and Variables for draw.
                                                             (line  135)
* multi_elem:                            Functions and Variables for Symmetries.
                                                             (line   82)
* multi_orbit:                           Functions and Variables for Symmetries.
                                                             (line  332)
* multi_pui:                             Functions and Variables for Symmetries.
                                                             (line   97)
* multsym:                               Functions and Variables for Symmetries.
                                                             (line  344)
* multthru:                              Functions and Variables for Simplification.
                                                             (line  329)
* multthru <1>:                          Functions and Variables for Simplification.
                                                             (line  330)
* mycielski_graph:                       Functions and Variables for graphs.
                                                             (line  213)
* myoptions:                             Functions and Variables for Command Line.
                                                             (line  372)
* N'th previous output:                  Functions and Variables for Command Line.
                                                             (line  145)
* nary:                                  Functions and Variables for Simplification.
                                                             (line  372)
* nary <1>:                              User defined operators.
                                                             (line  190)
* nary <2>:                              User defined operators.
                                                             (line  191)
* natural_unit:                          Functions and Variables for ezunits.
                                                             (line  682)
* ncexpt:                                Functions and Variables for Display.
                                                             (line  135)
* ncharpoly:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  973)
* nc_degree:                             Functions and Variables for Affine.
                                                             (line   56)
* Negative infinity:                     Functions and Variables for Constants.
                                                             (line   43)
* negative_picture:                      Functions and Variables for pictures.
                                                             (line   65)
* negdistrib:                            Functions and Variables for Simplification.
                                                             (line  391)
* negsumdispflag:                        Functions and Variables for Display.
                                                             (line  406)
* neighbors:                             Functions and Variables for graphs.
                                                             (line  857)
* new:                                   Functions and Variables for Structures.
                                                             (line   49)
* new <1>:                               Functions and Variables for Structures.
                                                             (line   50)
* newcontext:                            Functions and Variables for Facts.
                                                             (line  375)
* newdet:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line  987)
* newline:                               Functions and Variables for characters.
                                                             (line   73)
* newline <1>:                           Functions and Variables for input and output.
                                                             (line   43)
* newline <2>:                           Functions and Variables for input and output.
                                                             (line   44)
* newton:                                Functions and Variables for fast Fourier transform.
                                                             (line  366)
* newtonepsilon:                         Functions and Variables for mnewton.
                                                             (line    6)
* newtonmaxiter:                         Functions and Variables for mnewton.
                                                             (line   13)
* new_graph:                             Functions and Variables for graphs.
                                                             (line  216)
* new_variable:                          Functions and Variables for to_poly_solve.
                                                             (line  496)
* nextlayerfactor:                       Package facexp.     (line   53)
* next_prime:                            Functions and Variables for Number Theory.
                                                             (line  342)
* nicedummies:                           Functions and Variables for to_poly_solve.
                                                             (line  539)
* niceindices:                           Functions and Variables for Series.
                                                             (line   75)
* niceindicespref:                       Functions and Variables for Series.
                                                             (line  108)
* ninth:                                 Functions and Variables for Lists.
                                                             (line  293)
* nm:                                    Functions and Variables for ctensor.
                                                             (line 1164)
* nmc:                                   Functions and Variables for ctensor.
                                                             (line 1168)
* noeval:                                Functions and Variables for Evaluation.
                                                             (line  542)
* nofix:                                 User defined operators.
                                                             (line  202)
* nofix <1>:                             User defined operators.
                                                             (line  203)
* nolabels:                              Functions and Variables for Command Line.
                                                             (line  378)
* nonarray:                              Functions and Variables for Properties.
                                                             (line  362)
* noncentral_moment:                     Functions and Variables for descriptive statistics.
                                                             (line  109)
* noncentral_moment <1>:                 Functions and Variables for descriptive statistics.
                                                             (line  110)
* nonegative_lp:                         Functions and Variables for simplex.
                                                             (line   88)
* nonmetricity:                          Functions and Variables for ctensor.
                                                             (line  607)
* nonnegintegerp:                        Functions and Variables for Numbers.
                                                             (line  128)
* nonscalar:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line  992)
* nonscalarp:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line  997)
* nonzeroandfreeof:                      Package functs.     (line   36)
* not:                                   Logical operators.  (line   27)
* notequal:                              Functions and Variables for Predicates.
                                                             (line  185)
* noun:                                  Functions and Variables for Expressions.
                                                             (line  457)
* noundisp:                              Functions and Variables for Expressions.
                                                             (line  463)
* nounify:                               Functions and Variables for Expressions.
                                                             (line  469)
* nouns:                                 Functions and Variables for Evaluation.
                                                             (line  547)
* np:                                    Functions and Variables for ctensor.
                                                             (line 1137)
* npi:                                   Functions and Variables for ctensor.
                                                             (line 1141)
* nptetrad:                              Functions and Variables for ctensor.
                                                             (line  435)
* npv:                                   Functions and Variables for finance.
                                                             (line  201)
* nroots:                                Functions and Variables for Equations.
                                                             (line  562)
* nterms:                                Functions and Variables for Expressions.
                                                             (line  479)
* ntermst:                               Functions and Variables for ctensor.
                                                             (line  767)
* nthroot:                               Functions and Variables for Equations.
                                                             (line  574)
* nticks:                                Plotting Options.   (line  118)
* nticks <1>:                            Functions and Variables for draw.
                                                             (line 1159)
* ntrig:                                 Functions and Variables for Trigonometric.
                                                             (line  193)
* nullity:                               Functions and Variables for linearalgebra.
                                                             (line  472)
* nullspace:                             Functions and Variables for linearalgebra.
                                                             (line  465)
* num:                                   Functions and Variables for Polynomials.
                                                             (line  699)
* numbered_boundaries:                   Functions and Variables for worldmap.
                                                             (line   22)
* numberp:                               Functions and Variables for Numbers.
                                                             (line  132)
* numer:                                 Functions and Variables for Numbers.
                                                             (line  160)
* numerval:                              Functions and Variables for Numbers.
                                                             (line  204)
* numer_pbranch:                         Functions and Variables for Numbers.
                                                             (line  178)
* numfactor:                             Gamma and factorial Functions.
                                                             (line  697)
* num_distinct_partitions:               Functions and Variables for Sets.
                                                             (line  647)
* num_distinct_partitions <1>:           Functions and Variables for Sets.
                                                             (line  648)
* num_partitions:                        Functions and Variables for Sets.
                                                             (line  668)
* num_partitions <1>:                    Functions and Variables for Sets.
                                                             (line  669)
* nusum:                                 Functions and Variables for Series.
                                                             (line  137)
* nzeta:                                 Functions and Variables for Special Functions.
                                                             (line  146)
* nzetai:                                Functions and Variables for Special Functions.
                                                             (line  152)
* nzetar:                                Functions and Variables for Special Functions.
                                                             (line  149)
* obase:                                 Functions and Variables for Display.
                                                             (line  414)
* oddfun:                                Functions and Variables for Simplification.
                                                             (line  127)
* oddp:                                  Functions and Variables for Numbers.
                                                             (line  213)
* odd_girth:                             Functions and Variables for graphs.
                                                             (line  866)
* ode2:                                  Functions and Variables for Differential Equations.
                                                             (line   82)
* odelin:                                Functions and Variables for contrib_ode.
                                                             (line   10)
* ode_check:                             Functions and Variables for contrib_ode.
                                                             (line   38)
* op:                                    Functions and Variables for Expressions.
                                                             (line  486)
* opena:                                 Functions and Variables for input and output.
                                                             (line   49)
* opena_binary:                          Functions and Variables for binary input and output.
                                                             (line   24)
* openr:                                 Functions and Variables for input and output.
                                                             (line   53)
* openr_binary:                          Functions and Variables for binary input and output.
                                                             (line   16)
* openw:                                 Functions and Variables for input and output.
                                                             (line   57)
* openw_binary:                          Functions and Variables for binary input and output.
                                                             (line   20)
* operatorp:                             Functions and Variables for Expressions.
                                                             (line  533)
* operatorp <1>:                         Functions and Variables for Expressions.
                                                             (line  534)
* opproperties:                          Functions and Variables for Simplification.
                                                             (line  401)
* opsubst:                               Functions and Variables for Expressions.
                                                             (line  542)
* opsubst <1>:                           Functions and Variables for opsubst.
                                                             (line    6)
* opsubst <2>:                           Functions and Variables for opsubst.
                                                             (line    7)
* opsubst <3>:                           Functions and Variables for opsubst.
                                                             (line    8)
* optimize:                              Functions and Variables for Expressions.
                                                             (line  549)
* optimprefix:                           Functions and Variables for Expressions.
                                                             (line  556)
* optionset:                             Functions and Variables for Command Line.
                                                             (line  395)
* or:                                    Logical operators.  (line   40)
* orbit:                                 Functions and Variables for Symmetries.
                                                             (line  362)
* orbits:                                Functions and Variables for dynamics.
                                                             (line   93)
* ordergreat:                            Functions and Variables for Expressions.
                                                             (line  562)
* ordergreatp:                           Functions and Variables for Expressions.
                                                             (line  580)
* orderless:                             Functions and Variables for Expressions.
                                                             (line  563)
* orderlessp:                            Functions and Variables for Expressions.
                                                             (line  581)
* orthogonal_complement:                 Functions and Variables for linearalgebra.
                                                             (line  476)
* orthopoly_recur:                       Functions and Variables for orthogonal polynomials.
                                                             (line   66)
* orthopoly_returns_intervals:           Functions and Variables for orthogonal polynomials.
                                                             (line   93)
* orthopoly_weight:                      Functions and Variables for orthogonal polynomials.
                                                             (line  101)
* outative:                              Functions and Variables for Simplification.
                                                             (line  408)
* outchar:                               Functions and Variables for Command Line.
                                                             (line  412)
* outermap:                              Functions and Variables for Program Flow.
                                                             (line  550)
* outofpois:                             Poisson series.     (line    9)
* out_neighbors:                         Functions and Variables for graphs.
                                                             (line  877)
* packagefile:                           Functions and Variables for File Input and Output.
                                                             (line  301)
* pade:                                  Functions and Variables for Series.
                                                             (line  185)
* palette:                               Plotting Options.   (line  127)
* palette <1>:                           Plotting Options.   (line  129)
* palette <2>:                           Functions and Variables for draw.
                                                             (line 1179)
* parabolic_cylinder_d:                  Parabolic Cylinder Functions.
                                                             (line   12)
* parametric:                            Functions and Variables for draw.
                                                             (line 2704)
* parametric <1>:                        Functions and Variables for draw.
                                                             (line 2706)
* parametric_surface:                    Functions and Variables for draw.
                                                             (line 2746)
* parg:                                  Functions and Variables for to_poly_solve.
                                                             (line  558)
* parGosper:                             Functions and Variables for zeilberger.
                                                             (line   61)
* parse_string:                          Functions and Variables for strings.
                                                             (line   43)
* part:                                  Functions and Variables for Expressions.
                                                             (line  661)
* part2cont:                             Functions and Variables for Symmetries.
                                                             (line  229)
* partfrac:                              Functions and Variables for Number Theory.
                                                             (line  349)
* partition:                             Functions and Variables for Expressions.
                                                             (line  696)
* partition_set:                         Functions and Variables for Sets.
                                                             (line  691)
* partpol:                               Functions and Variables for Symmetries.
                                                             (line  237)
* partswitch:                            Functions and Variables for Expressions.
                                                             (line  711)
* pathname_directory:                    Functions and Variables for File Input and Output.
                                                             (line  315)
* pathname_name:                         Functions and Variables for File Input and Output.
                                                             (line  316)
* pathname_type:                         Functions and Variables for File Input and Output.
                                                             (line  317)
* path_digraph:                          Functions and Variables for graphs.
                                                             (line  219)
* path_graph:                            Functions and Variables for graphs.
                                                             (line  222)
* pdf_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  197)
* pdf_beta:                              Functions and Variables for continuous distributions.
                                                             (line  762)
* pdf_binomial:                          Functions and Variables for discrete distributions.
                                                             (line   86)
* pdf_cauchy:                            Functions and Variables for continuous distributions.
                                                             (line 1208)
* pdf_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  237)
* pdf_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  815)
* pdf_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  345)
* pdf_exp:                               Functions and Variables for continuous distributions.
                                                             (line  495)
* pdf_f:                                 Functions and Variables for continuous distributions.
                                                             (line  426)
* pdf_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  703)
* pdf_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line    6)
* pdf_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  300)
* pdf_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1233)
* pdf_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  398)
* pdf_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1163)
* pdf_logistic:                          Functions and Variables for continuous distributions.
                                                             (line  867)
* pdf_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  638)
* pdf_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  453)
* pdf_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  376)
* pdf_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  141)
* pdf_normal:                            Functions and Variables for continuous distributions.
                                                             (line    6)
* pdf_pareto:                            Functions and Variables for continuous distributions.
                                                             (line  911)
* pdf_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  144)
* pdf_rank_sum:                          Functions and Variables for special distributions.
                                                             (line   18)
* pdf_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1000)
* pdf_signed_rank:                       Functions and Variables for special distributions.
                                                             (line    6)
* pdf_student_t:                         Functions and Variables for continuous distributions.
                                                             (line   72)
* pdf_weibull:                           Functions and Variables for continuous distributions.
                                                             (line  957)
* pearson_skewness:                      Functions and Variables for descriptive statistics.
                                                             (line  423)
* pearson_skewness <1>:                  Functions and Variables for descriptive statistics.
                                                             (line  424)
* permanent:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1002)
* permut:                                Functions and Variables for Symmetries.
                                                             (line  805)
* permutation:                           Package functs.     (line  158)
* permutations:                          Functions and Variables for Sets.
                                                             (line  711)
* petersen_graph:                        Functions and Variables for graphs.
                                                             (line  225)
* petersen_graph <1>:                    Functions and Variables for graphs.
                                                             (line  226)
* petrov:                                Functions and Variables for ctensor.
                                                             (line  476)
* pfeformat:                             Functions and Variables for Display.
                                                             (line  446)
* phi:                                   Functions and Variables for Constants.
                                                             (line   47)
* pi:                                    Functions and Variables for Constants.
                                                             (line   99)
* pickapart:                             Functions and Variables for Expressions.
                                                             (line  718)
* picturep:                              Functions and Variables for pictures.
                                                             (line   71)
* picture_equalp:                        Functions and Variables for pictures.
                                                             (line   68)
* piece:                                 Functions and Variables for Expressions.
                                                             (line  801)
* piechart:                              Functions and Variables for statistical graphs.
                                                             (line  269)
* piechart <1>:                          Functions and Variables for statistical graphs.
                                                             (line  270)
* piechart <2>:                          Functions and Variables for statistical graphs.
                                                             (line  271)
* piechart <3>:                          Functions and Variables for statistical graphs.
                                                             (line  272)
* piechart <4>:                          Functions and Variables for statistical graphs.
                                                             (line  273)
* piechart <5>:                          Functions and Variables for statistical graphs.
                                                             (line  274)
* piechart_description:                  Functions and Variables for statistical graphs.
                                                             (line  275)
* planar_embedding:                      Functions and Variables for graphs.
                                                             (line  888)
* playback:                              Functions and Variables for Command Line.
                                                             (line  434)
* playback <1>:                          Functions and Variables for Command Line.
                                                             (line  435)
* playback <2>:                          Functions and Variables for Command Line.
                                                             (line  436)
* playback <3>:                          Functions and Variables for Command Line.
                                                             (line  437)
* playback <4>:                          Functions and Variables for Command Line.
                                                             (line  438)
* playback <5>:                          Functions and Variables for Command Line.
                                                             (line  439)
* playback <6>:                          Functions and Variables for Command Line.
                                                             (line  440)
* playback <7>:                          Functions and Variables for Command Line.
                                                             (line  441)
* plog:                                  Root Exponential and Logarithmic Functions.
                                                             (line  223)
* plot2d:                                Functions and Variables for Plotting.
                                                             (line   60)
* plot2d <1>:                            Functions and Variables for Plotting.
                                                             (line   61)
* plot2d <2>:                            Functions and Variables for Plotting.
                                                             (line   62)
* plot3d:                                Functions and Variables for Plotting.
                                                             (line  204)
* plot3d <1>:                            Functions and Variables for Plotting.
                                                             (line  205)
* plotdf:                                Functions and Variables for plotdf.
                                                             (line    6)
* plotdf <1>:                            Functions and Variables for plotdf.
                                                             (line    7)
* plotdf <2>:                            Functions and Variables for plotdf.
                                                             (line    8)
* plotdf <3>:                            Functions and Variables for plotdf.
                                                             (line    9)
* plot_format:                           Plotting Options.   (line  151)
* plot_options:                          Functions and Variables for Plotting.
                                                             (line  303)
* plot_real_part:                        Plotting Options.   (line  161)
* plsquares:                             Functions and Variables for lsquares.
                                                             (line  375)
* plsquares <1>:                         Functions and Variables for lsquares.
                                                             (line  376)
* plsquares <2>:                         Functions and Variables for lsquares.
                                                             (line  377)
* pochhammer:                            Functions and Variables for orthogonal polynomials.
                                                             (line  117)
* pochhammer_max_index:                  Functions and Variables for orthogonal polynomials.
                                                             (line  147)
* points:                                Functions and Variables for draw.
                                                             (line 2776)
* points <1>:                            Functions and Variables for draw.
                                                             (line 2777)
* points <2>:                            Functions and Variables for draw.
                                                             (line 2778)
* points <3>:                            Functions and Variables for draw.
                                                             (line 2779)
* points <4>:                            Functions and Variables for draw.
                                                             (line 2781)
* points <5>:                            Functions and Variables for draw.
                                                             (line 2783)
* points <6>:                            Functions and Variables for draw.
                                                             (line 2784)
* points <7>:                            Functions and Variables for draw.
                                                             (line 2785)
* points <8>:                            Functions and Variables for draw.
                                                             (line 2786)
* points <9>:                            Functions and Variables for draw.
                                                             (line 2788)
* points <10>:                           Functions and Variables for draw.
                                                             (line 2789)
* points_joined:                         Functions and Variables for draw.
                                                             (line 1316)
* point_size:                            Functions and Variables for draw.
                                                             (line 1254)
* point_type:                            Plotting Options.   (line  173)
* point_type <1>:                        Functions and Variables for draw.
                                                             (line 1275)
* poisdiff:                              Poisson series.     (line   16)
* poisexpt:                              Poisson series.     (line   21)
* poisint:                               Poisson series.     (line   26)
* poislim:                               Poisson series.     (line   31)
* poismap:                               Poisson series.     (line   38)
* poisplus:                              Poisson series.     (line   44)
* poissimp:                              Poisson series.     (line   48)
* poisson:                               Poisson series.     (line   52)
* poissubst:                             Poisson series.     (line   56)
* poistimes:                             Poisson series.     (line   75)
* poistrim:                              Poisson series.     (line   79)
* polar:                                 Functions and Variables for draw.
                                                             (line 2936)
* polarform:                             Functions for Complex Numbers.
                                                             (line   64)
* polartorect:                           Functions and Variables for fast Fourier transform.
                                                             (line    6)
* polar_to_xy:                           Functions and Variables for Plotting.
                                                             (line   54)
* polydecomp:                            Functions and Variables for Polynomials.
                                                             (line  706)
* polyfactor:                            Functions and Variables for Equations.
                                                             (line  580)
* polygon:                               Functions and Variables for draw.
                                                             (line 2960)
* polygon <1>:                           Functions and Variables for draw.
                                                             (line 2961)
* polymod:                               Functions and Variables for Polynomials.
                                                             (line  757)
* polymod <1>:                           Functions and Variables for Polynomials.
                                                             (line  758)
* polynome2ele:                          Functions and Variables for Symmetries.
                                                             (line  484)
* polynomialp:                           Functions and Variables for linearalgebra.
                                                             (line  483)
* polynomialp <1>:                       Functions and Variables for linearalgebra.
                                                             (line  484)
* polynomialp <2>:                       Functions and Variables for linearalgebra.
                                                             (line  485)
* polytocompanion:                       Functions and Variables for linearalgebra.
                                                             (line  522)
* poly_add:                              Functions and Variables for grobner.
                                                             (line   80)
* poly_buchberger:                       Functions and Variables for grobner.
                                                             (line  181)
* poly_buchberger_criterion:             Functions and Variables for grobner.
                                                             (line  175)
* poly_coefficient_ring:                 Functions and Variables for grobner.
                                                             (line   15)
* poly_colon_ideal:                      Functions and Variables for grobner.
                                                             (line  228)
* poly_content:                          Functions and Variables for grobner.
                                                             (line  151)
* poly_depends_p:                        Functions and Variables for grobner.
                                                             (line  219)
* poly_elimination_ideal:                Functions and Variables for grobner.
                                                             (line  222)
* poly_elimination_order:                Functions and Variables for grobner.
                                                             (line   34)
* poly_exact_divide:                     Functions and Variables for grobner.
                                                             (line  167)
* poly_expand:                           Functions and Variables for grobner.
                                                             (line  118)
* poly_expt:                             Functions and Variables for grobner.
                                                             (line  144)
* poly_gcd:                              Functions and Variables for grobner.
                                                             (line  245)
* poly_grobner:                          Functions and Variables for grobner.
                                                             (line  211)
* poly_grobner_algorithm:                Functions and Variables for grobner.
                                                             (line   56)
* poly_grobner_debug:                    Functions and Variables for grobner.
                                                             (line   50)
* poly_grobner_equal:                    Functions and Variables for grobner.
                                                             (line  263)
* poly_grobner_member:                   Functions and Variables for grobner.
                                                             (line  282)
* poly_grobner_subsetp:                  Functions and Variables for grobner.
                                                             (line  275)
* poly_ideal_intersection:               Functions and Variables for grobner.
                                                             (line  238)
* poly_ideal_polysaturation:             Functions and Variables for grobner.
                                                             (line  319)
* poly_ideal_polysaturation1:            Functions and Variables for grobner.
                                                             (line  309)
* poly_ideal_saturation:                 Functions and Variables for grobner.
                                                             (line  300)
* poly_ideal_saturation1:                Functions and Variables for grobner.
                                                             (line  292)
* poly_lcm:                              Functions and Variables for grobner.
                                                             (line  242)
* poly_minimization:                     Functions and Variables for grobner.
                                                             (line  201)
* poly_monomial_order:                   Functions and Variables for grobner.
                                                             (line    9)
* poly_multiply:                         Functions and Variables for grobner.
                                                             (line   94)
* poly_normalize:                        Functions and Variables for grobner.
                                                             (line  110)
* poly_normalize_list:                   Functions and Variables for grobner.
                                                             (line  206)
* poly_normal_form:                      Functions and Variables for grobner.
                                                             (line  171)
* poly_polysaturation_extension:         Functions and Variables for grobner.
                                                             (line  333)
* poly_primary_elimination_order:        Functions and Variables for grobner.
                                                             (line   22)
* poly_primitive_part:                   Functions and Variables for grobner.
                                                             (line  104)
* poly_pseudo_divide:                    Functions and Variables for grobner.
                                                             (line  157)
* poly_reduced_grobner:                  Functions and Variables for grobner.
                                                             (line  215)
* poly_reduction:                        Functions and Variables for grobner.
                                                             (line  197)
* poly_return_term_list:                 Functions and Variables for grobner.
                                                             (line   43)
* poly_saturation_extension:             Functions and Variables for grobner.
                                                             (line  327)
* poly_secondary_elimination_order:      Functions and Variables for grobner.
                                                             (line   28)
* poly_subtract:                         Functions and Variables for grobner.
                                                             (line   87)
* poly_s_polynomial:                     Functions and Variables for grobner.
                                                             (line  100)
* poly_top_reduction_only:               Functions and Variables for grobner.
                                                             (line   66)
* pop:                                   Functions and Variables for Lists.
                                                             (line  298)
* posfun:                                Functions and Variables for Properties.
                                                             (line  382)
* postfix:                               User defined operators.
                                                             (line  213)
* postfix <1>:                           User defined operators.
                                                             (line  214)
* potential:                             Functions and Variables for Integration.
                                                             (line  474)
* powerdisp:                             Functions and Variables for Display.
                                                             (line  467)
* powers:                                Functions and Variables for Polynomials.
                                                             (line  768)
* powerseries:                           Functions and Variables for Series.
                                                             (line  243)
* powerset:                              Functions and Variables for Sets.
                                                             (line  730)
* powerset <1>:                          Functions and Variables for Sets.
                                                             (line  731)
* power_mod:                             Functions and Variables for Number Theory.
                                                             (line  372)
* pred:                                  Functions and Variables for Evaluation.
                                                             (line  554)
* prederror:                             Functions and Variables for Program Flow.
                                                             (line  486)
* prefix:                                User defined operators.
                                                             (line  223)
* prefix <1>:                            User defined operators.
                                                             (line  224)
* Previous input:                        Functions and Variables for Command Line.
                                                             (line   45)
* Previous output:                       Functions and Variables for Command Line.
                                                             (line   88)
* Previous result in compound expression: Functions and Variables for Command Line.
                                                             (line  101)
* prev_prime:                            Functions and Variables for Number Theory.
                                                             (line  408)
* primep:                                Functions and Variables for Number Theory.
                                                             (line  387)
* primep_number_of_tests:                Functions and Variables for Number Theory.
                                                             (line  403)
* print:                                 Functions and Variables for Display.
                                                             (line  476)
* printf:                                Functions and Variables for input and output.
                                                             (line   62)
* printf <1>:                            Functions and Variables for input and output.
                                                             (line   63)
* printfile:                             Functions and Variables for File Input and Output.
                                                             (line  330)
* printpois:                             Poisson series.     (line   86)
* printprops:                            Functions and Variables for Properties.
                                                             (line  386)
* printprops <1>:                        Functions and Variables for Properties.
                                                             (line  387)
* printprops <2>:                        Functions and Variables for Properties.
                                                             (line  388)
* print_graph:                           Functions and Variables for graphs.
                                                             (line  904)
* prodrac:                               Functions and Variables for Symmetries.
                                                             (line  496)
* product:                               Sums and Products.  (line   44)
* product_use_gamma:                     Functions and Variables for solve_rec.
                                                             (line  167)
* program:                               Functions and Variables for graphs.
                                                             (line 1494)
* programmode:                           Functions and Variables for Equations.
                                                             (line  589)
* prompt:                                Functions and Variables for Command Line.
                                                             (line  480)
* properties:                            Functions and Variables for Miscellaneous Options.
                                                             (line   64)
* proportional_axes:                     Functions and Variables for draw.
                                                             (line 1347)
* props:                                 Functions and Variables for Miscellaneous Options.
                                                             (line   68)
* propvars:                              Functions and Variables for Miscellaneous Options.
                                                             (line   74)
* psexpand:                              Functions and Variables for Series.
                                                             (line  287)
* psfile:                                Plotting Options.   (line  186)
* psi:                                   Gamma and factorial Functions.
                                                             (line  648)
* psi <1>:                               Functions and Variables for ctensor.
                                                             (line  456)
* psubst:                                Functions and Variables for Expressions.
                                                             (line  806)
* psubst <1>:                            Functions and Variables for Expressions.
                                                             (line  807)
* ptriangularize:                        Functions and Variables for linearalgebra.
                                                             (line  530)
* pui:                                   Functions and Variables for Symmetries.
                                                             (line  108)
* pui2comp:                              Functions and Variables for Symmetries.
                                                             (line  133)
* pui2ele:                               Functions and Variables for Symmetries.
                                                             (line  158)
* pui2polynome:                          Functions and Variables for Symmetries.
                                                             (line  502)
* puireduc:                              Functions and Variables for Symmetries.
                                                             (line  165)
* pui_direct:                            Functions and Variables for Symmetries.
                                                             (line  374)
* push:                                  Functions and Variables for Lists.
                                                             (line  311)
* put:                                   Functions and Variables for Miscellaneous Options.
                                                             (line   80)
* pv:                                    Functions and Variables for finance.
                                                             (line   27)
* qput:                                  Functions and Variables for Miscellaneous Options.
                                                             (line  105)
* qrange:                                Functions and Variables for descriptive statistics.
                                                             (line  255)
* qrange <1>:                            Functions and Variables for descriptive statistics.
                                                             (line  256)
* qty:                                   Functions and Variables for ezunits.
                                                             (line  350)
* quadrilateral:                         Functions and Variables for draw.
                                                             (line 2984)
* quad_qag:                              Functions and Variables for QUADPACK.
                                                             (line    6)
* quad_qag <1>:                          Functions and Variables for QUADPACK.
                                                             (line    8)
* quad_qagi:                             Functions and Variables for QUADPACK.
                                                             (line  132)
* quad_qagi <1>:                         Functions and Variables for QUADPACK.
                                                             (line  134)
* quad_qags:                             Functions and Variables for QUADPACK.
                                                             (line   71)
* quad_qags <1>:                         Functions and Variables for QUADPACK.
                                                             (line   73)
* quad_qawc:                             Functions and Variables for QUADPACK.
                                                             (line  201)
* quad_qawc <1>:                         Functions and Variables for QUADPACK.
                                                             (line  203)
* quad_qawf:                             Functions and Variables for QUADPACK.
                                                             (line  283)
* quad_qawf <1>:                         Functions and Variables for QUADPACK.
                                                             (line  285)
* quad_qawo:                             Functions and Variables for QUADPACK.
                                                             (line  358)
* quad_qawo <1>:                         Functions and Variables for QUADPACK.
                                                             (line  360)
* quad_qaws:                             Functions and Variables for QUADPACK.
                                                             (line  437)
* quad_qaws <1>:                         Functions and Variables for QUADPACK.
                                                             (line  439)
* quantile:                              Functions and Variables for descriptive statistics.
                                                             (line  215)
* quantile <1>:                          Functions and Variables for descriptive statistics.
                                                             (line  216)
* quantile_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  214)
* quantile_beta:                         Functions and Variables for continuous distributions.
                                                             (line  777)
* quantile_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  103)
* quantile_cauchy:                       Functions and Variables for continuous distributions.
                                                             (line 1217)
* quantile_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  268)
* quantile_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line  825)
* quantile_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  355)
* quantile_exp:                          Functions and Variables for continuous distributions.
                                                             (line  529)
* quantile_f:                            Functions and Variables for continuous distributions.
                                                             (line  442)
* quantile_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  718)
* quantile_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   42)
* quantile_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  310)
* quantile_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1241)
* quantile_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  408)
* quantile_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1172)
* quantile_logistic:                     Functions and Variables for continuous distributions.
                                                             (line  875)
* quantile_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  659)
* quantile_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  470)
* quantile_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  387)
* quantile_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  175)
* quantile_normal:                       Functions and Variables for continuous distributions.
                                                             (line   24)
* quantile_pareto:                       Functions and Variables for continuous distributions.
                                                             (line  921)
* quantile_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  158)
* quantile_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1034)
* quantile_student_t:                    Functions and Variables for continuous distributions.
                                                             (line   89)
* quantile_weibull:                      Functions and Variables for continuous distributions.
                                                             (line  966)
* quartile_skewness:                     Functions and Variables for descriptive statistics.
                                                             (line  445)
* quartile_skewness <1>:                 Functions and Variables for descriptive statistics.
                                                             (line  446)
* quit:                                  Functions and Variables for Command Line.
                                                             (line  486)
* qunit:                                 Functions and Variables for Number Theory.
                                                             (line  415)
* quotient:                              Functions and Variables for Polynomials.
                                                             (line  774)
* quotient <1>:                          Functions and Variables for Polynomials.
                                                             (line  775)
* radcan:                                Functions and Variables for Simplification.
                                                             (line  424)
* radexpand:                             Functions and Variables for Simplification.
                                                             (line  449)
* radius:                                Functions and Variables for graphs.
                                                             (line  930)
* radsubstflag:                          Functions and Variables for Polynomials.
                                                             (line 1115)
* random:                                Random Numbers.     (line   32)
* random_bernoulli:                      Functions and Variables for discrete distributions.
                                                             (line  289)
* random_bernoulli <1>:                  Functions and Variables for discrete distributions.
                                                             (line  290)
* random_beta:                           Functions and Variables for continuous distributions.
                                                             (line  803)
* random_beta <1>:                       Functions and Variables for continuous distributions.
                                                             (line  804)
* random_binomial:                       Functions and Variables for discrete distributions.
                                                             (line  132)
* random_binomial <1>:                   Functions and Variables for discrete distributions.
                                                             (line  133)
* random_bipartite_graph:                Functions and Variables for graphs.
                                                             (line  230)
* random_cauchy:                         Functions and Variables for continuous distributions.
                                                             (line 1223)
* random_cauchy <1>:                     Functions and Variables for continuous distributions.
                                                             (line 1224)
* random_chi2:                           Functions and Variables for continuous distributions.
                                                             (line  365)
* random_chi2 <1>:                       Functions and Variables for continuous distributions.
                                                             (line  366)
* random_continuous_uniform:             Functions and Variables for continuous distributions.
                                                             (line  856)
* random_continuous_uniform <1>:         Functions and Variables for continuous distributions.
                                                             (line  857)
* random_digraph:                        Functions and Variables for graphs.
                                                             (line  234)
* random_discrete_uniform:               Functions and Variables for discrete distributions.
                                                             (line  387)
* random_discrete_uniform <1>:           Functions and Variables for discrete distributions.
                                                             (line  388)
* random_exp:                            Functions and Variables for continuous distributions.
                                                             (line  628)
* random_exp <1>:                        Functions and Variables for continuous distributions.
                                                             (line  629)
* random_f:                              Functions and Variables for continuous distributions.
                                                             (line  479)
* random_f <1>:                          Functions and Variables for continuous distributions.
                                                             (line  480)
* random_gamma:                          Functions and Variables for continuous distributions.
                                                             (line  744)
* random_gamma <1>:                      Functions and Variables for continuous distributions.
                                                             (line  745)
* random_general_finite_discrete:        Functions and Variables for discrete distributions.
                                                             (line   72)
* random_general_finite_discrete <1>:    Functions and Variables for discrete distributions.
                                                             (line   73)
* random_geometric:                      Functions and Variables for discrete distributions.
                                                             (line  337)
* random_geometric <1>:                  Functions and Variables for discrete distributions.
                                                             (line  338)
* random_graph:                          Functions and Variables for graphs.
                                                             (line  243)
* random_graph1:                         Functions and Variables for graphs.
                                                             (line  247)
* random_gumbel:                         Functions and Variables for continuous distributions.
                                                             (line 1281)
* random_gumbel <1>:                     Functions and Variables for continuous distributions.
                                                             (line 1282)
* random_hypergeometric:                 Functions and Variables for discrete distributions.
                                                             (line  440)
* random_hypergeometric <1>:             Functions and Variables for discrete distributions.
                                                             (line  441)
* random_laplace:                        Functions and Variables for continuous distributions.
                                                             (line 1198)
* random_laplace <1>:                    Functions and Variables for continuous distributions.
                                                             (line 1199)
* random_logistic:                       Functions and Variables for continuous distributions.
                                                             (line  901)
* random_logistic <1>:                   Functions and Variables for continuous distributions.
                                                             (line  902)
* random_lognormal:                      Functions and Variables for continuous distributions.
                                                             (line  692)
* random_lognormal <1>:                  Functions and Variables for continuous distributions.
                                                             (line  693)
* random_negative_binomial:              Functions and Variables for discrete distributions.
                                                             (line  502)
* random_negative_binomial <1>:          Functions and Variables for discrete distributions.
                                                             (line  503)
* random_network:                        Functions and Variables for graphs.
                                                             (line  250)
* random_noncentral_chi2:                Functions and Variables for continuous distributions.
                                                             (line  417)
* random_noncentral_chi2 <1>:            Functions and Variables for continuous distributions.
                                                             (line  418)
* random_noncentral_student_t:           Functions and Variables for continuous distributions.
                                                             (line  217)
* random_noncentral_student_t <1>:       Functions and Variables for continuous distributions.
                                                             (line  218)
* random_normal:                         Functions and Variables for continuous distributions.
                                                             (line   60)
* random_normal <1>:                     Functions and Variables for continuous distributions.
                                                             (line   61)
* random_pareto:                         Functions and Variables for continuous distributions.
                                                             (line  947)
* random_pareto <1>:                     Functions and Variables for continuous distributions.
                                                             (line  948)
* random_permutation:                    Functions and Variables for Sets.
                                                             (line  759)
* random_poisson:                        Functions and Variables for discrete distributions.
                                                             (line  184)
* random_poisson <1>:                    Functions and Variables for discrete distributions.
                                                             (line  185)
* random_rayleigh:                       Functions and Variables for continuous distributions.
                                                             (line 1153)
* random_rayleigh <1>:                   Functions and Variables for continuous distributions.
                                                             (line 1154)
* random_regular_graph:                  Functions and Variables for graphs.
                                                             (line  238)
* random_regular_graph <1>:              Functions and Variables for graphs.
                                                             (line  239)
* random_student_t:                      Functions and Variables for continuous distributions.
                                                             (line  122)
* random_student_t <1>:                  Functions and Variables for continuous distributions.
                                                             (line  123)
* random_tournament:                     Functions and Variables for graphs.
                                                             (line  263)
* random_tree:                           Functions and Variables for graphs.
                                                             (line  266)
* random_weibull:                        Functions and Variables for continuous distributions.
                                                             (line  992)
* random_weibull <1>:                    Functions and Variables for continuous distributions.
                                                             (line  993)
* range:                                 Functions and Variables for descriptive statistics.
                                                             (line  201)
* range <1>:                             Functions and Variables for descriptive statistics.
                                                             (line  202)
* rank:                                  Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1009)
* rank <1>:                              Functions and Variables for linearalgebra.
                                                             (line  550)
* rassociative:                          Functions and Variables for Simplification.
                                                             (line  469)
* rat:                                   Functions and Variables for Polynomials.
                                                             (line  782)
* rat <1>:                               Functions and Variables for Polynomials.
                                                             (line  783)
* ratalgdenom:                           Functions and Variables for Polynomials.
                                                             (line  827)
* ratchristof:                           Functions and Variables for ctensor.
                                                             (line 1060)
* ratcoef:                               Functions and Variables for Polynomials.
                                                             (line  834)
* ratcoef <1>:                           Functions and Variables for Polynomials.
                                                             (line  835)
* ratdenom:                              Functions and Variables for Polynomials.
                                                             (line  861)
* ratdenomdivide:                        Functions and Variables for Polynomials.
                                                             (line  875)
* ratdiff:                               Functions and Variables for Polynomials.
                                                             (line  918)
* ratdisrep:                             Functions and Variables for Polynomials.
                                                             (line  960)
* rateinstein:                           Functions and Variables for ctensor.
                                                             (line 1064)
* ratepsilon:                            Functions and Variables for Numbers.
                                                             (line  217)
* ratexpand:                             Functions and Variables for Polynomials.
                                                             (line  971)
* ratexpand <1>:                         Functions and Variables for Polynomials.
                                                             (line  972)
* ratfac:                                Functions and Variables for Polynomials.
                                                             (line 1015)
* ratinterpol:                           Functions and Variables for interpol.
                                                             (line  265)
* ratinterpol <1>:                       Functions and Variables for interpol.
                                                             (line  266)
* rational:                              Package functs.     (line   29)
* rationalize:                           Functions and Variables for Numbers.
                                                             (line  223)
* ratmx:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1017)
* ratnumer:                              Functions and Variables for Polynomials.
                                                             (line 1036)
* ratnump:                               Functions and Variables for Numbers.
                                                             (line  297)
* ratp:                                  Functions and Variables for Polynomials.
                                                             (line 1049)
* ratprint:                              Functions and Variables for Polynomials.
                                                             (line 1057)
* ratriemann:                            Functions and Variables for ctensor.
                                                             (line 1070)
* ratsimp:                               Functions and Variables for Polynomials.
                                                             (line 1063)
* ratsimp <1>:                           Functions and Variables for Polynomials.
                                                             (line 1064)
* ratsimpexpons:                         Functions and Variables for Polynomials.
                                                             (line 1109)
* ratsubst:                              Functions and Variables for Polynomials.
                                                             (line 1121)
* ratvars:                               Functions and Variables for Polynomials.
                                                             (line 1157)
* ratvars <1>:                           Functions and Variables for Polynomials.
                                                             (line 1158)
* ratvars <2>:                           Functions and Variables for Polynomials.
                                                             (line 1159)
* ratvarswitch:                          Functions and Variables for Polynomials.
                                                             (line 1177)
* ratweight:                             Functions and Variables for Polynomials.
                                                             (line 1227)
* ratweight <1>:                         Functions and Variables for Polynomials.
                                                             (line 1228)
* ratweights:                            Functions and Variables for Polynomials.
                                                             (line 1254)
* ratweyl:                               Functions and Variables for ctensor.
                                                             (line 1077)
* ratwtlvl:                              Functions and Variables for Polynomials.
                                                             (line 1264)
* read:                                  Functions and Variables for Command Line.
                                                             (line  497)
* readline:                              Functions and Variables for input and output.
                                                             (line  117)
* readonly:                              Functions and Variables for Command Line.
                                                             (line  513)
* read_array:                            Functions and Variables for plain-text input and output.
                                                             (line   26)
* read_array <1>:                        Functions and Variables for plain-text input and output.
                                                             (line   27)
* read_binary_array:                     Functions and Variables for binary input and output.
                                                             (line   38)
* read_binary_list:                      Functions and Variables for binary input and output.
                                                             (line   48)
* read_binary_list <1>:                  Functions and Variables for binary input and output.
                                                             (line   49)
* read_binary_matrix:                    Functions and Variables for binary input and output.
                                                             (line   28)
* read_hashed_array:                     Functions and Variables for plain-text input and output.
                                                             (line   39)
* read_hashed_array <1>:                 Functions and Variables for plain-text input and output.
                                                             (line   40)
* read_list:                             Functions and Variables for plain-text input and output.
                                                             (line   68)
* read_list <1>:                         Functions and Variables for plain-text input and output.
                                                             (line   69)
* read_list <2>:                         Functions and Variables for plain-text input and output.
                                                             (line   70)
* read_list <3>:                         Functions and Variables for plain-text input and output.
                                                             (line   71)
* read_matrix:                           Functions and Variables for plain-text input and output.
                                                             (line    6)
* read_matrix <1>:                       Functions and Variables for plain-text input and output.
                                                             (line    7)
* read_matrix <2>:                       Functions and Variables for plain-text input and output.
                                                             (line    8)
* read_matrix <3>:                       Functions and Variables for plain-text input and output.
                                                             (line    9)
* read_nested_list:                      Functions and Variables for plain-text input and output.
                                                             (line   54)
* read_nested_list <1>:                  Functions and Variables for plain-text input and output.
                                                             (line   55)
* read_xpm:                              Functions and Variables for pictures.
                                                             (line   75)
* Real infinity:                         Functions and Variables for Constants.
                                                             (line   35)
* realonly:                              Functions and Variables for Equations.
                                                             (line  600)
* realpart:                              Functions for Complex Numbers.
                                                             (line   68)
* realroots:                             Functions and Variables for Equations.
                                                             (line  606)
* realroots <1>:                         Functions and Variables for Equations.
                                                             (line  607)
* realroots <2>:                         Functions and Variables for Equations.
                                                             (line  608)
* realroots <3>:                         Functions and Variables for Equations.
                                                             (line  609)
* real_imagpart_to_conjugate:            Functions and Variables for to_poly_solve.
                                                             (line  596)
* rearray:                               Functions and Variables for Arrays.
                                                             (line  381)
* rectangle:                             Functions and Variables for draw.
                                                             (line 3016)
* rectform:                              Functions for Complex Numbers.
                                                             (line   72)
* rectform_log_if_constant:              Functions and Variables for to_poly_solve.
                                                             (line  613)
* recttopolar:                           Functions and Variables for fast Fourier transform.
                                                             (line   22)
* rediff:                                Functions and Variables for itensor.
                                                             (line  622)
* redraw:                                Functions and Variables for graphs.
                                                             (line 1466)
* reduce_consts:                         Package rducon.     (line    6)
* reduce_order:                          Functions and Variables for solve_rec.
                                                             (line    6)
* refcheck:                              Functions and Variables for Debugging.
                                                             (line   17)
* region:                                Functions and Variables for draw.
                                                             (line 3044)
* region_boundaries:                     Functions and Variables for worldmap.
                                                             (line  113)
* region_boundaries_plus:                Functions and Variables for worldmap.
                                                             (line  125)
* rem:                                   Functions and Variables for Miscellaneous Options.
                                                             (line  128)
* remainder:                             Functions and Variables for Polynomials.
                                                             (line 1271)
* remainder <1>:                         Functions and Variables for Polynomials.
                                                             (line 1272)
* remarray:                              Functions and Variables for Arrays.
                                                             (line  388)
* remarray <1>:                          Functions and Variables for Arrays.
                                                             (line  389)
* rembox:                                Functions and Variables for Expressions.
                                                             (line  827)
* rembox <1>:                            Functions and Variables for Expressions.
                                                             (line  828)
* rembox <2>:                            Functions and Variables for Expressions.
                                                             (line  829)
* remcomps:                              Functions and Variables for itensor.
                                                             (line  273)
* remcon:                                Functions and Variables for itensor.
                                                             (line  162)
* remcon <1>:                            Functions and Variables for itensor.
                                                             (line  163)
* remcoord:                              Functions and Variables for itensor.
                                                             (line  716)
* remcoord <1>:                          Functions and Variables for itensor.
                                                             (line  717)
* remfun:                                Functions and Variables for Fourier series.
                                                             (line   12)
* remfun <1>:                            Functions and Variables for Fourier series.
                                                             (line   13)
* remfunction:                           Functions and Variables for Function Definition.
                                                             (line  957)
* remfunction <1>:                       Functions and Variables for Function Definition.
                                                             (line  958)
* remlet:                                Functions and Variables for Rules and Patterns.
                                                             (line  500)
* remlet <1>:                            Functions and Variables for Rules and Patterns.
                                                             (line  501)
* remlet <2>:                            Functions and Variables for Rules and Patterns.
                                                             (line  502)
* remlet <3>:                            Functions and Variables for Rules and Patterns.
                                                             (line  503)
* remove:                                Functions and Variables for Miscellaneous Options.
                                                             (line  137)
* remove <1>:                            Functions and Variables for Miscellaneous Options.
                                                             (line  138)
* remove <2>:                            Functions and Variables for Miscellaneous Options.
                                                             (line  139)
* remove <3>:                            Functions and Variables for Miscellaneous Options.
                                                             (line  140)
* remove <4>:                            Functions and Variables for Miscellaneous Options.
                                                             (line  141)
* remove_constvalue:                     Functions and Variables for ezunits.
                                                             (line  248)
* remove_dimensions:                     Functions and Variables for ezunits.
                                                             (line  475)
* remove_edge:                           Functions and Variables for graphs.
                                                             (line 1199)
* remove_fundamental_dimensions:         Functions and Variables for ezunits.
                                                             (line  505)
* remove_fundamental_units:              Functions and Variables for ezunits.
                                                             (line  536)
* remove_vertex:                         Functions and Variables for graphs.
                                                             (line 1213)
* rempart:                               Package functs.     (line    6)
* remrule:                               Functions and Variables for Rules and Patterns.
                                                             (line  522)
* remrule <1>:                           Functions and Variables for Rules and Patterns.
                                                             (line  523)
* remsym:                                Functions and Variables for itensor.
                                                             (line  550)
* remvalue:                              Functions and Variables for Miscellaneous Options.
                                                             (line  173)
* remvalue <1>:                          Functions and Variables for Miscellaneous Options.
                                                             (line  174)
* rename:                                Functions and Variables for itensor.
                                                             (line   73)
* rename <1>:                            Functions and Variables for itensor.
                                                             (line   74)
* reset:                                 Functions and Variables for Command Line.
                                                             (line  534)
* residue:                               Functions and Variables for Integration.
                                                             (line  484)
* resolvante:                            Functions and Variables for Symmetries.
                                                             (line  528)
* resolvante_alternee1:                  Functions and Variables for Symmetries.
                                                             (line  699)
* resolvante_bipartite:                  Functions and Variables for Symmetries.
                                                             (line  706)
* resolvante_diedrale:                   Functions and Variables for Symmetries.
                                                             (line  719)
* resolvante_klein:                      Functions and Variables for Symmetries.
                                                             (line  737)
* resolvante_klein3:                     Functions and Variables for Symmetries.
                                                             (line  746)
* resolvante_produit_sym:                Functions and Variables for Symmetries.
                                                             (line  755)
* resolvante_unitaire:                   Functions and Variables for Symmetries.
                                                             (line  780)
* resolvante_vierer:                     Functions and Variables for Symmetries.
                                                             (line  788)
* rest:                                  Functions and Variables for Lists.
                                                             (line  350)
* rest <1>:                              Functions and Variables for Lists.
                                                             (line  351)
* resultant:                             Functions and Variables for Polynomials.
                                                             (line 1279)
* resultant <1>:                         Functions and Variables for Polynomials.
                                                             (line 1280)
* return:                                Functions and Variables for Program Flow.
                                                             (line  499)
* reveal:                                Functions and Variables for Expressions.
                                                             (line  895)
* reverse:                               Functions and Variables for Lists.
                                                             (line  358)
* revert:                                Functions and Variables for Series.
                                                             (line  299)
* revert2:                               Functions and Variables for Series.
                                                             (line  300)
* rgb2level:                             Functions and Variables for pictures.
                                                             (line   78)
* rhs:                                   Functions and Variables for Equations.
                                                             (line  650)
* ric:                                   Functions and Variables for ctensor.
                                                             (line 1108)
* ricci:                                 Functions and Variables for ctensor.
                                                             (line  183)
* riem:                                  Functions and Variables for ctensor.
                                                             (line 1092)
* riemann:                               Functions and Variables for ctensor.
                                                             (line  215)
* rinvariant:                            Functions and Variables for ctensor.
                                                             (line  251)
* risch:                                 Functions and Variables for Integration.
                                                             (line  500)
* rk:                                    Functions and Variables for dynamics.
                                                             (line  106)
* rk <1>:                                Functions and Variables for dynamics.
                                                             (line  107)
* rmxchar:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1032)
* rncombine:                             Functions and Variables for Miscellaneous Options.
                                                             (line  185)
* romberg:                               Functions and Variables for romberg.
                                                             (line    6)
* romberg <1>:                           Functions and Variables for romberg.
                                                             (line    7)
* rombergabs:                            Functions and Variables for romberg.
                                                             (line  100)
* rombergit:                             Functions and Variables for romberg.
                                                             (line  111)
* rombergmin:                            Functions and Variables for romberg.
                                                             (line  122)
* rombergtol:                            Functions and Variables for romberg.
                                                             (line  131)
* room:                                  Functions and Variables for Runtime Environment.
                                                             (line   62)
* room <1>:                              Functions and Variables for Runtime Environment.
                                                             (line   63)
* room <2>:                              Functions and Variables for Runtime Environment.
                                                             (line   64)
* rootsconmode:                          Functions and Variables for Equations.
                                                             (line  691)
* rootscontract:                         Functions and Variables for Equations.
                                                             (line  697)
* rootsepsilon:                          Functions and Variables for Equations.
                                                             (line  756)
* round:                                 Functions for Numbers.
                                                             (line  131)
* row:                                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1028)
* rowop:                                 Functions and Variables for linearalgebra.
                                                             (line  544)
* rowswap:                               Functions and Variables for linearalgebra.
                                                             (line  561)
* rreduce:                               Functions and Variables for Sets.
                                                             (line  778)
* rreduce <1>:                           Functions and Variables for Sets.
                                                             (line  779)
* run_testsuite:                         Functions and Variables for Bug Detection and Reporting.
                                                             (line    6)
* run_viewer:                            Plotting Options.   (line  194)
* save:                                  Functions and Variables for File Input and Output.
                                                             (line  384)
* save <1>:                              Functions and Variables for File Input and Output.
                                                             (line  385)
* save <2>:                              Functions and Variables for File Input and Output.
                                                             (line  386)
* save <3>:                              Functions and Variables for File Input and Output.
                                                             (line  387)
* save <4>:                              Functions and Variables for File Input and Output.
                                                             (line  388)
* save <5>:                              Functions and Variables for File Input and Output.
                                                             (line  389)
* savedef:                               Functions and Variables for Function Definition.
                                                             (line  975)
* savefactors:                           Functions and Variables for Polynomials.
                                                             (line 1298)
* saving:                                Functions and Variables for finance.
                                                             (line  174)
* scalarmatrixp:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1039)
* scalarp:                               Functions and Variables for Miscellaneous Options.
                                                             (line  198)
* scaled_bessel_i:                       Bessel Functions.   (line  147)
* scaled_bessel_i0:                      Bessel Functions.   (line  156)
* scaled_bessel_i1:                      Bessel Functions.   (line  160)
* scalefactors:                          Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1052)
* scanmap:                               Functions and Variables for Program Flow.
                                                             (line  503)
* scanmap <1>:                           Functions and Variables for Program Flow.
                                                             (line  504)
* scatterplot:                           Functions and Variables for statistical graphs.
                                                             (line  315)
* scatterplot <1>:                       Functions and Variables for statistical graphs.
                                                             (line  316)
* scatterplot <2>:                       Functions and Variables for statistical graphs.
                                                             (line  317)
* scatterplot <3>:                       Functions and Variables for statistical graphs.
                                                             (line  318)
* scatterplot_description:               Functions and Variables for statistical graphs.
                                                             (line  319)
* schur2comp:                            Functions and Variables for Symmetries.
                                                             (line  180)
* sconcat:                               Functions and Variables for Strings.
                                                             (line   45)
* scopy:                                 Functions and Variables for strings.
                                                             (line   62)
* scsimp:                                Functions and Variables for Simplification.
                                                             (line  475)
* scurvature:                            Functions and Variables for ctensor.
                                                             (line  196)
* sdowncase:                             Functions and Variables for strings.
                                                             (line   65)
* sdowncase <1>:                         Functions and Variables for strings.
                                                             (line   66)
* sdowncase <2>:                         Functions and Variables for strings.
                                                             (line   67)
* sec:                                   Functions and Variables for Trigonometric.
                                                             (line  198)
* sech:                                  Functions and Variables for Trigonometric.
                                                             (line  201)
* second:                                Functions and Variables for Lists.
                                                             (line  364)
* sequal:                                Functions and Variables for strings.
                                                             (line   70)
* sequalignore:                          Functions and Variables for strings.
                                                             (line   74)
* setcheck:                              Functions and Variables for Debugging.
                                                             (line   23)
* setcheckbreak:                         Functions and Variables for Debugging.
                                                             (line   51)
* setdifference:                         Functions and Variables for Sets.
                                                             (line  819)
* setelmx:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1069)
* setequalp:                             Functions and Variables for Sets.
                                                             (line  843)
* setify:                                Functions and Variables for Sets.
                                                             (line  859)
* setp:                                  Functions and Variables for Sets.
                                                             (line  875)
* setunits:                              Functions and Variables for Units.
                                                             (line    6)
* setup_autoload:                        Functions and Variables for Miscellaneous Options.
                                                             (line  204)
* setval:                                Functions and Variables for Debugging.
                                                             (line   62)
* set_draw_defaults:                     Functions and Variables for draw.
                                                             (line  165)
* set_edge_weight:                       Functions and Variables for graphs.
                                                             (line  938)
* set_partitions:                        Functions and Variables for Sets.
                                                             (line  894)
* set_partitions <1>:                    Functions and Variables for Sets.
                                                             (line  895)
* set_plot_option:                       Functions and Variables for Plotting.
                                                             (line  321)
* set_random_state:                      Random Numbers.     (line   27)
* set_tex_environment:                   Functions and Variables for File Input and Output.
                                                             (line  680)
* set_tex_environment_default:           Functions and Variables for File Input and Output.
                                                             (line  717)
* set_up_dot_simplifications:            Functions and Variables for Affine.
                                                             (line   34)
* set_up_dot_simplifications <1>:        Functions and Variables for Affine.
                                                             (line   35)
* set_vertex_label:                      Functions and Variables for graphs.
                                                             (line  951)
* seventh:                               Functions and Variables for Lists.
                                                             (line  369)
* sexplode:                              Functions and Variables for strings.
                                                             (line   77)
* sf:                                    Functions and Variables for atensor.
                                                             (line   78)
* shortest_path:                         Functions and Variables for graphs.
                                                             (line  964)
* shortest_weighted_path:                Functions and Variables for graphs.
                                                             (line  974)
* show:                                  Functions and Variables for itensor.
                                                             (line  130)
* showcomps:                             Functions and Variables for itensor.
                                                             (line  278)
* showratvars:                           Functions and Variables for Polynomials.
                                                             (line 1305)
* showtime:                              Functions and Variables for Command Line.
                                                             (line  545)
* show_edges:                            Functions and Variables for graphs.
                                                             (line 1445)
* show_edge_color:                       Functions and Variables for graphs.
                                                             (line 1448)
* show_edge_type:                        Functions and Variables for graphs.
                                                             (line 1454)
* show_edge_width:                       Functions and Variables for graphs.
                                                             (line 1451)
* show_id:                               Functions and Variables for graphs.
                                                             (line 1375)
* show_label:                            Functions and Variables for graphs.
                                                             (line 1380)
* show_vertex_color:                     Functions and Variables for graphs.
                                                             (line 1422)
* show_vertex_size:                      Functions and Variables for graphs.
                                                             (line 1419)
* show_vertex_type:                      Functions and Variables for graphs.
                                                             (line 1413)
* show_vertices:                         Functions and Variables for graphs.
                                                             (line 1408)
* show_weight:                           Functions and Variables for graphs.
                                                             (line 1391)
* sierpinskiale:                         Definitions for IFS fractals.
                                                             (line   16)
* sierpinskimap:                         Definitions for Peano maps.
                                                             (line   18)
* sign:                                  Functions and Variables for Facts.
                                                             (line  384)
* signum:                                Functions for Numbers.
                                                             (line  137)
* similaritytransform:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1077)
* simp:                                  Functions and Variables for Simplification.
                                                             (line  485)
* simple_linear_regression:              Functions and Variables for stats.
                                                             (line  742)
* simple_linear_regression <1>:          Functions and Variables for stats.
                                                             (line  743)
* simplified_output:                     Functions and Variables for zeilberger.
                                                             (line  103)
* simplify_products:                     Functions and Variables for solve_rec.
                                                             (line   52)
* simplify_sum:                          Functions and Variables for solve_rec.
                                                             (line   60)
* simplode:                              Functions and Variables for strings.
                                                             (line   80)
* simplode <1>:                          Functions and Variables for strings.
                                                             (line   81)
* simpmetderiv:                          Functions and Variables for itensor.
                                                             (line  746)
* simpmetderiv <1>:                      Functions and Variables for itensor.
                                                             (line  747)
* simpsum:                               Sums and Products.  (line  100)
* simp_inequality:                       Functions and Variables for to_poly_solve.
                                                             (line  636)
* simtran:                               Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1078)
* sin:                                   Functions and Variables for Trigonometric.
                                                             (line  204)
* sinh:                                  Functions and Variables for Trigonometric.
                                                             (line  207)
* sinnpiflag:                            Functions and Variables for Fourier series.
                                                             (line   57)
* sinsert:                               Functions and Variables for strings.
                                                             (line   93)
* sinvertcase:                           Functions and Variables for strings.
                                                             (line  104)
* sinvertcase <1>:                       Functions and Variables for strings.
                                                             (line  105)
* sinvertcase <2>:                       Functions and Variables for strings.
                                                             (line  106)
* sixth:                                 Functions and Variables for Lists.
                                                             (line  374)
* skewness:                              Functions and Variables for descriptive statistics.
                                                             (line  399)
* skewness <1>:                          Functions and Variables for descriptive statistics.
                                                             (line  400)
* skewness_bernoulli:                    Functions and Variables for discrete distributions.
                                                             (line  259)
* skewness_beta:                         Functions and Variables for continuous distributions.
                                                             (line  795)
* skewness_binomial:                     Functions and Variables for discrete distributions.
                                                             (line  122)
* skewness_chi2:                         Functions and Variables for continuous distributions.
                                                             (line  331)
* skewness_continuous_uniform:           Functions and Variables for continuous distributions.
                                                             (line  846)
* skewness_discrete_uniform:             Functions and Variables for discrete distributions.
                                                             (line  377)
* skewness_exp:                          Functions and Variables for continuous distributions.
                                                             (line  598)
* skewness_f:                            Functions and Variables for continuous distributions.
                                                             (line  471)
* skewness_gamma:                        Functions and Variables for continuous distributions.
                                                             (line  736)
* skewness_general_finite_discrete:      Functions and Variables for discrete distributions.
                                                             (line   62)
* skewness_geometric:                    Functions and Variables for discrete distributions.
                                                             (line  329)
* skewness_gumbel:                       Functions and Variables for continuous distributions.
                                                             (line 1264)
* skewness_hypergeometric:               Functions and Variables for discrete distributions.
                                                             (line  430)
* skewness_laplace:                      Functions and Variables for continuous distributions.
                                                             (line 1190)
* skewness_logistic:                     Functions and Variables for continuous distributions.
                                                             (line  893)
* skewness_lognormal:                    Functions and Variables for continuous distributions.
                                                             (line  684)
* skewness_negative_binomial:            Functions and Variables for discrete distributions.
                                                             (line  492)
* skewness_noncentral_chi2:              Functions and Variables for continuous distributions.
                                                             (line  409)
* skewness_noncentral_student_t:         Functions and Variables for continuous distributions.
                                                             (line  207)
* skewness_normal:                       Functions and Variables for continuous distributions.
                                                             (line   50)
* skewness_pareto:                       Functions and Variables for continuous distributions.
                                                             (line  939)
* skewness_poisson:                      Functions and Variables for discrete distributions.
                                                             (line  176)
* skewness_rayleigh:                     Functions and Variables for continuous distributions.
                                                             (line 1109)
* skewness_student_t:                    Functions and Variables for continuous distributions.
                                                             (line  113)
* skewness_weibull:                      Functions and Variables for continuous distributions.
                                                             (line  984)
* slength:                               Functions and Variables for strings.
                                                             (line  114)
* smake:                                 Functions and Variables for strings.
                                                             (line  117)
* small_rhombicosidodecahedron_graph:    Functions and Variables for graphs.
                                                             (line  269)
* small_rhombicuboctahedron_graph:       Functions and Variables for graphs.
                                                             (line  272)
* smax:                                  Functions and Variables for descriptive statistics.
                                                             (line  186)
* smax <1>:                              Functions and Variables for descriptive statistics.
                                                             (line  187)
* smin:                                  Functions and Variables for descriptive statistics.
                                                             (line  171)
* smin <1>:                              Functions and Variables for descriptive statistics.
                                                             (line  172)
* smismatch:                             Functions and Variables for strings.
                                                             (line  123)
* smismatch <1>:                         Functions and Variables for strings.
                                                             (line  124)
* snowmap:                               Definitions for Koch snowflakes.
                                                             (line    6)
* snub_cube_graph:                       Functions and Variables for graphs.
                                                             (line  275)
* snub_dodecahedron_graph:               Functions and Variables for graphs.
                                                             (line  278)
* solve:                                 Functions and Variables for Equations.
                                                             (line  762)
* solve <1>:                             Functions and Variables for Equations.
                                                             (line  763)
* solve <2>:                             Functions and Variables for Equations.
                                                             (line  764)
* solvedecomposes:                       Functions and Variables for Equations.
                                                             (line  911)
* solveexplicit:                         Functions and Variables for Equations.
                                                             (line  917)
* solvefactors:                          Functions and Variables for Equations.
                                                             (line  923)
* solvenullwarn:                         Functions and Variables for Equations.
                                                             (line  930)
* solveradcan:                           Functions and Variables for Equations.
                                                             (line  938)
* solvetrigwarn:                         Functions and Variables for Equations.
                                                             (line  944)
* solve_rec:                             Functions and Variables for solve_rec.
                                                             (line   83)
* solve_rec_rat:                         Functions and Variables for solve_rec.
                                                             (line  144)
* some:                                  Functions and Variables for Sets.
                                                             (line  943)
* some <1>:                              Functions and Variables for Sets.
                                                             (line  944)
* somrac:                                Functions and Variables for Symmetries.
                                                             (line  519)
* sort:                                  Functions and Variables for Lists.
                                                             (line  379)
* sort <1>:                              Functions and Variables for Lists.
                                                             (line  380)
* space:                                 Functions and Variables for characters.
                                                             (line   76)
* sparse:                                Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1102)
* sparse6_decode:                        Functions and Variables for graphs.
                                                             (line 1246)
* sparse6_encode:                        Functions and Variables for graphs.
                                                             (line 1250)
* sparse6_export:                        Functions and Variables for graphs.
                                                             (line 1254)
* sparse6_import:                        Functions and Variables for graphs.
                                                             (line 1259)
* specint:                               Functions and Variables for Special Functions.
                                                             (line    6)
* spherical:                             Functions and Variables for draw.
                                                             (line 3064)
* spherical_bessel_j:                    Functions and Variables for orthogonal polynomials.
                                                             (line  163)
* spherical_bessel_y:                    Functions and Variables for orthogonal polynomials.
                                                             (line  169)
* spherical_hankel1:                     Functions and Variables for orthogonal polynomials.
                                                             (line  175)
* spherical_hankel2:                     Functions and Variables for orthogonal polynomials.
                                                             (line  180)
* spherical_harmonic:                    Functions and Variables for orthogonal polynomials.
                                                             (line  185)
* spherical_to_xyz:                      Functions and Variables for Plotting.
                                                             (line  351)
* splice:                                Macros.             (line  164)
* split:                                 Functions and Variables for strings.
                                                             (line  133)
* split <1>:                             Functions and Variables for strings.
                                                             (line  134)
* split <2>:                             Functions and Variables for strings.
                                                             (line  135)
* sposition:                             Functions and Variables for strings.
                                                             (line  149)
* spring_embedding_depth:                Functions and Variables for graphs.
                                                             (line 1482)
* sprint:                                Functions and Variables for input and output.
                                                             (line  121)
* sqfr:                                  Functions and Variables for Polynomials.
                                                             (line 1310)
* sqrt:                                  Root Exponential and Logarithmic Functions.
                                                             (line  228)
* sqrtdenest:                            Package sqdnst.     (line    6)
* sqrtdispflag:                          Functions and Variables for Display.
                                                             (line  511)
* sremove:                               Functions and Variables for strings.
                                                             (line  154)
* sremove <1>:                           Functions and Variables for strings.
                                                             (line  155)
* sremove <2>:                           Functions and Variables for strings.
                                                             (line  156)
* sremove <3>:                           Functions and Variables for strings.
                                                             (line  157)
* sremovefirst:                          Functions and Variables for strings.
                                                             (line  170)
* sremovefirst <1>:                      Functions and Variables for strings.
                                                             (line  171)
* sremovefirst <2>:                      Functions and Variables for strings.
                                                             (line  172)
* sremovefirst <3>:                      Functions and Variables for strings.
                                                             (line  173)
* sreverse:                              Functions and Variables for strings.
                                                             (line  177)
* ssearch:                               Functions and Variables for strings.
                                                             (line  180)
* ssearch <1>:                           Functions and Variables for strings.
                                                             (line  181)
* ssearch <2>:                           Functions and Variables for strings.
                                                             (line  182)
* ssearch <3>:                           Functions and Variables for strings.
                                                             (line  183)
* ssort:                                 Functions and Variables for strings.
                                                             (line  194)
* ssort <1>:                             Functions and Variables for strings.
                                                             (line  195)
* sstatus:                               Functions and Variables for Runtime Environment.
                                                             (line   73)
* ssubst:                                Functions and Variables for strings.
                                                             (line  209)
* ssubst <1>:                            Functions and Variables for strings.
                                                             (line  210)
* ssubst <2>:                            Functions and Variables for strings.
                                                             (line  211)
* ssubst <3>:                            Functions and Variables for strings.
                                                             (line  212)
* ssubstfirst:                           Functions and Variables for strings.
                                                             (line  226)
* ssubstfirst <1>:                       Functions and Variables for strings.
                                                             (line  227)
* ssubstfirst <2>:                       Functions and Variables for strings.
                                                             (line  228)
* ssubstfirst <3>:                       Functions and Variables for strings.
                                                             (line  229)
* staircase:                             Functions and Variables for dynamics.
                                                             (line  140)
* standardize_inverse_trig:              Functions and Variables for to_poly_solve.
                                                             (line  659)
* stardisp:                              Functions and Variables for Display.
                                                             (line  517)
* starplot:                              Functions and Variables for statistical graphs.
                                                             (line  374)
* starplot_description:                  Functions and Variables for statistical graphs.
                                                             (line  375)
* stats_numer:                           Functions and Variables for stats.
                                                             (line    6)
* status:                                Functions and Variables for Runtime Environment.
                                                             (line   84)
* status <1>:                            Functions and Variables for Runtime Environment.
                                                             (line   85)
* std:                                   Functions and Variables for descriptive statistics.
                                                             (line   75)
* std <1>:                               Functions and Variables for descriptive statistics.
                                                             (line   76)
* std1:                                  Functions and Variables for descriptive statistics.
                                                             (line   92)
* std1 <1>:                              Functions and Variables for descriptive statistics.
                                                             (line   93)
* std_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  246)
* std_beta:                              Functions and Variables for continuous distributions.
                                                             (line  791)
* std_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  117)
* std_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  316)
* std_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  841)
* std_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  372)
* std_exp:                               Functions and Variables for continuous distributions.
                                                             (line  581)
* std_f:                                 Functions and Variables for continuous distributions.
                                                             (line  467)
* std_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  732)
* std_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   57)
* std_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  325)
* std_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1260)
* std_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  425)
* std_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1186)
* std_logistic:                          Functions and Variables for continuous distributions.
                                                             (line  889)
* std_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  680)
* std_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  487)
* std_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  405)
* std_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  202)
* std_normal:                            Functions and Variables for continuous distributions.
                                                             (line   46)
* std_pareto:                            Functions and Variables for continuous distributions.
                                                             (line  935)
* std_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  172)
* std_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1090)
* std_student_t:                         Functions and Variables for continuous distributions.
                                                             (line  109)
* std_weibull:                           Functions and Variables for continuous distributions.
                                                             (line  980)
* stemplot:                              Functions and Variables for statistical graphs.
                                                             (line  433)
* stemplot <1>:                          Functions and Variables for statistical graphs.
                                                             (line  434)
* stirling:                              Functions and Variables for stirling.
                                                             (line    6)
* stirling <1>:                          Functions and Variables for stirling.
                                                             (line    7)
* stirling1:                             Functions and Variables for Sets.
                                                             (line 1009)
* stirling2:                             Functions and Variables for Sets.
                                                             (line 1061)
* strim:                                 Functions and Variables for strings.
                                                             (line  233)
* striml:                                Functions and Variables for strings.
                                                             (line  243)
* strimr:                                Functions and Variables for strings.
                                                             (line  246)
* string:                                Functions and Variables for Strings.
                                                             (line   53)
* stringdisp:                            Functions and Variables for Strings.
                                                             (line   60)
* stringout:                             Functions and Variables for File Input and Output.
                                                             (line  439)
* stringout <1>:                         Functions and Variables for File Input and Output.
                                                             (line  440)
* stringout <2>:                         Functions and Variables for File Input and Output.
                                                             (line  441)
* stringout <3>:                         Functions and Variables for File Input and Output.
                                                             (line  442)
* stringout <4>:                         Functions and Variables for File Input and Output.
                                                             (line  443)
* stringp:                               Functions and Variables for strings.
                                                             (line    6)
* strong_components:                     Functions and Variables for graphs.
                                                             (line  989)
* structures:                            Functions and Variables for Structures.
                                                             (line    6)
* struve_h:                              Struve Functions.   (line   12)
* struve_l:                              Struve Functions.   (line   15)
* style:                                 Plotting Options.   (line  201)
* style <1>:                             Plotting Options.   (line  202)
* sublis:                                Functions and Variables for Expressions.
                                                             (line  952)
* sublist:                               Functions and Variables for Lists.
                                                             (line  439)
* sublist_indices:                       Functions and Variables for Lists.
                                                             (line  450)
* sublis_apply_lambda:                   Functions and Variables for Expressions.
                                                             (line  966)
* submatrix:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1109)
* submatrix <1>:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1110)
* submatrix <2>:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1111)
* subnumsimp:                            Functions and Variables for Expressions.
                                                             (line  973)
* subsample:                             Functions and Variables for data manipulation.
                                                             (line   59)
* subsample <1>:                         Functions and Variables for data manipulation.
                                                             (line   60)
* Subscript operator:                    Functions and Variables for Lists.
                                                             (line    8)
* subset:                                Functions and Variables for Sets.
                                                             (line 1121)
* subsetp:                               Functions and Variables for Sets.
                                                             (line 1139)
* subst:                                 Functions and Variables for Expressions.
                                                             (line  990)
* substinpart:                           Functions and Variables for Expressions.
                                                             (line 1037)
* substpart:                             Functions and Variables for Expressions.
                                                             (line 1092)
* substring:                             Functions and Variables for strings.
                                                             (line  249)
* substring <1>:                         Functions and Variables for strings.
                                                             (line  250)
* subst_parallel:                        Functions and Variables for to_poly_solve.
                                                             (line  671)
* subvar:                                Functions and Variables for Arrays.
                                                             (line  405)
* subvarp:                               Functions and Variables for Arrays.
                                                             (line  430)
* sum:                                   Sums and Products.  (line  108)
* sumcontract:                           Sums and Products.  (line  203)
* sumexpand:                             Sums and Products.  (line  214)
* summand_to_rec:                        Functions and Variables for solve_rec.
                                                             (line  175)
* summand_to_rec <1>:                    Functions and Variables for solve_rec.
                                                             (line  176)
* sumsplitfact:                          Combinatorial Functions.
                                                             (line  165)
* supcase:                               Functions and Variables for strings.
                                                             (line  261)
* supcase <1>:                           Functions and Variables for strings.
                                                             (line  262)
* supcase <2>:                           Functions and Variables for strings.
                                                             (line  263)
* supcontext:                            Functions and Variables for Facts.
                                                             (line  390)
* supcontext <1>:                        Functions and Variables for Facts.
                                                             (line  391)
* surface_hide:                          Functions and Variables for draw.
                                                             (line 1386)
* symbolp:                               Functions and Variables for Expressions.
                                                             (line 1121)
* symmdifference:                        Functions and Variables for Sets.
                                                             (line 1153)
* symmetric:                             Functions and Variables for Simplification.
                                                             (line  518)
* symmetricp:                            Functions and Variables for ctensor.
                                                             (line  763)
* system:                                Functions and Variables for Runtime Environment.
                                                             (line  107)
* t:                                     Plotting Options.   (line  235)
* tab:                                   Functions and Variables for characters.
                                                             (line   79)
* take_channel:                          Functions and Variables for pictures.
                                                             (line   82)
* take_inference:                        Functions and Variables for inference_result.
                                                             (line   71)
* take_inference <1>:                    Functions and Variables for inference_result.
                                                             (line   72)
* take_inference <2>:                    Functions and Variables for inference_result.
                                                             (line   73)
* tan:                                   Functions and Variables for Trigonometric.
                                                             (line  210)
* tanh:                                  Functions and Variables for Trigonometric.
                                                             (line  213)
* taylor:                                Functions and Variables for Series.
                                                             (line  339)
* taylor <1>:                            Functions and Variables for Series.
                                                             (line  340)
* taylor <2>:                            Functions and Variables for Series.
                                                             (line  341)
* taylor <3>:                            Functions and Variables for Series.
                                                             (line  342)
* taylor <4>:                            Functions and Variables for Series.
                                                             (line  344)
* taylordepth:                           Functions and Variables for Series.
                                                             (line  490)
* taylorinfo:                            Functions and Variables for Series.
                                                             (line  496)
* taylorp:                               Functions and Variables for Series.
                                                             (line  521)
* taylor_logexpand:                      Functions and Variables for Series.
                                                             (line  526)
* taylor_order_coefficients:             Functions and Variables for Series.
                                                             (line  539)
* taylor_simplifier:                     Functions and Variables for Series.
                                                             (line  548)
* taylor_truncate_polynomials:           Functions and Variables for Series.
                                                             (line  553)
* taytorat:                              Functions and Variables for Series.
                                                             (line  562)
* tcl_output:                            Functions and Variables for File Input and Output.
                                                             (line  344)
* tcl_output <1>:                        Functions and Variables for File Input and Output.
                                                             (line  345)
* tcl_output <2>:                        Functions and Variables for File Input and Output.
                                                             (line  346)
* tcontract:                             Functions and Variables for Symmetries.
                                                             (line  244)
* tellrat:                               Functions and Variables for Polynomials.
                                                             (line 1325)
* tellrat <1>:                           Functions and Variables for Polynomials.
                                                             (line 1326)
* tellsimp:                              Functions and Variables for Rules and Patterns.
                                                             (line  569)
* tellsimpafter:                         Functions and Variables for Rules and Patterns.
                                                             (line  626)
* tensorkill:                            Functions and Variables for ctensor.
                                                             (line 1172)
* tentex:                                Functions and Variables for itensor.
                                                             (line 1436)
* tenth:                                 Functions and Variables for Lists.
                                                             (line  488)
* terminal:                              Functions and Variables for draw.
                                                             (line 1403)
* terminal <1>:                          Functions and Variables for graphs.
                                                             (line 1487)
* testsuite_files:                       Functions and Variables for Bug Detection and Reporting.
                                                             (line   45)
* test_mean:                             Functions and Variables for stats.
                                                             (line   13)
* test_mean <1>:                         Functions and Variables for stats.
                                                             (line   14)
* test_means_difference:                 Functions and Variables for stats.
                                                             (line  112)
* test_means_difference <1>:             Functions and Variables for stats.
                                                             (line  113)
* test_normality:                        Functions and Variables for stats.
                                                             (line  711)
* test_proportion:                       Functions and Variables for stats.
                                                             (line  345)
* test_proportion <1>:                   Functions and Variables for stats.
                                                             (line  346)
* test_proportions_difference:           Functions and Variables for stats.
                                                             (line  437)
* test_proportions_difference <1>:       Functions and Variables for stats.
                                                             (line  438)
* test_rank_sum:                         Functions and Variables for stats.
                                                             (line  645)
* test_rank_sum <1>:                     Functions and Variables for stats.
                                                             (line  646)
* test_sign:                             Functions and Variables for stats.
                                                             (line  520)
* test_sign <1>:                         Functions and Variables for stats.
                                                             (line  521)
* test_signed_rank:                      Functions and Variables for stats.
                                                             (line  570)
* test_signed_rank <1>:                  Functions and Variables for stats.
                                                             (line  571)
* test_variance:                         Functions and Variables for stats.
                                                             (line  216)
* test_variance <1>:                     Functions and Variables for stats.
                                                             (line  217)
* test_variance_ratio:                   Functions and Variables for stats.
                                                             (line  279)
* test_variance_ratio <1>:               Functions and Variables for stats.
                                                             (line  280)
* tex:                                   Functions and Variables for File Input and Output.
                                                             (line  482)
* tex <1>:                               Functions and Variables for File Input and Output.
                                                             (line  483)
* tex <2>:                               Functions and Variables for File Input and Output.
                                                             (line  484)
* tex <3>:                               Functions and Variables for File Input and Output.
                                                             (line  485)
* tex <4>:                               Functions and Variables for File Input and Output.
                                                             (line  486)
* tex <5>:                               Functions and Variables for File Input and Output.
                                                             (line  487)
* tex1:                                  Functions and Variables for File Input and Output.
                                                             (line  538)
* texput:                                Functions and Variables for File Input and Output.
                                                             (line  548)
* texput <1>:                            Functions and Variables for File Input and Output.
                                                             (line  549)
* texput <2>:                            Functions and Variables for File Input and Output.
                                                             (line  550)
* texput <3>:                            Functions and Variables for File Input and Output.
                                                             (line  551)
* texput <4>:                            Functions and Variables for File Input and Output.
                                                             (line  552)
* third:                                 Functions and Variables for Lists.
                                                             (line  493)
* throw:                                 Functions and Variables for Program Flow.
                                                             (line  541)
* time:                                  Functions and Variables for Runtime Environment.
                                                             (line  128)
* timedate:                              Functions and Variables for Runtime Environment.
                                                             (line  138)
* timedate <1>:                          Functions and Variables for Runtime Environment.
                                                             (line  139)
* timer:                                 Functions and Variables for Debugging.
                                                             (line   70)
* timer <1>:                             Functions and Variables for Debugging.
                                                             (line   71)
* timer <2>:                             Functions and Variables for Debugging.
                                                             (line   72)
* timer_devalue:                         Functions and Variables for Debugging.
                                                             (line  112)
* timer_info:                            Functions and Variables for Debugging.
                                                             (line  123)
* timer_info <1>:                        Functions and Variables for Debugging.
                                                             (line  124)
* title:                                 Functions and Variables for draw.
                                                             (line 1471)
* tldefint:                              Functions and Variables for Integration.
                                                             (line  521)
* tlimit:                                Functions and Variables for Limits.
                                                             (line   62)
* tlimit <1>:                            Functions and Variables for Limits.
                                                             (line   63)
* tlimit <2>:                            Functions and Variables for Limits.
                                                             (line   64)
* tlimswitch:                            Functions and Variables for Limits.
                                                             (line   69)
* todd_coxeter:                          Functions and Variables for Groups.
                                                             (line    6)
* todd_coxeter <1>:                      Functions and Variables for Groups.
                                                             (line    7)
* toeplitz:                              Functions and Variables for linearalgebra.
                                                             (line  566)
* toeplitz <1>:                          Functions and Variables for linearalgebra.
                                                             (line  567)
* tokens:                                Functions and Variables for strings.
                                                             (line  271)
* tokens <1>:                            Functions and Variables for strings.
                                                             (line  272)
* topological_sort:                      Functions and Variables for graphs.
                                                             (line 1000)
* totaldisrep:                           Functions and Variables for Polynomials.
                                                             (line 1376)
* totalfourier:                          Functions and Variables for Fourier series.
                                                             (line   82)
* totient:                               Functions and Variables for Number Theory.
                                                             (line  426)
* to_lisp:                               Functions and Variables for Command Line.
                                                             (line  556)
* to_poly:                               Functions and Variables for to_poly_solve.
                                                             (line  723)
* to_poly_solve:                         Functions and Variables for to_poly_solve.
                                                             (line  777)
* tpartpol:                              Functions and Variables for Symmetries.
                                                             (line  248)
* tr:                                    Functions and Variables for ctensor.
                                                             (line 1155)
* trace:                                 Functions and Variables for Debugging.
                                                             (line  141)
* trace <1>:                             Functions and Variables for Debugging.
                                                             (line  142)
* trace <2>:                             Functions and Variables for Debugging.
                                                             (line  143)
* tracematrix:                           Package functs.     (line   24)
* trace_options:                         Functions and Variables for Debugging.
                                                             (line  169)
* trace_options <1>:                     Functions and Variables for Debugging.
                                                             (line  170)
* transcompile:                          Functions and Variables for Function Definition.
                                                             (line  985)
* transform:                             Functions and Variables for draw.
                                                             (line 1486)
* transform_xy:                          Plotting Options.   (line  241)
* translate:                             Functions and Variables for Function Definition.
                                                             (line  993)
* translate <1>:                         Functions and Variables for Function Definition.
                                                             (line  994)
* translate <2>:                         Functions and Variables for Function Definition.
                                                             (line  995)
* translate_file:                        Functions and Variables for Function Definition.
                                                             (line 1044)
* translate_file <1>:                    Functions and Variables for Function Definition.
                                                             (line 1045)
* transparent:                           Functions and Variables for draw.
                                                             (line 1524)
* transpose:                             Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1116)
* transrun:                              Functions and Variables for Function Definition.
                                                             (line 1099)
* treefale:                              Definitions for IFS fractals.
                                                             (line   28)
* tree_reduce:                           Functions and Variables for Sets.
                                                             (line 1183)
* tree_reduce <1>:                       Functions and Variables for Sets.
                                                             (line 1184)
* treillis:                              Functions and Variables for Symmetries.
                                                             (line  442)
* treinat:                               Functions and Variables for Symmetries.
                                                             (line  450)
* triangle:                              Functions and Variables for draw.
                                                             (line 3083)
* triangularize:                         Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1128)
* trigexpand:                            Functions and Variables for Trigonometric.
                                                             (line  216)
* trigexpandplus:                        Functions and Variables for Trigonometric.
                                                             (line  245)
* trigexpandtimes:                       Functions and Variables for Trigonometric.
                                                             (line  253)
* triginverses:                          Functions and Variables for Trigonometric.
                                                             (line  261)
* trigrat:                               Functions and Variables for Trigonometric.
                                                             (line  306)
* trigreduce:                            Functions and Variables for Trigonometric.
                                                             (line  275)
* trigreduce <1>:                        Functions and Variables for Trigonometric.
                                                             (line  276)
* trigsign:                              Functions and Variables for Trigonometric.
                                                             (line  289)
* trigsimp:                              Functions and Variables for Trigonometric.
                                                             (line  296)
* trivial_solutions:                     Functions and Variables for zeilberger.
                                                             (line  128)
* true:                                  Functions and Variables for Constants.
                                                             (line  103)
* trunc:                                 Functions and Variables for Series.
                                                             (line  566)
* truncated_cube_graph:                  Functions and Variables for graphs.
                                                             (line  281)
* truncated_dodecahedron_graph:          Functions and Variables for graphs.
                                                             (line  284)
* truncated_icosahedron_graph:           Functions and Variables for graphs.
                                                             (line  287)
* truncated_tetrahedron_graph:           Functions and Variables for graphs.
                                                             (line  290)
* tr_array_as_ref:                       Functions and Variables for Function Definition.
                                                             (line 1106)
* tr_bound_function_applyp:              Functions and Variables for Function Definition.
                                                             (line 1118)
* tr_file_tty_messagesp:                 Functions and Variables for Function Definition.
                                                             (line 1129)
* tr_float_can_branch_complex:           Functions and Variables for Function Definition.
                                                             (line 1137)
* tr_function_call_default:              Functions and Variables for Function Definition.
                                                             (line 1151)
* tr_numer:                              Functions and Variables for Function Definition.
                                                             (line 1165)
* tr_optimize_max_loop:                  Functions and Variables for Function Definition.
                                                             (line 1171)
* tr_semicompile:                        Functions and Variables for Function Definition.
                                                             (line 1178)
* tr_state_vars:                         Functions and Variables for Function Definition.
                                                             (line 1185)
* tr_warnings_get:                       Functions and Variables for Function Definition.
                                                             (line 1196)
* tr_warn_bad_function_calls:            Functions and Variables for Function Definition.
                                                             (line 1200)
* tr_warn_fexpr:                         Functions and Variables for Function Definition.
                                                             (line 1206)
* tr_warn_meval:                         Functions and Variables for Function Definition.
                                                             (line 1213)
* tr_warn_mode:                          Functions and Variables for Function Definition.
                                                             (line 1219)
* tr_warn_undeclared:                    Functions and Variables for Function Definition.
                                                             (line 1224)
* tr_warn_undefined_variable:            Functions and Variables for Function Definition.
                                                             (line 1229)
* ttyoff:                                Functions and Variables for Display.
                                                             (line  523)
* tube:                                  Functions and Variables for draw.
                                                             (line 3113)
* tube_extremes:                         Functions and Variables for draw.
                                                             (line 1541)
* tutte_graph:                           Functions and Variables for graphs.
                                                             (line  293)
* ueivects:                              Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1150)
* ufg:                                   Functions and Variables for ctensor.
                                                             (line 1088)
* uforget:                               Functions and Variables for Units.
                                                             (line  111)
* ug:                                    Functions and Variables for ctensor.
                                                             (line 1121)
* ultraspherical:                        Functions and Variables for orthogonal polynomials.
                                                             (line  197)
* und:                                   Functions and Variables for Constants.
                                                             (line  108)
* Undefined:                             Functions and Variables for Constants.
                                                             (line  109)
* underlying_graph:                      Functions and Variables for graphs.
                                                             (line  296)
* undiff:                                Functions and Variables for itensor.
                                                             (line  626)
* union:                                 Functions and Variables for Sets.
                                                             (line 1216)
* unique:                                Functions and Variables for Lists.
                                                             (line  474)
* uniteigenvectors:                      Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1149)
* unitp:                                 Functions and Variables for ezunits.
                                                             (line  398)
* units:                                 Functions and Variables for ezunits.
                                                             (line  290)
* unitvector:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1175)
* unit_step:                             Functions and Variables for orthogonal polynomials.
                                                             (line  190)
* unit_vectors:                          Functions and Variables for draw.
                                                             (line 1556)
* unknown:                               Functions and Variables for Predicates.
                                                             (line  212)
* unless:                                Functions and Variables for Program Flow.
                                                             (line  547)
* unorder:                               Functions and Variables for Expressions.
                                                             (line 1129)
* unsum:                                 Functions and Variables for Series.
                                                             (line  583)
* untellrat:                             Functions and Variables for Polynomials.
                                                             (line 1385)
* untimer:                               Functions and Variables for Debugging.
                                                             (line   97)
* untimer <1>:                           Functions and Variables for Debugging.
                                                             (line   98)
* untrace:                               Functions and Variables for Debugging.
                                                             (line  222)
* untrace <1>:                           Functions and Variables for Debugging.
                                                             (line  223)
* uppercasep:                            Functions and Variables for characters.
                                                             (line   82)
* uric:                                  Functions and Variables for ctensor.
                                                             (line 1112)
* uricci:                                Functions and Variables for ctensor.
                                                             (line  188)
* uriem:                                 Functions and Variables for ctensor.
                                                             (line 1104)
* uriemann:                              Functions and Variables for ctensor.
                                                             (line  247)
* usersetunits:                          Functions and Variables for Units.
                                                             (line  205)
* user_preamble:                         Functions and Variables for draw.
                                                             (line 1577)
* use_fast_arrays:                       Functions and Variables for Arrays.
                                                             (line  435)
* uvect:                                 Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1176)
* values:                                Functions and Variables for Command Line.
                                                             (line  585)
* vandermonde_matrix:                    Functions and Variables for linearalgebra.
                                                             (line  587)
* var:                                   Functions and Variables for descriptive statistics.
                                                             (line   31)
* var <1>:                               Functions and Variables for descriptive statistics.
                                                             (line   32)
* var1:                                  Functions and Variables for descriptive statistics.
                                                             (line   51)
* var1 <1>:                              Functions and Variables for descriptive statistics.
                                                             (line   52)
* var_bernoulli:                         Functions and Variables for discrete distributions.
                                                             (line  233)
* var_beta:                              Functions and Variables for continuous distributions.
                                                             (line  787)
* var_binomial:                          Functions and Variables for discrete distributions.
                                                             (line  113)
* var_chi2:                              Functions and Variables for continuous distributions.
                                                             (line  301)
* var_continuous_uniform:                Functions and Variables for continuous distributions.
                                                             (line  836)
* var_discrete_uniform:                  Functions and Variables for discrete distributions.
                                                             (line  367)
* var_exp:                               Functions and Variables for continuous distributions.
                                                             (line  563)
* var_f:                                 Functions and Variables for continuous distributions.
                                                             (line  463)
* var_gamma:                             Functions and Variables for continuous distributions.
                                                             (line  728)
* var_general_finite_discrete:           Functions and Variables for discrete distributions.
                                                             (line   52)
* var_geometric:                         Functions and Variables for discrete distributions.
                                                             (line  321)
* var_gumbel:                            Functions and Variables for continuous distributions.
                                                             (line 1256)
* var_hypergeometric:                    Functions and Variables for discrete distributions.
                                                             (line  420)
* var_laplace:                           Functions and Variables for continuous distributions.
                                                             (line 1182)
* var_logistic:                          Functions and Variables for continuous distributions.
                                                             (line  885)
* var_lognormal:                         Functions and Variables for continuous distributions.
                                                             (line  676)
* var_negative_binomial:                 Functions and Variables for discrete distributions.
                                                             (line  482)
* var_noncentral_chi2:                   Functions and Variables for continuous distributions.
                                                             (line  401)
* var_noncentral_student_t:              Functions and Variables for continuous distributions.
                                                             (line  197)
* var_normal:                            Functions and Variables for continuous distributions.
                                                             (line   42)
* var_pareto:                            Functions and Variables for continuous distributions.
                                                             (line  931)
* var_poisson:                           Functions and Variables for discrete distributions.
                                                             (line  168)
* var_rayleigh:                          Functions and Variables for continuous distributions.
                                                             (line 1070)
* var_student_t:                         Functions and Variables for continuous distributions.
                                                             (line  100)
* var_weibull:                           Functions and Variables for continuous distributions.
                                                             (line  976)
* vector:                                Functions and Variables for draw.
                                                             (line 3136)
* vector <1>:                            Functions and Variables for draw.
                                                             (line 3137)
* vectorpotential:                       Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1184)
* vectorpotential <1>:                   Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1190)
* vectorsimp:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1195)
* vect_cross:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1225)
* verbify:                               Functions and Variables for Expressions.
                                                             (line 1165)
* verbose:                               Functions and Variables for Series.
                                                             (line  613)
* vers:                                  Package functs.     (line  133)
* vertex_color:                          Functions and Variables for graphs.
                                                             (line 1405)
* vertex_coloring:                       Functions and Variables for graphs.
                                                             (line 1431)
* vertex_coloring <1>:                   Functions and Variables for graphs.
                                                             (line 1085)
* vertex_connectivity:                   Functions and Variables for graphs.
                                                             (line 1018)
* vertex_degree:                         Functions and Variables for graphs.
                                                             (line 1023)
* vertex_distance:                       Functions and Variables for graphs.
                                                             (line 1026)
* vertex_eccentricity:                   Functions and Variables for graphs.
                                                             (line 1037)
* vertex_in_degree:                      Functions and Variables for graphs.
                                                             (line 1047)
* vertex_out_degree:                     Functions and Variables for graphs.
                                                             (line 1066)
* vertex_partition:                      Functions and Variables for graphs.
                                                             (line 1425)
* vertex_size:                           Functions and Variables for graphs.
                                                             (line 1402)
* vertex_type:                           Functions and Variables for graphs.
                                                             (line 1396)
* vertices:                              Functions and Variables for graphs.
                                                             (line 1077)
* vertices_to_cycle:                     Functions and Variables for graphs.
                                                             (line 1510)
* vertices_to_path:                      Functions and Variables for graphs.
                                                             (line 1506)
* view:                                  Functions and Variables for draw.
                                                             (line 1599)
* warnings:                              Functions and Variables for zeilberger.
                                                             (line  115)
* Wedge product:                         Functions and Variables for itensor.
                                                             (line 1292)
* weyl:                                  Functions and Variables for ctensor.
                                                             (line 1125)
* weyl <1>:                              Functions and Variables for ctensor.
                                                             (line  260)
* wheel_graph:                           Functions and Variables for graphs.
                                                             (line  299)
* while:                                 Functions and Variables for Program Flow.
                                                             (line  546)
* wiener_index:                          Functions and Variables for graphs.
                                                             (line 1097)
* with_stdout:                           Functions and Variables for File Input and Output.
                                                             (line  750)
* with_stdout <1>:                       Functions and Variables for File Input and Output.
                                                             (line  751)
* writefile:                             Functions and Variables for File Input and Output.
                                                             (line  778)
* write_binary_data:                     Functions and Variables for binary input and output.
                                                             (line   60)
* write_data:                            Functions and Variables for plain-text input and output.
                                                             (line   85)
* write_data <1>:                        Functions and Variables for plain-text input and output.
                                                             (line   86)
* wronskian:                             Package functs.     (line   14)
* x:                                     Plotting Options.   (line  252)
* xaxis:                                 Functions and Variables for draw.
                                                             (line 1622)
* xaxis_color:                           Functions and Variables for draw.
                                                             (line 1639)
* xaxis_secondary:                       Functions and Variables for draw.
                                                             (line 1657)
* xaxis_type:                            Functions and Variables for draw.
                                                             (line 1682)
* xaxis_width:                           Functions and Variables for draw.
                                                             (line 1700)
* xlabel:                                Plotting Options.   (line  260)
* xlabel <1>:                            Functions and Variables for draw.
                                                             (line 1717)
* xrange:                                Functions and Variables for draw.
                                                             (line 1735)
* xrange_secondary:                      Functions and Variables for draw.
                                                             (line 1754)
* xreduce:                               Functions and Variables for Sets.
                                                             (line 1242)
* xreduce <1>:                           Functions and Variables for Sets.
                                                             (line 1243)
* xthru:                                 Functions and Variables for Simplification.
                                                             (line  525)
* xtics:                                 Functions and Variables for draw.
                                                             (line 1770)
* xtics_axis:                            Functions and Variables for draw.
                                                             (line 1830)
* xtics_rotate:                          Functions and Variables for draw.
                                                             (line 1840)
* xtics_rotate_secondary:                Functions and Variables for draw.
                                                             (line 1849)
* xtics_secondary:                       Functions and Variables for draw.
                                                             (line 1858)
* xtics_secondary_axis:                  Functions and Variables for draw.
                                                             (line 1866)
* xu_grid:                               Functions and Variables for draw.
                                                             (line 1876)
* xyplane:                               Functions and Variables for draw.
                                                             (line 1903)
* xy_file:                               Functions and Variables for draw.
                                                             (line 1894)
* x_voxel:                               Functions and Variables for draw.
                                                             (line 1615)
* y:                                     Plotting Options.   (line  269)
* yaxis:                                 Functions and Variables for draw.
                                                             (line 1926)
* yaxis_color:                           Functions and Variables for draw.
                                                             (line 1943)
* yaxis_secondary:                       Functions and Variables for draw.
                                                             (line 1961)
* yaxis_type:                            Functions and Variables for draw.
                                                             (line 1984)
* yaxis_width:                           Functions and Variables for draw.
                                                             (line 2002)
* ylabel:                                Plotting Options.   (line  274)
* ylabel <1>:                            Functions and Variables for draw.
                                                             (line 2019)
* yrange:                                Functions and Variables for draw.
                                                             (line 2037)
* yrange_secondary:                      Functions and Variables for draw.
                                                             (line 2057)
* ytics:                                 Functions and Variables for draw.
                                                             (line 2084)
* ytics_axis:                            Functions and Variables for draw.
                                                             (line 2092)
* ytics_rotate:                          Functions and Variables for draw.
                                                             (line 2102)
* ytics_rotate_secondary:                Functions and Variables for draw.
                                                             (line 2111)
* ytics_secondary:                       Functions and Variables for draw.
                                                             (line 2120)
* ytics_secondary_axis:                  Functions and Variables for draw.
                                                             (line 2128)
* yv_grid:                               Functions and Variables for draw.
                                                             (line 2138)
* y_voxel:                               Functions and Variables for draw.
                                                             (line 1919)
* z:                                     Plotting Options.   (line  283)
* zaxis:                                 Functions and Variables for draw.
                                                             (line 2162)
* zaxis_color:                           Functions and Variables for draw.
                                                             (line 2181)
* zaxis_type:                            Functions and Variables for draw.
                                                             (line 2201)
* zaxis_width:                           Functions and Variables for draw.
                                                             (line 2220)
* Zeilberger:                            Functions and Variables for zeilberger.
                                                             (line   74)
* zeroa:                                 Functions and Variables for Constants.
                                                             (line  119)
* zerob:                                 Functions and Variables for Constants.
                                                             (line  135)
* zerobern:                              Functions and Variables for Number Theory.
                                                             (line  430)
* zeroequiv:                             Functions and Variables for Predicates.
                                                             (line  217)
* zerofor:                               Functions and Variables for linearalgebra.
                                                             (line  592)
* zerofor <1>:                           Functions and Variables for linearalgebra.
                                                             (line  593)
* zeromatrix:                            Functions and Variables for Matrices and Linear Algebra.
                                                             (line 1232)
* zeromatrixp:                           Functions and Variables for linearalgebra.
                                                             (line  604)
* zeta:                                  Functions and Variables for Number Theory.
                                                             (line  436)
* zeta%pi:                               Functions and Variables for Number Theory.
                                                             (line  465)
* zlabel:                                Plotting Options.   (line  287)
* zlabel <1>:                            Functions and Variables for draw.
                                                             (line 2239)
* zlange:                                Functions and Variables for lapack.
                                                             (line  261)
* zrange:                                Functions and Variables for draw.
                                                             (line 2258)
* ztics:                                 Functions and Variables for draw.
                                                             (line 2279)
* ztics_axis:                            Functions and Variables for draw.
                                                             (line 2287)
* ztics_rotate:                          Functions and Variables for draw.
                                                             (line 2297)
* z_voxel:                               Functions and Variables for draw.
                                                             (line 2156)
* かけ算:                                Arithmetic operators.
                                                             (line    9)
* べき乗:                                Arithmetic operators.
                                                             (line   11)
* クォートクォート演算子:                Functions and Variables for Evaluation.
                                                             (line   97)
* クォート演算子:                        Functions and Variables for Evaluation.
                                                             (line    7)
* マクロ関数定義の演算子:                Assignment operators.
                                                             (line  112)
* 不等号（構文的不等号）:                Operators for Equations.
                                                             (line    7)
* 二重階乗:                              Combinatorial Functions.
                                                             (line    7)
* 以上:                                  Relational operators.
                                                             (line    9)
* 以下:                                  Relational operators.
                                                             (line    8)
* 割り当て演算子:                        Assignment operators.
                                                             (line    7)
* 割り当て演算子 (左辺を評価する):       Assignment operators.
                                                             (line   86)
* 割り算:                                Arithmetic operators.
                                                             (line   10)
* 大なり:                                Relational operators.
                                                             (line   10)
* 小なり:                                Relational operators.
                                                             (line    7)
* 引き算:                                Arithmetic operators.
                                                             (line    8)
* 等号 (構文法的に等しい):               Operators for Equations.
                                                             (line   29)
* 等式演算子:                            Operators for Equations.
                                                             (line   29)
* 論理否定:                              Logical operators.  (line   28)
* 論理和:                                Logical operators.  (line   41)
* 論理積:                                Logical operators.  (line    7)
* 足し算:                                Arithmetic operators.
                                                             (line    7)
* 関数定義演算子:                        Assignment operators.
                                                             (line  183)
* 階乗:                                  Combinatorial Functions.
                                                             (line   51)
* 非可換かけ算:                          Arithmetic operators.
                                                             (line  198)
* 非可換べき乗:                          Arithmetic operators.
                                                             (line  181)

