This is maxima.info, produced by makeinfo version 5.1 from maxima.texi.


File: maxima.info,  Node: opsubst,  Next: orthopoly,  Prev: numericalio,  Up: Top

60 opsubst
**********

* Menu:

* Definições para  opsubst::


File: maxima.info,  Node: Definições para opsubst,  Prev: opsubst,  Up: opsubst

60.1 Definições para opsubst
============================

 -- Função: opsubst (<f>,<g>,<e>)
 -- Função: opsubst (<g>=<f>,<e>)
 -- Função: opsubst ([<g1>=<f1>,<g2>=<f2>,..., <gn>=<fn>],<e>)
     A função ‘opsubst’ similar à função ‘subst’, excepto que ‘opsubst’
     somente faz substituições para as operações em uma expressões.  Em
     geral, quando <f> for um operador em uma expressão <e>, substitui
     <g> por <f> na expressão <e>.

     Para determinar o operador, ‘opsubst’ escolhe ‘inflag’ para
     verdadeiro ( true ).  Isso significa que ‘opsubst’ substitui para a
     forma de operador interna, não para a mostrada, na expressão.

     Exemplos:
          (%i1) load ("opsubst")$

          (%i2) opsubst(f,g,g(g(x)));
          (%o2)                     f(f(x))
          (%i3) opsubst(f,g,g(g));
          (%o3)                       f(g)
          (%i4) opsubst(f,g[x],g[x](z));
          (%o4)                       f(z)
          (%i5) opsubst(g[x],f, f(z));
          (%o5)                      g (z)
                                      x
          (%i6) opsubst(tan, sin, sin(sin));
          (%o6)                     tan(sin)
          (%i7) opsubst([f=g,g=h],f(x));
          (%o7)                       h(x)

     Internamente, Maxima não usa os operadores de negação unária,
     divisão, ou de subtração; dessa forma:
          (%i8) opsubst("+","-",a-b);
          (%o8)                     a - b
          (%i9) opsubst("f","-",-a);
          (%o9)                      - a
          (%i10) opsubst("^^","/",a/b);
                                       a
          (%o10)                       -
                                       b

     A representação interna de -a*b é *(-1,a,b); dessa forma
          (%i11) opsubst("[","*", -a*b);
          (%o11)                  [- 1, a, b]

     Quando o operador não for um símbolo Maxima, geralmente alguma
     outra função sinalizará um erro:
          (%i12) opsubst(a+b,f, f(x));

          Improper name or value in functional position:
          b + a
           -- an error.  Quitting.  To debug this try debugmode(true);

     Todavia, operadores subscritos são permitidos:
          (%i13) opsubst(g[5],f, f(x));
          (%o13)                     g (x)
                                      5

     Para usar essa função escreva primeiramente ‘load("opsubst")’.


File: maxima.info,  Node: orthopoly,  Next: plotdf,  Prev: opsubst,  Up: Top

61 orthopoly
************

* Menu:

* Introdução a polinómios ortogonais::
* Definições para polinómios ortogonais::


File: maxima.info,  Node: Introdução a polinómios ortogonais,  Next: Definições para polinómios ortogonais,  Prev: orthopoly,  Up: orthopoly

61.1 Introdução a polinómios ortogonais
=======================================

‘orthopoly’ é um pacote para avaliação simbólica e numérica de muitos
tipos de polinómios ortogonais, incluindo polinómios de Chebyshev,
Laguerre, Hermite, Jacobi, Legendre, e ultraesférico (Gegenbauer).
Adicionalmentey, ‘orthopoly’ inclui suporte funções esféricas segundo o
critério de Bessel, esféricas segundo o critério de Hankel, e funções
harmônica esféricas.

Em sua maior parte, ‘orthopoly’ segue as convenções de Abramowitz e
Stegun Handbook of Mathematical Functions, Chapter 22 (10th printing,
December 1972); adicionalmente, usamos Gradshteyn e Ryzhik, Table of
Integrals, Series, and Products (1980 corrected and enlarged edition), e
Eugen Merzbacher Quantum Mechanics (2nd edition, 1970).

Barton Willis da University de Nebraska e Kearney (UNK) escreveu o
pacote ‘orthopoly’ e sua documetação.  O pacote é liberado segundo a
licença pública geral GNU (GPL).

61.1.1 Iniciando com orthopoly
------------------------------

‘load ("orthopoly")’ torna o pacote ‘orthopoly’ disponível para uso.

Para encontrar o polinómio de Legendre de terceira ordem,

     (%i1) legendre_p (3, x);
                           3             2
                  5 (1 - x)    15 (1 - x)
     (%o1)      - ---------- + ----------- - 6 (1 - x) + 1
                      2             2

Para expressar esse polinómio como uma soma de potências de <x>, aplique
<ratsimp> ou <rat> para o resultado anterior.

     (%i2) [ratsimp (%), rat (%)];
                             3           3
                          5 x  - 3 x  5 x  - 3 x
     (%o2)/R/            [----------, ----------]
                              2           2

Alternativamente, faça o segundo argumento para ‘legendre_p’ (sua
variável “principal”) uma expressão racional canónica (CRE) usando
‘rat(x)’ em lugar de somente ‘x’.

     (%i1) legendre_p (3, rat (x));
                                   3
                                5 x  - 3 x
     (%o1)/R/                   ----------
                                    2

Para avaliação em ponto flutuante, ‘orthopoly’ usa uma análise de erro
durante a execução para estimar uma associação superior para o erro.
Por exemplo,

     (%i1) jacobi_p (150, 2, 3, 0.2);
     (%o1) interval(- 0.062017037936715, 1.533267919277521E-11)

intervalos possuem a forma ‘interval (<c>, <r>)’, onde <c> é o centro e
<r> é o raio do intervalo.  Uma vez que Maxima não suporta aritmética
sobre intervalos, em algumas situações, tais como em gráficos, vai
querer suprimir o erro e sair somente com o centro do intervalo.  Para
fazer isso, escolha a variável de opção ‘orthopoly_returns_intervals’
para ‘false’.

     (%i1) orthopoly_returns_intervals : false;
     (%o1)                         false
     (%i2) jacobi_p (150, 2, 3, 0.2);
     (%o2)                  - 0.062017037936715

Veja a secção *note Avaliação em Ponto Flutuante:: para maiores
informações.

Muitas funções em ‘orthopoly’ possuem uma propriedade ‘gradef’; dessa
forma

     (%i1) diff (hermite (n, x), x);
     (%o1)                     2 n H     (x)
                                    n - 1
     (%i2) diff (gen_laguerre (n, a, x), x);
                   (a)               (a)
                n L   (x) - (n + a) L     (x) unit_step(n)
                   n                 n - 1
     (%o2)      ------------------------------------------
                                    x

A função de um único passo no segundo exemplo previne um erro que
poderia de outra forma surgir através da avaliação de <n> para 0.

     (%i3) ev (%, n = 0);
     (%o3)                           0

A propriedade ‘gradef’ somente aplica para a variável “principal”;
dderivadas com relação a outros argumentos usualmente resultam em uma
mensagem de erro; por exemplo

     (%i1) diff (hermite (n, x), x);
     (%o1)                     2 n H     (x)
                                    n - 1
     (%i2) diff (hermite (n, x), n);

     Maxima doesn't know the derivative of hermite with respect the first argument
      -- an error.  Quitting.  To debug this try debugmode(true);

Geralmente, funções em ‘orthopoly’ mapeiam sobre listas e matrizes.
Para o mapeamento para avaliação total, as variáveis de opção
‘doallmxops’ e ‘listarith’ devem ambas serem ‘true’ (o valor padrão).
Para ilustrar o mapeamento sobre matrizes, considere

     (%i1) hermite (2, x);
                                          2
     (%o1)                    - 2 (1 - 2 x )
     (%i2) m : matrix ([0, x], [y, 0]);
                                 [ 0  x ]
     (%o2)                       [      ]
                                 [ y  0 ]
     (%i3) hermite (2, m);
                    [                             2  ]
                    [      - 2        - 2 (1 - 2 x ) ]
     (%o3)          [                                ]
                    [             2                  ]
                    [ - 2 (1 - 2 y )       - 2       ]

No segundo exemplo, o elemento ‘i, j’ do valor é ‘hermite (2, m[i,j])’;
isso não é o mesmo que calcular ‘-2 + 4 m . m’, como visto no próximo
exemplo.

     (%i4) -2 * matrix ([1, 0], [0, 1]) + 4 * m . m;
                         [ 4 x y - 2      0     ]
     (%o4)               [                      ]
                         [     0      4 x y - 2 ]

Se avaliar uma função em um ponto fora do seu domínio, geralmente
‘orthopoly’ retorna uma função não avaliada.  Por exemplo,

     (%i1) legendre_p (2/3, x);
     (%o1)                        P   (x)
                                   2/3

‘orthopoly’ suporta tradução em TeX; ‘orthopoly’ também faz saídas
bidimensionais em um terminal.

     (%i1) spherical_harmonic (l, m, theta, phi);
                               m
     (%o1)                    Y (theta, phi)
                               l
     (%i2) tex (%);
     $$Y_{l}^{m}\left(\vartheta,\varphi\right)$$
     (%o2)                         false
     (%i3) jacobi_p (n, a, a - b, x/2);
                               (a, a - b) x
     (%o3)                    P          (-)
                               n          2
     (%i4) tex (%);
     $$P_{n}^{\left(a,a-b\right)}\left({{x}\over{2}}\right)$$
     (%o4)                         false

61.1.2 Limitations
------------------

Quando uma expressão envolve muitos polinómios ortogonais com ordens
simbólicas, é possível que a expressão actualmente tenda para zero, e
ainda ocorre também que Maxima estar incapacitado de simplificar essa
expressão para zero.  Se fizer uma divisão por tal quantidade que tende
a zero, poderá ficar em apuros.  Por exemplo, a seguinte expressão tende
para zero para inteiros <n> maiores que 1, e ainda ocorre também que
Maxima está incapacitado de simplificar essa expressão para zero.

     (%i1) (2*n - 1) * legendre_p (n - 1, x) * x - n * legendre_p (n, x) + (1 - n) * legendre_p (n - 2, x);
     (%o1)  (2 n - 1) P     (x) x - n P (x) + (1 - n) P     (x)
                       n - 1           n               n - 2

Para um <n> específico, podemos reduzir a expressão a zero.

     (%i2) ev (% ,n = 10, ratsimp);
     (%o2)                           0

Geralmente, a forma polinomial de um polinómio ortogonal esteja adequada
de forma hostil para avaliaçao em ponto flutuante.  Aqui está um
exemplo.

     (%i1) p : jacobi_p (100, 2, 3, x)$

     (%i2) subst (0.2, x, p);
     (%o2)                3.4442767023833592E+35
     (%i3) jacobi_p (100, 2, 3, 0.2);
     (%o3)  interval(0.18413609135169, 6.8990300925815987E-12)
     (%i4) float(jacobi_p (100, 2, 3, 2/10));
     (%o4)                   0.18413609135169

O verdadeiro valor está em torno de 0.184; ess calculo suporta erro de
cancelamento por extremo subtrativo.Expandindo o polinómio e então
avaliando, fornecendo um melhor resultado.
     (%i5) p : expand(p)$
     (%i6) subst (0.2, x, p);
     (%o6) 0.18413609766122982

Essa não é uma regra geral; expandindo o polinómio não resulta sempre em
expressões que são melhores adaptadas a avaliação numérica.  Com grande
folga, o melhor caminho para fazer avaliação numérica é fazer um ou mais
argumentos da função serem números em ponto flutuante.  Em função disso,
algoritmos especializados em ponto flutuante são usados para avaliação.

A função ‘float’ do Maxima é até certo ponto indiscriminada; se aplicar
‘float’ a uma expressão envolvendo um polinómio ortogonal com um grau
simbólico ou um parâmetro de ordem, esses parâmetos (inteiros) podem ser
convertido em números em ponto flutuante; após o que, a expressão não
irá avaliar completamente.  Considere

     (%i1) assoc_legendre_p (n, 1, x);
                                    1
     (%o1)                         P (x)
                                    n
     (%i2) float (%);
                                   1.0
     (%o2)                        P   (x)
                                   n
     (%i3) ev (%, n=2, x=0.9);
                                  1.0
     (%o3)                       P   (0.9)
                                  2

A expressão em (%o3) não irá avaliar para um número em ponto flutuante;
‘orthopoly’ não reconhece valores em ponto flutuante em lugares onde
deve haver valores inteiros.  Similarmente, avaliação numérica da função
‘pochhammer’ para ordens que excedam ‘pochhammer_max_index’ pode ser
perturbador; considere

     (%i1) x :  pochhammer (1, 10), pochhammer_max_index : 5;
     (%o1)                         (1)
                                      10

Aplicando ‘float’ não avalia <x> para um número em ponto flutuante

     (%i2) float (x);
     (%o2)                       (1.0)
                                      10.0

Para avaliar <x> para um número em ponto flutuante, irá precisar
associar ‘pochhammer_max_index’ a 11 ou mais e aplicar ‘float’ a <x>.

     (%i3) float (x), pochhammer_max_index : 11;
     (%o3)                       3628800.0

O valor padrão de ‘pochhammer_max_index’ é 100; modifique esse valor
após chama ‘orthopoly’.

Finalmente, tenha consciência que os livros citados nas referências
adotam diferentes definições de polinómios ortogonais; geralmente
adotamos as convenções citadas nas convenções de Abramowitz e Stegun.

Antes de suspeitar de um erro no pacote ‘orthopoly’, verifique alguns
casos especiais para determinar se suas definições coincidem com aquelas
usadas por ‘orthopoly’.  Definitions muitas vezes diferem por uma
normalização; ocasionalmente, autores utilizam versões “modificadas” das
funções que fazem a família ortogonal sobre um intervalo diferente do
intervalo (-1, 1).  Para definir, por exemplo, um polinómio de Legendre
que é ortogonal a (0, 1), defina

     (%i1) shifted_legendre_p (n, x) := legendre_p (n, 2*x - 1)$

     (%i2) shifted_legendre_p (2, rat (x));
                                 2
     (%o2)/R/                 6 x  - 6 x + 1
     (%i3) legendre_p (2, rat (x));
                                    2
                                 3 x  - 1
     (%o3)/R/                    --------
                                    2

61.1.3 Avaliação em Ponto Flutuante
-----------------------------------

Muitas funções em ‘orthopoly’ utilizam análise de erro durante a
execução para estimar o erro em avaliações em ponto flutuante; as
exceções são funções de Bessel esféricas e os polinómios associados de
Legendre do segundo tipo.  Para avaliações numéricas, as funções de
Bessel esféricas chamam funções da colecção de programas ‘SLATEC’.
Nenhum método especializado é usado para avaliação numérica dos
polinómios associados de Legendre do segundo tipo.

A análise de erro durante a execução ignora erros que são de segunda
ordem ou maior na máquina (também conhecida como perda de algarismos).
A análise de erro durante a execução também ignora alguns poucos outros
tipos de erro.  É possível (embora não provável) que o erro actual
exceda o estimado.

Intervalos possuem a forma ‘interval (<c>, <r>)’, onde <c> é o centro do
intervalo e <r> é seu raio.  O centro de um intervalo pode sr um número
complexo, e o raio é sempre um número real positivo.

Aqui está um exemplo.

     (%i1) fpprec : 50$

     (%i2) y0 : jacobi_p (100, 2, 3, 0.2);
     (%o2) interval(0.1841360913516871, 6.8990300925815987E-12)
     (%i3) y1 : bfloat (jacobi_p (100, 2, 3, 1/5));
     (%o3) 1.8413609135168563091370224958913493690868904463668b-1

Vamos testar o quanto o erro actual é é menor que o erro estimado

     (%i4) is (abs (part (y0, 1) - y1) < part (y0, 2));
     (%o4)                         true

Realmente, por esse exemplo o erro estimado é um maior que o erro
verdadeiro.

Maxima não suporta aritmética sobre intervalos.

     (%i1) legendre_p (7, 0.1) + legendre_p (8, 0.1);
     (%o1) interval(0.18032072148437508, 3.1477135311021797E-15)
             + interval(- 0.19949294375000004, 3.3769353084291579E-15)

Um utilizador pode definir operadores aritméticos que fazem matemática
de intervalos.  Para definir adição de intervalos, podemos definir

     (%i1) infix ("@+")$

     (%i2) "@+"(x,y) := interval (part (x, 1) + part (y, 1), part (x, 2) + part (y, 2))$

     (%i3) legendre_p (7, 0.1) @+ legendre_p (8, 0.1);
     (%o3) interval(- 0.019172222265624955, 6.5246488395313372E-15)

As rotinas eseciais em ponto flutuante são chamadas quando os argumentos
forem complexos.  Por exemplo,

     (%i1) legendre_p (10, 2 + 3.0*%i);
     (%o1) interval(- 3.876378825E+7 %i - 6.0787748E+7,
                                                1.2089173052721777E-6)

Let’s compare this to the true value.

     (%i1) float (expand (legendre_p (10, 2 + 3*%i)));
     (%o1)          - 3.876378825E+7 %i - 6.0787748E+7

Adicionalmente, quando os argumentos forem grandes números em ponto
flutuante, as rotinas especiais de ponto flutuante são chamadas;
todavia, tos grandes números em ponto flutuante são convertidos para
números em ponto flutuante de dupla precisão e o resultado final é
número em ponto flutuante de precisão dupla.

     (%i1) ultraspherical (150, 0.5b0, 0.9b0);
     (%o1) interval(- 0.043009481257265, 3.3750051301228864E-14)

61.1.4 Gráficos e ‘orthopoly’
-----------------------------

Para desenhar gráficos de expressões que envolvem polinómios ortogonais,
deverá fazer duas coisas:
  1. Escolher a variável de opção ‘orthopoly_returns_intervals’ para
     ‘false’,
  2. Colocar apóstrofo em qualquer chamada a funções do pacote
     ‘orthopoly’.
Se chamadas a funções não receberem apóstrofo, Maxima irá avaliá-las
para polinómios antes de montar o gráfico; consequêntemente, as rotinas
especializadas em ponto flutuante não serão chamadas.  Aqui está um
exemplo de como montar o gráfico de uma expressão que envolve um
polinómio de Legendre.

     (%i1) plot2d ('(legendre_p (5, x)), [x, 0, 1]), orthopoly_returns_intervals : false;
     (%o1)

A expressão completa ‘legendre_p (5, x)’ recebe apóstrofo; isso é
diferente de apenas colocar apóstrofo no nome da função usando
‘'legendre_p (5, <x>)’.

61.1.5 Funções Diversas
-----------------------

O pacote ‘orthopoly’ define o síbolo de Pochhammer e uma função de passo
de unidade.  ‘orthopoly’ utiliza a função delta de Kronecker e a função
de passo de unidade em declarações ‘gradef’.

Para converter os símbolos Pochhammer em quocientes da funções gama, use
‘makegamma’.

     (%i1) makegamma (pochhammer (x, n));
                               gamma(x + n)
     (%o1)                     ------------
                                 gamma(x)
     (%i2) makegamma (pochhammer (1/2, 1/2));
                                     1
     (%o2)                       ---------
                                 sqrt(%pi)

Derivadas de símbolos de Pochhammer são fornecidas em termos de ‘psi’
function.

     (%i1) diff (pochhammer (x, n), x);
     (%o1)             (x)  (psi (x + n) - psi (x))
                          n     0             0
     (%i2) diff (pochhammer (x, n), n);
     (%o2)                   (x)  psi (x + n)
                                n    0

É preciso ser cuidadoso com expressões como (%o1); a diferença das
funções ‘psi’ possuem polinómios quando ‘<x> = -1, -2, .., -<n>’.  Esses
polinómios cacelam-se com factores em ‘pochhammer (<x>, <n>)’ fazendo da
derivada um polinómio de grau ‘<n> - 1’ quando <n> for um inteiro
positivo.

O símbolo de Pochhammer é definido de ordens negativas até sua
representação como um quociente de funções gama.  Considere

     (%i1) q : makegamma (pochhammer (x, n));
                               gamma(x + n)
     (%o1)                     ------------
                                 gamma(x)
     (%i2) sublis ([x=11/3, n= -6], q);
                                    729
     (%o2)                        - ----
                                    2240

Alternativamente, podemos tomar ese resultado directamente.

     (%i1) pochhammer (11/3, -6);
                                    729
     (%o1)                        - ----
                                    2240

A função passo de unidade é contínua à esquerda; dessa forma

     (%i1) [unit_step (-1/10), unit_step (0), unit_step (1/10)];
     (%o1)                       [0, 0, 1]

Se precisar de uma função de degrau unitário que seja ou contínua à
esquerda ou contínua à direita do zero, defina a sua própria função
usando ‘signum’; por exemplo,

     (%i1) xunit_step (x) := (1 + signum (x))/2$

     (%i2) [xunit_step (-1/10), xunit_step (0), xunit_step (1/10)];
                                     1
     (%o2)                       [0, -, 1]
                                     2

Não redefina a própria ‘unit_step’; alguns código em ‘orthopoly’
requerem que a função de passo de unidade seja contínua à esquerda.

61.1.6 Algorítmos
-----------------

Geralmente, ‘orthopoly’ faz avaliações simbólicas pelo uso de uma
representação hipergeométrica de polinómios ortogonais.  As funções
hipegeométricas são avaliadas usando as funções (não documetadas)
‘hypergeo11’ e ‘hypergeo21’.  As excessões são as funções de Bessel
metade inteiras e a função de Legendre associada de segundo tipo.  As
funções de Bessel metade inteiras são avaliadas usando uma representação
explícita, e a função de Legendre associada de segundo tipo é avaliada
usando recursividade.

Para avaliação em ponto flutuante, nós novamente convertemos muitas
fuções em uma forma hipergeométrica; nós avaliamos as funções
hipergeométricas usando recursividade para frente.  Novamente, as
excessões são as funções de Bessel metade inteiras e a função de
Legendre associada de segundo tipo.  Numericamente, as funções de Bessel
meio inteiras são avaliadas usando o código SLATEC.


File: maxima.info,  Node: Definições para polinómios ortogonais,  Prev: Introdução a polinómios ortogonais,  Up: orthopoly

61.2 Definições para polinómios ortogonais
==========================================

 -- Função: assoc_legendre_p (<n>, <m>, <x>)
     As funções de Legendre associadas de primeiro tipo.

     Referência: Abramowitz e Stegun, equações 22.5.37, página 779,
     8.6.6 (segunda equação), página 334, e 8.2.5, página 333.

 -- Função: assoc_legendre_q (<n>, <m>, <x>)
     A função de Legendre associada de segundo tipo.

     Referência: Abramowitz e Stegun, equação 8.5.3 e 8.1.8.

 -- Função: chebyshev_t (<n>, <x>)
     A função de Chebyshev de primeiro tipo.

     Referência: Abramowitz e Stegun, equação 22.5.47,página 779.

 -- Função: chebyshev_u (<n>, <x>)
     A função de Chebyshev do segundo tipo.

     Referência: Abramowitz e Stegun, equação 22.5.48,página 779.

 -- Função: gen_laguerre (<n>, <a>, <x>)
     O poliômio generalizado de Laguerre.

     Referência: Abramowitz e Stegun, equação 22.5.54,página 780.

 -- Função: hermite (<n>, <x>)
     O polinómio de Hermite.

     Referência: Abramowitz e Stegun, equação 22.5.55,página 780.

 -- Função: intervalp (<e>)
     Retorna ‘true’ se a entrada for um intervalo e retorna ‘false’ se
     não for.

 -- Função: jacobi_p (<n>, <a>, <b>, <x>)
     o polinómio de Jacobi.

     Os polinómios de Jacobi são actualmente definidos para todo <a> e
     <b>; todavia, o peso do polinómio de Jacobi ‘(1 - <x>)^<a> (1 +
     <x>)^<b>’ não é integrável para ‘<a> <= -1’ ou ‘<b> <= -1’.

     Referência: Abramowitz e Stegun, equação 22.5.42,página 779.

 -- Função: laguerre (<n>, <x>)
     O polinómio de Laguerre.

     Referência: Abramowitz e Stegun, equatções 22.5.16 e 22.5.54,página
     780.

 -- Função: legendre_p (<n>, <x>)
     O polinómio de Legendre de primeiro tipo.

     Referência: Abramowitz e Stegun, equações 22.5.50 e 22.5.51,página
     779.

 -- Função: legendre_q (<n>, <x>)
     O polinómio de Legendre de primeiro tipo.

     Referência: Abramowitz e Stegun, equações 8.5.3 e 8.1.8.

 -- Função: orthopoly_recur (<f>, <args>)
     Retorna uma relação recursiva para a família de funções ortogonais
     <f> com argumentos <args>.  A recursividade é com relação ao grau
     do polinómio.

          (%i1) orthopoly_recur (legendre_p, [n, x]);
                          (2 n - 1) P     (x) x + (1 - n) P     (x)
                                     n - 1                 n - 2
          (%o1)   P (x) = -----------------------------------------
                   n                          n

     O segundo argumento a ‘orthopoly_recur’ deve ser uma lista com o
     número correcto de argumentos para a função <f>; se o número de
     argumentos não for o correcto, Maxima sinaliza com um erro.

          (%i1) orthopoly_recur (jacobi_p, [n, x]);

          Function jacobi_p needs 4 arguments, instead it received 2
           -- an error.  Quitting.  To debug this try debugmode(true);

     Adicionalmente, quando <f> não for o nome de uma das famílias de
     polinómios ortogonais, um erro é sinalizado.

          (%i1) orthopoly_recur (foo, [n, x]);

          A recursion relation for foo isn't known to Maxima
           -- an error.  Quitting.  To debug this try debugmode(true);

 -- Variable: orthopoly_returns_intervals
     Valor por omissão: ‘true’

     Quando ‘orthopoly_returns_intervals’ for ‘true’, resultados em
     ponto flutuante são retornados na forma ‘interval (<c>, <r>)’, onde
     <c> é o centro de um intervalo e <r> é seu raio.  O centro pode ser
     um número complexo; nesse caso, o intervalo é um disco no plano
     complexo.

 -- Função: orthopoly_weight (<f>, <args>)

     Retorna uma lista de três elementos; o primeiro elemento é a
     fórmula do peso para a família de polinómios ortogonais <f> com
     argumentos fornecidos pela lista <args>; os segundos e terceiros
     elementos fornecem os pontos finais inferior e superior do
     intervalo de ortogonalidade.  Por exemplo,

          (%i1) w : orthopoly_weight (hermite, [n, x]);
                                      2
                                   - x
          (%o1)                 [%e    , - inf, inf]
          (%i2) integrate (w[1] * hermite (3, x) * hermite (2, x), x, w[2], w[3]);
          (%o2)                           0

     A variável principal de <f> deve ser um símbolo; Se não for, Maxima
     sinaliza com um erro.

 -- Função: pochhammer (<n>, <x>)
     O símbolo de Pochhammer.  Para inteiros não negativos <n> com ‘<n>
     <= pochhammer_max_index’, a expressão ‘pochhammer (<x>, <n>)’
     avalia para o produto ‘<x> (<x> + 1) (<x> + 2) ... (<x> + n - 1)’
     when ‘<n> > 0’ e para 1 quando ‘<n> = 0’.  Para valores negativos
     de <n>, ‘pochhammer (<x>, <n>)’ é definido como ‘(-1)^<n> /
     pochhammer (1 - <x>, -<n>)’.  Dessa forma

          (%i1) pochhammer (x, 3);
          (%o1)                   x (x + 1) (x + 2)
          (%i2) pochhammer (x, -3);
                                           1
          (%o2)               - -----------------------
                                (1 - x) (2 - x) (3 - x)

     Para converter um símbolo de Pochhammer em um quociente de funções
     gama, (veja Abramowitz e Stegun, equação 6.1.22) use ‘makegamma’;
     por exemplo

          (%i1) makegamma (pochhammer (x, n));
                                    gamma(x + n)
          (%o1)                     ------------
                                      gamma(x)

     Quando <n> exceder ‘pochhammer_max_index’ ou quando <n> for
     simbólico, ‘pochhammer’ retorna uma forma substantiva.

          (%i1) pochhammer (x, n);
          (%o1)                         (x)
                                           n

 -- Variável: pochhammer_max_index
     Valor por omissão: 100

     ‘pochhammer (<n>, <x>)’ expande para um produto se e somente se
     ‘<n> <= pochhammer_max_index’.

     Exemplos:

          (%i1) pochhammer (x, 3), pochhammer_max_index : 3;
          (%o1)                   x (x + 1) (x + 2)
          (%i2) pochhammer (x, 4), pochhammer_max_index : 3;
          (%o2)                         (x)
                                           4

     Referência: Abramowitz e Stegun, equação 6.1.16,página 256.

 -- Função: spherical_bessel_j (<n>, <x>)
     A Função de Bessel esférica de primeiro tipo.

     Referência: Abramowitz e Stegun, equações 10.1.8,página 437 e
     10.1.15,página 439.

 -- Função: spherical_bessel_y (<n>, <x>)
     A Função de Bessel esférica de segundo tipo.

     Referência: Abramowitz e Stegun, equações 10.1.9,página 437 e
     10.1.15,página 439.

 -- Função: spherical_hankel1 (<n>, <x>)
     A Função de Hankel esférica de primeiro tipo.

     Referência: Abramowitz e Stegun, equação 10.1.36,página 439.

 -- Função: spherical_hankel2 (<n>, <x>)
     A Função de Hankel esférica de segundo tipo.

     Referência: Abramowitz e Stegun, equação 10.1.17,página 439.

 -- Função: spherical_harmonic (<n>, <m>, <x>, <y>)
     A função armônica esférica.

     Referência: Merzbacher 9.64.

 -- Função: unit_step (<x>)
     A função de passo de unidade contínua à esquerda; dessa forma
     ‘unit_step (<x>)’ tende para ‘<x> <= 0’ e é igual a 1 para ‘<x> >
     0’.

     Se quiser uma função de degrau unitário que tome o valor 1/2 em
     zero, use ‘(1 + signum (<x>))/2’.

 -- Função: ultraspherical (<n>, <a>, <x>)
     A função polinômial ultraesférica (também conhecida como função
     polinomial de Gegenbauer).

     Referência: Abramowitz e Stegun, equação 22.5.46,página 779.


File: maxima.info,  Node: plotdf,  Next: romberg,  Prev: orthopoly,  Up: Top

62 plotdf
*********

* Menu:

* Introdução a plotdf::
* Definições para plotdf::


File: maxima.info,  Node: Introdução a plotdf,  Next: Definições para plotdf,  Prev: plotdf,  Up: plotdf

62.1 Introdução a plotdf
========================

A função ‘plotdf’ cria um gráfico do campo de direcções para uma Equação
Diferencial Ordinária (EDO) de primeira ordem, ou para um sistema de
duas EDO’s autónomas, de primeira ordem.

Por tratar-se de um pacote adicional, para poder usá-lo deverá primeiro
carregá-lo com o comando ‘load("plotdf")’.  Também é necessário que
Xmaxima esteja instalado, inclusivamente se executar o Maxima desde
outra interface diferente.

Para desenhar o campo de direcções de uma única EDO, essa equação deverá
escrever-se na forma seguinte:
            dy
            -- = F(x,y)
            dx

e a função <F> será dada como argumento para o comando ‘plotdf’.  A
variável independente tem que ser sempre <x> e a variável dependente
<y>.  A essas duas variáveis não poderá estar associado nenhum valor
numérico.

Para desenhar o campo de direcções de um sistema autónomo de duas EDO’s,
as duas equações devem ser escritas na forma seguinte
            dx             dy
            -- = G(x,y)    -- = F(x,y)
            dt             dt

e o argumento para o comando ‘plotdf’ será uma lista com duas expressões
para as funções <F> e <G>.

Quando se trabalha com uma única equação, ‘plotdf’ assume implicitamente
que ‘x=t’ e ‘G(x,y)=1’, transformando a equação num sistema autónomo com
duas equações.


File: maxima.info,  Node: Definições para plotdf,  Prev: Introdução a plotdf,  Up: plotdf

62.2 Definições para plotdf
===========================

 -- Function: plotdf (<dydx>,...opções...)
 -- Function: plotdf (‘[’<dxdt>,<dydt>‘]’,...opções...)

     Desenha um campo de direcções em duas dimensões <x> e <y>.

     <dydx>, <dxdt> e <dydt> são expressões que dependem de <x> e <y>.
     Para além dessas duas variáveis, as duas expressões podem depender
     de um conjunto de parâmetros, com valores numéricos que são dados
     por meio da opção ‘parameters’ (a sintaxe dessa opção explica-se
     mais para a frente), ou com um intervalo de possíveis valores
     definidos com a opção <sliders>.

     Várias outras opções podem incluirem-se dentro do comando, ou serem
     seleccionadas no menú.  Clicando num ponto do gráfico faz com que
     seja desenhada a curva integral que passa por esse ponto; o mesmo
     pode ser feito dando as coordenadas do ponto com a opção
     ‘trajectory_at’ dentro do comando plotdf.  A direcção de integração
     pode controlar-se com a opção ‘direction’, que aceita valores de
     _forward_, _backward_ ou _both_.  O número de passos realizados na
     integração numérica controla-se com a opção ‘nsteps’ e o incremento
     do tempo em cada passo com a opção ‘tstep’.  Usa-se o método de
     Adams Moulton para fazer a integração numérica; também é possível
     mudar para o método de Runge-Kutta de quarta ordem com ajuste de
     passos.

     Menú da janela do gráfico:

     O menú da janela gráfica inclui as seguintes opções: _Zoom_, que
     permite mudar o comportamento do rato, de maneira que servirá para
     fazer zoom na região do gráfico clicando com o botão esquerdo.
     Cada clic alarga a imagem mantendo no centro dela o ponto onde se
     clicou.  Mantendo carregada a tecla <Shift> enquanto se faz clic,
     faz diminuir o tamanho.  Para continuar a desenhar trajectórias com
     um clic, selecciona-se a opção _Integrate_ do menú.

     A opção _Config_ do menú pode usar-se para mudar a(s) EDO(S) e
     fazer alguns outros ajustes.  Após ter feito alguma alteração,
     deverá usar a opção _Replot_ para activar as novas configurações.
     Se introduzir duas coordenadas no campo _Trajectory at_ do menú de
     diálogo do _Config_, e a seguir carregar na tecla <Enter>, será
     acrescentada mais uma curva integral.  Se seleccionar a opção
     _Replot_, só será apresentada a última curva integral seleccionada.

     Mantendo o botão direito carregado enquanto se desloca o cursor,
     poderá arrastar o gráfico na horizontal e na vertical.  Outros
     parâmetros, por exemplo, o número de passos, o valor inicial de
     <t>, as coordenadas do centro e o raio, podem ser alterados no
     sub-menú da opção _Config_.

     Com a opção _Save_, pode imprimir-se o gráfico numa impressora
     Postscript ou gravar uma cópia num ficheiro Postscript.  Para optar
     entre impressão ou gravação em ficheiro, selecciona-se _Print
     Options_ na janela de diálogo de _Config_.  Após ter preenchido os
     campos da janela de diálogo de _Save_, será necessário seleccionar
     a opção _Save_ do primeiro menú para criar o ficheiro ou imprimir o
     gráfico.

     Opções gráficas:

     A função ‘plotdf’ admite varias opções, cada uma sendo uma lista de
     duas ou mais elementos.  O primeiro elemento é o nome da opção, e o
     resto estará formado pelos argumentos para essa opção.

     A função ‘plotdf’ reconhece as seguintes opções:

        • "tstep" estabelece a amplitude dos incrementos da variável
          independente <t>, utilizados para calcular as curvas
          integrais.  Se for dada só uma expressão <dydx>, a variável
          <x> será directamente proporcional a <t>.  O valor por omissão
          é 0.1.

        • "nsteps" estabelece o número de passos de comprimento ‘tstep’
          que se utilizarão na variável independente para calcular a
          curva integral.  O valor por omissão é 100.

        • "direction" estabelece a direcção da variável independente que
          será seguida para calcular uma curva integral.  Os valores
          possí são: ‘forward’, para fazer que a variável independente
          aumente ‘nsteps’ vezes, com incrementos ‘tstep’; ‘backward’,
          para fazer que a variável independente diminua; ‘both’, para
          estender a curva integral ‘nsteps’ passos para a frente e
          ‘nsteps’ passos para atrás.  As palavras ‘right’ e ‘left’
          podem serem usadas como sinónimos de ‘forward’ e ‘backward’.
          O valor por omissão é ‘both’.

        • "tinitial" estabelece o valor inicial da variável <t>
          utilizado para calcular curvas integrais.  Já que as equações
          diferenciais são autónomas, esta opção só aparecerá nos
          gráficos das curvas em função de <t>.  O valor por omissão é
          0.

        • "versus_t" utiliza-se para criar uma segunda janela gráfica,
          com o gráfico de uma curva integral, como duas funções <x>,
          <y>, de variável independente <t>.  Se for dado a ‘versus_t’
          qualquer valor diferente de 0, mostrar-se-á a segunda janela
          gráfica, que inclui outro menú, similar ao da janela
          principal.  O valor por omissão é 0.

        • "trajectory_at" estabelece as coordenadas <xinitial> e
          <yinitial> para o ponto inicial da curva integral.  Não tem
          atribuído nenhum valor por omissão.

        • "parameters" estabelece uma lista de parâmetros, junto com os
          seus valores numéricos, que são utilizados na definição da
          equação diferencial.  Os nomes dos parâmetros e os seus
          valores devem escrever-se em formato de cadeia de caracteres
          como uma sequência de pares ‘nome=valor’ separados por
          vírgulas.

        • "sliders" estabelece uma lista de parâmetros que poderão ser
          alterados interactivamente usando barras com sliders, assim
          como os intervalos de variação dos ditos parâmetros.  Os nomes
          dos parâmetros e os seus intervalos devem escrever-se em
          formato de cadeia de caracteres como uma sequência de pares
          ‘nome=min:max’ separados por vírgulas.

        • "xfun" estabelece uma cadeia de caracteres com funções de <x>
          separadas por ponto e vírgula para ser representadas por cima
          do campo de direcções.  Essas funções serão interpretadas por
          Tcl, e não por Maxima.

        • "xradius" é metade do comprimento do intervalo de valores a
          representar na direcção x.  O valor por omissão é 10.

        • "yradius" é metade do comprimento do intervalo de valores a
          representar na direcção y.  O valor por omissão é 10.

        • "xcenter" é a coordenada x do ponto situado no centro do
          gráfico.  O valor por omissão é 0.

        • "ycenter" é a coordenada y do ponto situado no centro do
          gráfico.  O valor por omissão é 0.

        • "width" estabelece a largura da janela gráfica em pixels.  O
          valor por omissão é 500.

        • "height" estabelece a altura da janela gráfica em pixels.  O
          valor por omissão é 500.

     Exemplos:

     NOTA: Em alguns casos, dependendo da interface usada para executar
     o Maxima, as funções que usam ‘openmath’, em particular ‘plotdf’,
     podem desencadear um bug se terminarem em ponto e vírgula, e não
     com o símbolo de dólar.  Para evitar problemas, usaremos o símbolo
     de dóla nos exemplos a seguir.

        • Para mostrar o campo de direcções da equação diferencial y' =
          exp(-x) + y e a solução que passa por (2, -0.1):
               (%i1) load("plotdf")$

               (%i2) plotdf(exp(-x)+y,[trajectory_at,2,-0.1]);

        • Para mostrar o campo de direcções da equação diff(y,x) = x -
          y^2 e a solução com condição inicial y(-1) = 3, pode
          utilizar-se o comando:
               (%i3) plotdf(x-y^2,[xfun,"sqrt(x);-sqrt(x)"],
                         [trajectory_at,-1,3], [direction,forward],
                         [yradius,5],[xcenter,6]);
          O gráfico também mostra a função y = sqrt(x).

        • O exemplo seguinte mostra o campo de direcções de um oscilador
          harmónico, definido pelas equações dx/dt = y e dy/dt = -k*x/m,
          e a curva integral que passa por (x,y) = (6,0), com uma barra
          de slider que permitirá mudar o valor de m interactivamente (k
          permanecerá fixo em 2):
               (%i4) plotdf([y,-k*x/m],[parameters,"m=2,k=2"],
                           [sliders,"m=1:5"], [trajectory_at,6,0]);

        • Para representar o campo de direcções da equação de Duffing,
          m*x''+c*x'+k*x+b*x^3 = 0, introduz-se a variável y=x' e
          faz-se:
               (%i5) plotdf([y,-(k*x + c*y + b*x^3)/m],
                             [parameters,"k=-1,m=1.0,c=0,b=1"],
                             [sliders,"k=-2:2,m=-1:1"],[tstep,0.1]);

        • O campo de direcções dum pêndulo amortecido, incluindo a
          solução para condições iniciales dadas, com uma barra de
          slider que pode usar-se para mudar o valor da masa, m, e com o
          gráfico das duas variáveis de estado em função do tempo:

               (%i6) plotdf([y,-g*sin(x)/l - b*y/m/l],
                        [parameters,"g=9.8,l=0.5,m=0.3,b=0.05"],
                        [trajectory_at,1.05,-9],[tstep,0.01],
                        [xradius,6],[yradius,14],
                        [xcenter,-4],[direction,forward],[nsteps,300],
                        [sliders,"m=0.1:1"], [versus_t,1]);


File: maxima.info,  Node: romberg,  Next: simplex,  Prev: plotdf,  Up: Top

63 romberg
**********

* Menu:

* Definições para romberg::


File: maxima.info,  Node: Definições para romberg,  Prev: Top,  Up: Top

63.1 Definições para romberg
============================

 -- Função: romberg (<expr>, <x>, <a>, <b>)
 -- Função: romberg (<F>, <a>, <b>)

     Calcula uma integração numérica pelo método de Romberg.

     ‘romberg(<expr>, <x>, <a>, <b>)’ retorna uma estimativa da integral
     ‘integrate(<expr>, <x>, <a>, <b>)’.  <expr> deve ser uma expressão
     que avalie para um valor em ponto flutuante quando <x> estiver
     associado a um valor em ponto flutuante.

     ‘romberg(<F>, <a>, <b>)’ retorna uma estimativa da integral
     ‘integrate(<F>(x), x, <a>, <b>)’ onde ‘x’ representa o não nomeado,
     isolado argumeno de <F>; o actual argumento não é chamado ‘x’.  <F>
     deve ser uma função do Maxima ou do Lisp que retorne um valor em
     ponto flutuante quando o argumento for um número em ponto
     flutuante.  <F> pode nomear uma função traduzida ou compilada do
     Maxima.

     A precisão de ‘romberg’ é governada pelas variáveis globais
     ‘rombergabs’ e ‘rombergtol’.  ‘romberg’ termina com sucesso quando
     a diferença absoluta entre duas aproximações sucessivas for menor
     que ‘rombergabs’, ou a diferença relativa em aproximações
     sucessivas for menor que ‘rombergtol’.  Dessa forma quando
     ‘rombergabs’ for 0.0 (o padrão) somente o erro relativo tem algum
     efeito sobre ‘romberg’.

     ‘romberg’ divide ao meio o tamanho do passo no máximo ‘rombergit’
     vezes antes de interromper; o número máximo de avaliações de função
     é portanto ‘2^rombergit’.  Se o critério de erro estabelecido por
     ‘rombergabs’ e por ‘rombergtol’ não for satisfeito, ‘romberg’
     mostra uma mensagem de erro.  ‘romberg’ sempre faz ao menos
     ‘rombergmin’ iterações; isso é uma intenção eurísstica de previnir
     encerramentos espúrios quando o integrando for oscilatório.

     ‘romberg’ repetidamente avalia o integrando após associar a
     variável de integração a um valor específico (e não antes).  Essa
     política de avaliação torna possível aninhar chamadas a ‘romberg’,
     para calcular integrais multidimensionais.  Todavia, os cálculos de
     erro não tomam os erros de integrações aninhadas em consideração,
     então erros podem ser subestimados.  Também, métodos imaginados
     especialmente para problemas multidimensionais podem retornar a
     mesma precisão com poucas avaliações de função.

     ‘load("romberg")’ torna essa função disponível para uso.

     Veja também ‘QUADPACK’, uma colecção de funções de integração
     numérica.

     Exemplos:

     Uma integração unidimensonal.

          (%i1) load ("romberg");
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) f(x) := 1/((x - 1)^2 + 1/100) + 1/((x - 2)^2 + 1/1000) + 1/((x - 3)^2 + 1/200);
                              1                 1                1
          (%o2) f(x) := -------------- + --------------- + --------------
                               2    1           2    1            2    1
                        (x - 1)  + ---   (x - 2)  + ----   (x - 3)  + ---
                                   100              1000              200
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) rombergit : 15;
          (%o4)                          15
          (%i5) estimate : romberg (f(x), x, -5, 5);
          (%o5)                   173.6730736617464
          (%i6) exact : integrate (f(x), x, -5, 5);
          (%o6) 10 sqrt(10) atan(70 sqrt(10))
           + 10 sqrt(10) atan(30 sqrt(10)) + 10 sqrt(2) atan(80 sqrt(2))
           + 10 sqrt(2) atan(20 sqrt(2)) + 10 atan(60) + 10 atan(40)
          (%i7) abs (estimate - exact) / exact, numer;
          (%o7)                7.5527060865060088E-11

     Uma integração bidimensional, implementada com chamadas aninhadas a
     ‘romberg’.

          (%i1) load ("romberg");
          (%o1)    /usr/share/maxima/5.11.0/share/numeric/romberg.lisp
          (%i2) g(x, y) := x*y / (x + y);
                                              x y
          (%o2)                   g(x, y) := -----
                                             x + y
          (%i3) rombergtol : 1e-6;
          (%o3)                 9.9999999999999995E-7
          (%i4) estimate : romberg (romberg (g(x, y), y, 0, x/2), x, 1, 3);
          (%o4)                   0.81930239628356
          (%i5) assume (x > 0);
          (%o5)                        [x > 0]
          (%i6) integrate (integrate (g(x, y), y, 0, x/2), x, 1, 3);
                                                    3
                                              2 log(-) - 1
                              9                     2        9
          (%o6)       - 9 log(-) + 9 log(3) + ------------ + -
                              2                    6         2
          (%i7) exact : radcan (%);
                              26 log(3) - 26 log(2) - 13
          (%o7)             - --------------------------
                                          3
          (%i8) abs (estimate - exact) / exact, numer;
          (%o8)                1.3711979871851024E-10

 -- Variável de opção: rombergabs
     Valor por omissão: 0.0

     A precisão de ‘romberg’ é governada pelas variávies globais
     ‘rombergabs’ e ‘rombergtol’.  ‘romberg’ termina com sucesso quando
     a diferença absoluta entre duas aproximações sucessivas for menor
     que ‘rombergabs’, ou a diferença relativa em aproximações
     sucessivas for menor que ‘rombergtol’.  Dessa forma quando
     ‘rombergabs’ for 0.0 (o padrão) somente o erro relativo tem algum
     efeito sobre ‘romberg’.

     Veja também ‘rombergit’ e ‘rombergmin’.

 -- Variável de opção: rombergit
     Valor por omissão: 11

     ‘romberg’ divide ao meio o tamanho do passo no máximo ‘rombergit’
     vezes antes de interromper; o número máximo de avaliações de função
     é portanto ‘2^rombergit’.  Se o critério de erro estabelecido por
     ‘rombergabs’ e por ‘rombergtol’ não for satisfeito, ‘romberg’
     mostra uma mensagem de erro.  ‘romberg’ sempre faz ao menos
     ‘rombergmin’ iterações; isso é uma intenção eurísstica de previnir
     encerramentos espúrios quando o integrando for oscilatório.

     Veja também ‘rombergabs’ e ‘rombergtol’.

 -- Variável de opção: rombergmin
     Valor por omissão: 0

     ‘romberg’ sempre faz ao menos ‘rombergmin’ iterações; isso é uma
     intenção eurísstica para prevenir terminações espúrias quando o
     integrando for.

     Veja também ‘rombergit’, ‘rombergabs’, e ‘rombergtol’.

 -- Variável de opção: rombergtol
     Valor por omissão: 1e-4

     A precisão de ‘romberg’ é governada pelas variáveis globais
     ‘rombergabs’ e ‘rombergtol’.  ‘romberg’ termina com sucesso quando
     a diferença absoluta entre duas aproximações sucessivas for menor
     que ‘rombergabs’, ou a diferença relativa em aproximações
     sucessivas for menor que ‘rombergtol’.  Dessa forma quando
     ‘rombergabs’ for 0.0 (o padrão) somente o erro relativo tem algum
     efeito sobre ‘romberg’.

     Veja também ‘rombergit’ e ‘rombergmin’.


File: maxima.info,  Node: simplex,  Next: simplification,  Prev: romberg,  Up: Top

64 simplex
**********

* Menu:

* Introdução a simplex::
* Definições para simplex::


File: maxima.info,  Node: Introdução a simplex,  Next: Definições para simplex,  Prev: simplex,  Up: simplex

64.1 Introdução a simplex
=========================

‘simplex’ é um pacote para optimização linear usando o algoritmo
simplex.

Exemplo:

     (%i1) load("simplex")$
     (%i2) minimize_sx(x+y, [3*x+2*y>2, x+4*y>3]);
                       9        7       1
     (%o2)            [--, [y = --, x = -]]
                       10       10      5


File: maxima.info,  Node: Definições para simplex,  Prev: Introdução a simplex,  Up: simplex

64.2 Definições para simplex
============================

 -- Variável de opção: epsilon_sx
     Valor por omissão: ‘10^-8’

     Epsilon usando para cálculos numéricos em ‘linear_program’.

     Veja também: ‘linear_program’.

 -- Função: linear_program (<A>, <b>, <c>)

     ‘linear_program’ é uma implementação do algoritmo simplex.
     ‘linear_program(A, b, c)’ calcula um vetor <x> para o qual ‘c.x’ é
     o mínimo possível entre vetores para os quais ‘A.x = b’ e ‘x >= 0’.
     O argumento <A> é uma matriz e os argumentos <b> e <c> são listas.

     ‘linear_program’ retorna uma lista contendo o vetor minimizado <x>
     e o valor mínimo ‘c.x’.  Se o problema for não associado, é
     retornado "Problem not bounded!"  e se o problema for não viável, é
     retornado "Problem not feasible!".

     Para usar essa função primeiramente chame o pacote ‘simplex’ com
     ‘load("simplex");’.

     Exemplo:

          (%i2) A: matrix([1,1,-1,0], [2,-3,0,-1], [4,-5,0,0])$
          (%i3) b: [1,1,6]$
          (%i4) c: [1,-2,0,0]$
          (%i5) linear_program(A, b, c);
                             13     19        3
          (%o5)            [[--, 4, --, 0], - -]
                             2      2         2

     Veja também: ‘minimize_sx’, ‘scale_sx’, e ‘epsilon_sx’.

 -- Função: maximize_sx (<obj>, <cond>, [<pos>])

     Maximiza a função linear objetiva <obj> submetida a alguma
     restrição linear <cond>.  Veja ‘minimize_sx’ para uma descrição
     detalhada de argumentos e valores de retorno.

     Veja também: ‘minimize_sx’.

 -- Função: minimize_sx (<obj>, <cond>, [<pos>])

     Minimiza uma função linear objetiva <obj> submetida a alguma
     restrição linear <cond>.  <cond> é uma lista de equações lineares
     ou desigualdades.  Em desigualdades estritas ‘>’ é substituido por
     ‘>=’ e ‘<’ por ‘<=’.  O argumento opcional <pos> é uma lista de
     variáveis de decisão que são assumidas como sendo positivas.

     Se o mínimo existir, ‘minimize_sx’ retorna uma lista que contém o
     menor valor da função objetiva e uma lista de valores de variáveis
     de decisão para os quais o mínimo é alcançado.  Se o problema for
     não associado, ‘minimize_sx’ retorna "Problem not bounded!"  e se o
     problema for não viável, é retornado "Ploblem not feasible!".

     As variáveis de decisão não são assumidas para serem não negativas
     por padrão.  Se todas as variáveis de dicisão forem não negativas,
     escolha ‘nonegative_sx’ para ‘true’.  Se somente algumas das
     variáveis de decisão forem positivas, coloque-as então no argumento
     opcional <pos> (note que isso é mais eficiente que adicionar
     restrições).

     ‘minimize_sx’ utiliza o algoritmo simplex que é implementado na
     função ‘linear_program’ do Maxima.

     Para usar essa função primeiramente chame o pacote ‘simplex’ com
     ‘load("simplex");’.

     Exemplos:

          (%i1) minimize_sx(x+y, [3*x+y=0, x+2*y>2]);
                                4       6        2
          (%o1)                [-, [y = -, x = - -]]
                                5       5        5
          (%i2) minimize_sx(x+y, [3*x+y>0, x+2*y>2]), nonegative_sx=true;
          (%o2)                [1, [y = 1, x = 0]]
          (%i3) minimize_sx(x+y, [3*x+y=0, x+2*y>2]), nonegative_sx=true;
          (%o3)                Problem not feasible!
          (%i4) minimize_sx(x+y, [3*x+y>0]);
          (%o4)                Problem not bounded!

     Veja também: ‘maximize_sx’, ‘nonegative_sx’, ‘epsilon_sx’.

 -- Variável de opção: nonegative_sx
     Valor por omissão: ‘false’

     Se ‘nonegative_sx’ for verdadeiro (true) todas as variáveis de
     decisão para ‘minimize_sx’ e ‘maximize_sx’ são assumidas para serem
     positivas.

     Veja também: ‘minimize_sx’.


File: maxima.info,  Node: simplification,  Next: solve_rec,  Prev: simplex,  Up: Top

65 simplification
*****************

* Menu:

* Introdução a simplification::
* Definições para simplification::


File: maxima.info,  Node: Introdução a simplification,  Next: Definições para simplification,  Prev: simplification,  Up: simplification

65.1 Introdução a simplification
================================

O directório ‘maxima/share/simplification’ contém muitos scripts que
implementam regras de simplificação e funções, e também algumas funções
não relacionadas a simplificação.


File: maxima.info,  Node: Definições para simplification,  Prev: Introdução a simplification,  Up: simplification

65.2 Definições para simplification
===================================

65.2.1 Package absimp
---------------------

O pacote ‘absimp’ contém regras de comparação de sequências decaractere
que extendem as regras internas de simplificação para as funções ‘abs’ e
‘signum’.  ‘absimp’ respeita as relações estabelecidas com a função
interna ‘assume’ e por meio de declarações tais como ‘modedeclare (m,
even, n, odd)’ para inteiros paes ou ímpares.

‘absimp’ define as funções ‘unitramp’ e ‘unitstep’ em termos de ‘abs’ e
‘signum’.

‘load ("absimp")’ torna esse pacote disponível para uso.  ‘demo
(absimp)’ faz uma demonstração desse pacote.

Exemplos:

     (%i1) load ("absimp")$
     (%i2) (abs (x))^2;
                                            2
     (%o2)                                 x
     (%i3) diff (abs (x), x);
                                           x
     (%o3)                               ------
                                         abs(x)
     (%i4) cosh (abs (x));
     (%o4)                               cosh(x)

65.2.2 Package facexp
---------------------

O pacote ‘facexp’ contém muitas funções relacionadas a simplificações
que fornecem ao utilizador a habilidade de estruturar expressões por
meio de expansão controlada.  Essa capacidade é especialmente útil
quando a expressão contém variáveis que possuem significado físico,
porque é muitas vezes verdadeiro que a forma mais econômica de uma tal
expressão pode ser obtida por meio de uma expansão completa da expressão
com relação a essas variáveis, e então factorizar seus coeficientes.
Apesar de ser verdadeiro que esse procedimento é fácil de realizar
usando as funções padrão do Maxima, ajustes adicionais podem se
desejáveis, e esses toques finais podem ser mais difíceis de aplicar.

A função ‘facsum’ e suas formas relacionadas fornecem um meio
conveniente de controlar a estrutura de expressões por esse caminho.
Outra função, ‘collectterms’, pode ser usada para adicionar duas ou mais
expressões que já tenham sido simplificadas para essa forma, sem
resimplificar a expressão completa novamente.  Essa função pode ser útil
quando expressões forem muito grandes.

‘load ("facexp")’ torna dispon;ivel para uso esse pacote.  ‘demo
(facexp)’ faz uma demonstração desse pacote.

 -- Função: facsum (<expr>, <arg_1>, ..., <arg_n>)
     Retorna uma forma de <expr> que depende dos argumentos <arg_1>,
     ..., <arg_n>.  Os argumentos podem ser quaisquer formas adequadas
     para ‘ratvars’, ou eles podem ser listas de tais formas.  Se os
     argumentos não forem listas, então a forma retornada é
     completamente expandida com relação aos argumentos, e os
     coeficientes dos argumentos foram factorizados.  Esses coeficientes
     são livres dos argumentos, excepto talvez no sentido não racional.

     Se quaisquer dos argumentos forem listas, então todas as tais
     listas são combinadas em uma lista simples, e em lugar de chamar
     ‘factor’ sobre os coeficientes dos argumentos, ‘facsum’ chama a si
     mesma sobre esses coeficientes, usando essa nova lista simples que
     foi construída como o novo argumento listo para essa chamada
     recursiva.  Esse processo pode ser repetido para um quantidade
     arbitrária de repetições por através do aninhamento dos elementos
     desejados nas listas.

     É possível que alguém possa querer usar ‘facsum’ com relação a
     subexpressões mais complicadas, tal como ‘log (x + y)’.  Tais
     argumentos são também permitidos.  Sem especificação de variável,
     por exemplo ‘facsum (<expr>)’, o resultado retornado é o mesmo que
     o que é retornado por meio de ‘ratsimp (<expr>)’.

     Ocasionalmente o utilizador pode querer obter quaisquer das formas
     abaixo para expressões que são especificadas somente por meio de
     seus operadores líderes.  Por exemplo, alguém pode querer usar
     ‘facsum’ com relação a todos os ‘log’’s.  Nessa situação, alguém
     pode incluir no meio dos argumentos ou o código dos ‘log’’s
     eespecíficos que devem ser tratados po esse caminho ou
     alternativamente a expressão ‘operator (log)’ ou a expressão
     ‘'operator (log)’.  Se alguém quiser usar ‘facsum’ na expressão
     <expr> com relação aos operadores <op_1>, ..., <op_n>, pode-se
     avaliar ‘facsum (<expr>, operator (<op_1>, ..., <op_n>))’.  A forma
     ‘operator’ pode também aparecer dentro de uma lista de argumentos.

     Adicionalmente, a escolha de comutadores ‘facsum_combine’ e
     ‘nextlayerfactor’ pode afectar o ressultado de ‘facsum’.

 -- Variável global: nextlayerfactor
     Valor por omissão: ‘false’

     Quando ‘nextlayerfactor’ for ‘true’, chamadas recursivas a ‘facsum’
     são aplicdas aos factores da forma factorizada dos coeficientes dos
     argumentos.

     Quando ‘nextlayerfactor’ for ‘false’, ‘facsum’ é aplicada a cada
     coeficiente como um todo mesmo se chamadas recursivas a ‘facsum’
     acontecerem.

     A inclusão do átomo ‘nextlayerfactor’ na lista argumento de
     ‘facsum’ tem o efieto de ‘nextlayerfactor: true’, mas para o
     próximo nível da expressão somente.  Uma vez que ‘nextlayerfactor’
     é sempre associado ou a ‘true’ ou a ‘false’, ‘nextlayerfactor’ deve
     ser apresentada com apóstrofo simples mesmo que ‘nextlayerfactor’
     apareça na lista de argumento de ‘facsum’.

 -- Variável global: facsum_combine
     Valor por omissão: ‘true’

     ‘facsum_combine’ controla a forma do resultado final retornada por
     meio de ‘facsum’ quando seu argumento é um quociente de polinómios.
     Se ‘facsum_combine’ for ‘false’ então a forma será retornada como
     um somatório completametne expandido como descrito acima, mas se
     ‘true’, então a expressão retornada é uma razão de polinómios, com
     cada polinómio na forma descrita acima.

     A escolha de ‘true’ desse comutador é útil quando se deseja para
     ‘facsum’ ambos o dumerador e o denominador de uma expressão
     racional, mas não se deseja que o denominador seja multiplicado de
     forma completa pelos termos do numerador.

 -- Função: factorfacsum (<expr>, <arg_1>, ... <arg_n>)
     Retorna uma forma de <expr> que é obtida por meio de chamada a
     ‘facsum’ sobre os factores de <expr> com <arg_1>, ...  <arg_n> como
     argumentos.  Se qualqeur dos factores de <expr> estiver elevado a
     um expoente, ambos o factor e o expoente irão ser processados por
     esse meio.

 -- Função: collectterms (<expr>, <arg_1>, ..., <arg_n>)
     Se muitas expressões tiverem sido simplificadas com ‘facsum’,
     ‘factorfacsum’, ‘factenexpand’, ‘facexpten’ ou com
     ‘factorfacexpten’, e elas estão para serem adicionadas umas às
     outras, pode ser desejável combiná-las usando a função
     ‘collecterms’.  ‘collecterms’ pode pegar como argumentos todos os
     argumentos que podem ser fornecidos para essas outras funções
     associadas com excessão de ‘nextlayerfactor’, que não tem efeito
     sobre ‘collectterms’.  A vantagem de ‘collectterms’ está em que
     ‘collectterms’ retorna uma forma similar a ‘facsum’, mas uma vez
     que ‘collectterms’ está adicionando forma que já tenham sido
     processadas por ‘facsum’, ‘collectterms’ não precisa repetir aquele
     esforço.  Essa capacidade é especialmente útil quando a expressão a
     ser somada for muito grande.

65.2.3 Pacote functs
--------------------

 -- Função: rempart (<expr>, <n>)
     Remove a parte <n> da expressão <expr>.

     Se <n> é uma lsita da forma ‘[<l>, <m>]’ então as partes de <l> até
     <m> são removidas.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: wronskian ([<f_1>, ..., <f_n>], <x>)
     Retorna a matriz Wronskiana das funções <f_1>, ..., <f_n> na
     variável <x>.

     <f_1>, ..., <f_n> pode ser o nome de funções definidas pelo
     utilizador, ou expressões na variável <x>.

     O determinante da matriz Wronskiana é o determinante Wronskiano do
     conjunto de funções.  As funções são linearmente independentes
     entre si se seu determinante for igual a zero.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: tracematrix (<M>)
     Retorna o traço (somatório dos elementos da diagonal principal) da
     matriz <M>.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: rational (‘z’)
     Multiplica o numerador e o denominador de <z> pelo complexo
     conjugado do denominador, racionando dessa forma o denominador
     complexo.  Retorna a forma de expressão racional canónica (CRE) se
     fornecida uma CRE, caso contrário retorna a forma geral.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: nonzeroandfreeof (<x>, <expr>)
     Retorna ‘true’ se <expr> for diferente de zero e ‘freeof (<x>,
     <expr>)’ retorna ‘true’.  Retorna ‘false’ de outra forma.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: linear (<expr>, <x>)
     Quando <expr> for uma expressão linear na variável <x>, ‘linear’
     retorna ‘<a>*<x> + <b>’ onde <a> é diferente de zero, e <a> e <b>
     são livres de <x>.  De outra forma, ‘linear’ retorna <expr>.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: gcdivide (<p>, <q>)
     Quando ‘takegcd’ for ‘true’, ‘gcdivide’ divide os polinómios <p> e
     <q> por seu maior divisor comum (MDC) e retorna a razão dos
     resultados.

     Quando ‘takegcd’ for ‘false’, ‘gcdivide’ retorna a razão ‘<p>/<q>’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: arithmetic (<a>, <d>, <n>)
     Retorna o <n>-ésiomo termo da série aritmética ‘<a>, <a> + <d>, <a>
     + 2*<d>, ..., <a> + (<n> - 1)*<d>’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: geometric (<a>, <r>, <n>)
     Retorna o <n>-ésimo termo da série geométrica ‘<a>, <a>*<r>,
     <a>*<r>^2, ..., <a>*<r>^(<n> - 1)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: harmonic (<a>, <b>, <c>, <n>)
     Retorna o <n>-ésimo termo da série harmônica ‘<a>/<b>, <a>/(<b> +
     <c>), <a>/(<b> + 2*<c>), ..., <a>/(<b> + (<n> - 1)*<c>)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: arithsum (<a>, <d>, <n>)
     Retorna a soma dos elementos da série aritmética de 1 a <n>.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: geosum (<a>, <r>, <n>)
     Retorna a soma dos elementos da série geométrica de 1 a <n>.  Se
     <n> for infinito (‘inf’) então a soma será finita se e somente se o
     valor absoluto de <r> for menor que 1.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: gaussprob (<x>)
     Retorna a função de probalilidade de Gauss ‘%e^(-<x>^2/2) /
     sqrt(2*%pi)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: gd (<x>)
     Retorna a função de Gudermann ‘2 * atan(%e^<x> - %pi/2)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: agd (<x>)
     Retorna o inverso da função de Gudermann ‘log (tan (%pi/4 +
     x/2)))’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: vers (<x>)
     Retorna o sinus versus ‘1 - cos (x)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: covers (<x>)
     Retorna o sinus versus do complemento ‘1 - sin (<x>)’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: exsec (<x>)
     Retorna a parte externa da secante ‘sec (<x>) - 1’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: hav (<x>)
     Retorna o semi-sinus versus ‘(1 - cos(x))/2’.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: combination (<n>, <r>)
     Retorna o número de combinações de <n> objectos tomados em grupos
     de <r> elementos.

     Para usar essa função escreva primeiramente ‘load("functs")’.

 -- Função: permutation (<n>, <r>)
     Retorna o número de permutações de <r> objectos seleccionados de um
     conjunto de <n> objectos.

     Para usar essa função escreva primeiramente ‘load("functs")’.

65.2.4 Package ineq
-------------------

O pacote ‘ineq’ contém regras de simplificação para desigualdades.

Sessão exemplo:

     (%i1) load("ineq")$
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     Warning: Putting rules on '+' or '*' is inefficient, and may not work.
     (%i2) a>=4;  /* uma desigualdade exemplo */
     (%o2)                               a >= 4
     (%i3) (b>c)+%; /* adiciona uma segunda e estrita desigualdade */
     (%o3)                            b + a > c + 4
     (%i4) 7*(x<y); /* multiplica por um número positivo */
     (%o4)                              7 x < 7 y
     (%i5) -2*(x>=3*z); /* multiplica por um número negativo */
     (%o5)                           - 2 x <= - 6 z
     (%i6) (1+a^2)*(1/(1+a^2)<=1); /* Maxima sabe que 1+a^2 > 0 */
                                             2
     (%o6)                             1 <= a  + 1
     (%i7) assume(x>0)$ x*(2<3); /* assumindo x>0 */
     (%o7)                              2 x < 3 x
     (%i8) a>=b; /* outa desigualdade */
     (%o8)                               a >= b
     (%i9) 3+%; /* adiciona alguma coisa à desigualdade imediatamente acima */
     (%o9)                           a + 3 >= b + 3
     (%i10) %-3; /* retirando essa alguma coisa */
     (%o10)                              a >= b
     (%i11) a>=c-b; /* ainda outra desigualdade */
     (%o11)                            a >= c - b
     (%i12) b+%; /* adiciona b a ambos os lados da desigualdade */
     (%o12)                            b + a >= c
     (%i13) %-c; /* subtrai c de ambos os lados */
     (%o13)                         - c + b + a >= 0
     (%i14) -%;  /* multiplica por -1 */
     (%o14)                          c - b - a <= 0
     (%i15) (z-1)^2>-2*z; /* determinando a verdade de uma assertiva */
                                           2
     (%o15)                         (z - 1)  > - 2 z
     (%i16) expand(%)+2*z; /* expandindo essa assertiva e adicionado 2*z a ambos os lados */
                                        2
     (%o16)                            z  + 1 > 0
     (%i17) %,pred;
     (%o17)                               true

Seja cuidadoso com o uso dos parêntesis em torno de desigualdades:
quando o utilizador digita ‘(A > B) + (C = 5)’ o resltado é ‘A + C > B +
5’, mas ‘A > B + C = 5’ é um erro de sintaxe, e ‘(A > B + C) = 5’ é
alguma coisa completametne diferente.

Faça ‘disprule (all)’ para ver uma lista completa das definições de
regras.

O utilizador será questionado se o Maxima for incapaz de decidir o sinal
de uma quantidade multiplicando uma desigualdade.

O mais comum recurso estranho é ilustrado por:

     (%i1) eq: a > b;
     (%o1)                                a > b
     (%i2) 2*eq;
     (%o2)                              2 (a > b)
     (%i3) % - eq;
     (%o3)                                a > b

Outro problema é 0 vezes uma desigualdade; o padrão para isso acontecer
é 0 ter sido colocado à esquerda sozinho.  Contudo, se digitar
‘X*<some_inequality>’ e Maxima perguntar sobre o sinal de ‘X’ e
responder ‘zero’ (ou ‘z’), o programa retorna ‘X*<some_inequality>’ e
não utiliza a informação que ‘X’ é 0.  Pode usar ‘ev (%, x: 0)’ em casos
semelhantes a esse; a base de dados irá somente ser usada para
propósitos de comparação em decisões, e não para o propósito de
avaliação de ‘X’.

O utilizador pode notar uma resposta lenta quando esse pacote é
disponibilizado para uso, como o simplificador é forçado a examinar mais
regras do precisaria sem esse pacote, então pode desejar remover essas
regras após fazer uso delas.  Faça ‘kill (rules)’ para eliminar todas as
regras (incluindo qualquer regra que possa ter definido); ou pode ser
mais selectivo eliminando somente algumas delas; ou use ‘remrule’ sobre
uma regra específica.

Note que se disponibilizar esse pacote para ser usado, após definir suas
próprias regras, irá sobrescrever as suas regras que possuirem nomes
identicos a nomes contidos nas regras do pacote.  As regras no pacote
são: ‘*rule1’, ..., ‘*rule8’, ‘+rule1’, ..., ‘+rule18’, e deve colocar o
nome de regra entre aspas duplas ao referir-se a eles, como em ‘remrule
("+", "+rule1")’ para especificamente remover a primeira regra sobre
‘"+"’ ou ‘disprule ("*rule2")’ para mostrar a definição da segunda regra
multiplicativa.

65.2.5 Package rducon
---------------------

 -- Função: reduce_consts (<expr>)
     Substitui subexpressões constantes de <expr> com construída com
     átomos constantes, gravando a definição de todas essas constantes
     construídas na lista de equações ‘const_eqns’, e retornando a
     expressão modificada <expr>.  Essas partes de <expr> são constantes
     que retornam ‘true’ quando operadas por meio da função ‘constantp’.
     Consequêntemente, antes de usar ‘reduce_consts’, se pode fazer

          declare ([<objecto que vai receber a propriedade constante>], constant)$

     para escolher a base de dados das quantidades constantes ocorrendo
     em suas expressões.

     Se está a planear gerar saídas em Fortran após esses cálculos
     simbólicos, uma das primeiras secções de código pode ser o cálculo
     de todas as constantes.  Para gerar esse segmento de código, faça

          map ('fortran, const_eqns)$

     Variables como ‘const_eqns’ que afectam ‘reduce_consts’ são:

     ‘const_prefix’ (valor padrão: ‘xx’) é a sequência de caracteres
     usada para prefixar todos os símbolos gerados por ‘reduce_consts’
     para representar subexpressões constantes.

     ‘const_counter’ (valor padrão: 1) é o índice inteiro usado para
     gerar símbolos únicos para representar cada subexpressão constante
     emcontrada por ‘reduce_consts’.

     ‘load ("rducon")’ torna essa função disponível para uso.  ‘demo
     (rducon)’ faz uma demonstração dessa função.

65.2.6 Pacote scifac
--------------------

 -- Função: gcfac (<expr>)
     ‘gcfac’ função de factorização que tenta aplicar a mesma heurística
     que cientístas aplicam em tentativas de fazer expressões
     extremamente simples.  ‘gcfac’ está limitada a factorizações
     monomiais.  Para um somatório, ‘gcfac’ faz o seguinte:

       1. Factores sobre os inteiros.
       2. Coloca em evidência o maior expoente de termos ocorrendo como
          coeficientes, independentemente da complexidade dos termos.
       3. Usa (1) e (2) em factorizações de pares de termos adjascentes.
       4. Repetidamente e recursivamente aplica essas técnicas até que a
          expressão não mais mude.

     O item (3) não necessáriamente faz uma tarefa óptima factorização
     par a par devido à dificuldade combinatória natural de encontrar
     qual de todas dos possíveis rearranjos de pares retorna o mais
     compacto resultado de factorização de um par.

     ‘load ("scifac")’ torna essa função disponível para uso.  ‘demo
     (scifac)’ faz uma demonstração dessa função.

65.2.7 Pacote sqdnst
--------------------

 -- Função: sqrtdenest (<expr>)
     Desaninha ‘sqrt’ de simples, numérico, binômios de raízes
     irracionais de números racionais , onde for possível.  E.g.

          (%i1) load ("sqdnst")$
          (%i2) sqrt(sqrt(3)/2+1)/sqrt(11*sqrt(2)-12);
                                              sqrt(3)
                                         sqrt(------- + 1)
                                                 2
          (%o2)                        ---------------------
                                       sqrt(11 sqrt(2) - 12)
          (%i3) sqrtdenest(%);
                                            sqrt(3)   1
                                            ------- + -
                                               2      2
          (%o3)                            -------------
                                              1/4    3/4
                                           3 2    - 2

     Algumas vezes isso ajuda na hora de aplicar ‘sqrtdenest’ mais que
     uma vez, sobre coisas como ‘(19601-13860 sqrt(2))^(7/4)’.

     ‘load ("sqdnst")’ Torna essa função disponível para uso.


File: maxima.info,  Node: solve_rec,  Next: stats,  Prev: simplification,  Up: Top

66 solve_rec
************

/solve_rec.texi/1.7/Tue Jan 16 15:15:10 2007//
* Menu:

* Introdução a solve_rec::
* Definições para solve_rec::


File: maxima.info,  Node: Introdução a solve_rec,  Next: Definições para solve_rec,  Prev: solve_rec,  Up: solve_rec

66.1 Introdução a solve_rec
===========================

‘solve_rec’ é um pacote para resolver recorrências lineares com
coeficientes polinomiais.

Um ficheiro de domostração está disponivel com ‘demo(solve_rec);’.

Exemplo:

     (%i1) load("solve_rec")$
     (%i2) solve_rec((n+4)*s[n+2] + s[n+1] - (n+1)*s[n], s[n]);
                                         n
                      %k  (2 n + 3) (- 1)          %k
                        1                            2
     (%o2)       s  = -------------------- + ---------------
                  n     (n + 1) (n + 2)      (n + 1) (n + 2)


File: maxima.info,  Node: Definições para solve_rec,  Prev: Introdução a solve_rec,  Up: solve_rec

66.2 Definições para solve_rec
==============================

 -- Função: reduce_order (<rec>, <sol>, <var>)

     Reduz a ordem de recorrência linear <rec> quando uma solução
     particular <sol> for conhecida.  A recorrência reduzida pode ser
     usada para pegar outras soluções.

     Exemplo:

          (%i3) rec: x[n+2] = x[n+1] + x[n]/n;
                                                x
                                                 n
          (%o3)               x      = x      + --
                               n + 2    n + 1   n
          (%i4) solve_rec(rec, x[n]);
          WARNING: found some hypergeometrical solutions!
          (%o4)                    x  = %k  n
                                    n     1
          (%i5) reduce_order(rec, n, x[n]);
          (%t5)                    x  = n %z
                                    n       n

                                     n - 1
                                     ====
                                     \
          (%t6)                %z  =  >     %u
                                 n   /        %j
                                     ====
                                     %j = 0

          (%o6)             (- n - 2) %u     - %u
                                        n + 1     n
          (%i6) solve_rec((n+2)*%u[n+1] + %u[n], %u[n]);
                                               n
                                      %k  (- 1)
                                        1
          (%o6)                 %u  = ----------
                                  n    (n + 1)!

          So the general solution is

                       n - 1
                       ====        n
                       \      (- 1)
                 %k  n  >    -------- + %k  n
                   2   /     (n + 1)!     1
                       ====
                       n = 0

 -- Variável de opção: simplify_products
     Valor por omissão: ‘true’

     Se ‘simplify_products’ for ‘true’, ‘solve_rec’ irá tentar
     simplificar produtos no resultado.

     Veja também: ‘solve_rec’.

 -- Função: simplify_sum (<expr>)

     Tenta simplificar todos os somatórios que aparecem na <expr> para
     uma forma a mais simplificada possível.

     ‘simplify_sum’ usa os algoritmos de Gosper e de Zeilberger para
     simplificar somatórios.

     Para usar essa função primeiramente chame o pacote ‘simplify_sum’
     com ‘load("simplify_sum")’.

     Exemplo:

          (%i1) load("simplify_sum")$
          (%i2) sum(binom(n+k,k)/2^k, k, 0, n) + sum(binom(2*n, 2*k), k, 0, n);
                   n                            n
                  ====                         ====
                  \      binomial(n + k, k)    \
          (%o2)    >     ------------------ +   >    binomial(2 n, 2 k)
                  /               k            /
                  ====           2             ====
                  k = 0                        k = 0
          (%i3) simplify_sum(%);
                                         n
                                        4     n
          (%o3)                         -- + 2
                                        2

 -- Função: solve_rec (<eqn>, <var>, [<init>])
     Encontra soluções hipergeométricas para a recorrência linear <eqn>
     com coeficientes polinomiais na variável <var>.  Argumentos
     opcionais <init> são as condições iniciais.

     ‘solve_rec’ pode resolver recorrências lineares com coeficientes
     constantes, encontrando soluções hipergeométricas para recorrências
     lineares homogêneas com coeficientes polinomiais, soluções
     racionais para recorrências lineares com coeficientes polinomiais e
     pode resolver recorrências do tipo de Ricatti.

     Note que o tempo de execução do algoritmo usado para encontrar
     soluções hipergeométricas aumenta exponencialmente com o grau do
     coeficiente lider e guia.

     Para usar essa função primeiramente chame o pacote ‘solve_rec’ com
     ‘load("solve_rec");’.

     Exemplo de recorrência linear com coeficientes constantes:

          (%i2) solve_rec(a[n]=a[n-1]+a[n-2]+n/2^n, a[n]);
                                  n          n
                     (sqrt(5) - 1)  %k  (- 1)
                                      1           n
          (%o2) a  = ------------------------- - ----
                 n               n                  n
                                2                5 2
                                                          n
                                             (sqrt(5) + 1)  %k
                                                              2    2
                                           + ------------------ - ----
                                                      n              n
                                                     2            5 2

     Exemplo de recorrência linear com coeficientes polinomiais:

          (%i7) 2*x*(x+1)*y[x] - (x^2+3*x-2)*y[x+1] + (x-1)*y[x+2];
                                   2
          (%o7) (x - 1) y      - (x  + 3 x - 2) y      + 2 x (x + 1) y
                         x + 2                   x + 1                x
          (%i8) solve_rec(%, y[x], y[1]=1, y[3]=3);
                                        x
                                     3 2    x!
          (%o9)                 y  = ---- - --
                                 x    4     2

     Exemplo de recorrência do tipo de Ricatti:

          (%i2) x*y[x+1]*y[x] - y[x+1]/(x+2) + y[x]/(x-1) = 0;
                                      y         y
                                       x + 1     x
          (%o2)         x y  y      - ------ + ----- = 0
                           x  x + 1   x + 2    x - 1
          (%i3) solve_rec(%, y[x], y[3]=5)$
          (%i4) ratsimp(minfactorial(factcomb(%)));
                                             3
                                         30 x  - 30 x
          (%o4) y  = - -------------------------------------------------
                 x        6      5       4       3       2
                       5 x  - 3 x  - 25 x  + 15 x  + 20 x  - 12 x - 1584

     Veja também: ‘solve_rec_rat’, ‘simplify_products’, e
     ‘product_use_gamma’.

 -- Função: solve_rec_rat (<eqn>, <var>, [<init>])

     Encontra soluções racionais para recorrências lineares.  Veja
     solve_rec para uma descrição dos argumentos.

     Para usar essa função primeirametne chame o pacote ‘solve_rec’ com
     ‘load("solve_rec");’.

     Exemplo:

          (%i1) (x+4)*a[x+3] + (x+3)*a[x+2] - x*a[x+1] + (x^2-1)*a[x];
          (%o1)  (x + 4) a      + (x + 3) a      - x a
                          x + 3            x + 2      x + 1
                                                             2
                                                         + (x  - 1) a
                                                                      x
          (%i2) solve_rec_rat(% = (x+2)/(x+1), a[x]);
                                 1
          (%o2)      a  = ---------------
                      x   (x - 1) (x + 1)

     Veja também: ‘solve_rec’.

 -- Variável de opção: product_use_gamma
     Valor por omissão: ‘true’

     Quando simplificando produtos, ‘solve_rec’ introduz a função gama
     dentro da expressão se ‘product_use_gamma’ for ‘true’.

     Veja também: ‘simplify_products’, ‘solve_rec’.

 -- Função: summand_to_rec (<summand>, <k>, <n>)
 -- Função: summand_to_rec (<summand>, [<k>, <lo>, <hi>], <n>)

     Retorna a recorrência satisfeita pelo somatório

               sup
              ====
              \
               >     x
              /
              ====
            k = inf

     onde x é hipergeométrico em <k> e <n>.  SE <inf> e <sup> forem
     omitidos, são assumidos como sendo ‘inf = -inf’ e ‘sup = inf’.

     Para usar essa função primeiro chame o pacote ‘simplify_sum’ com
     ‘load("simplify_sum")’.

     Exemplo:

          (%i1) load("simplify_sum")$
          (%i2) summand: binom(n,k);
          (%o2)                           binomial(n, k)
          (%i3) summand_to_rec(summand,k,n);
          (%o3)                      2 sm  - sm      = 0
                                         n     n + 1
          (%i7) summand: binom(n, k)/(k+1);
                                          binomial(n, k)
          (%o7)                           --------------
                                              k + 1
          (%i8) summand_to_rec(summand, [k, 0, n], n);
          (%o8)               2 (n + 1) sm  - (n + 2) sm      = - 1
                                          n             n + 1


File: maxima.info,  Node: stats,  Next: stirling,  Prev: solve_rec,  Up: Top

67 stats
********

* Menu:

* Introdução a stats::
* Definições para inference_result::
* Definições para stats::
* Definições para distribuições especiais::


File: maxima.info,  Node: Introdução a stats,  Next: Definições para inference_result,  Prev: Top,  Up: Top

67.1 Introdução a stats
=======================

O pacote ‘stats’ contém um conjunto de procedimentos de inferência
clássica estatística e procedimentos de teste.

Todas essas funções retornam um objecto do Maxima chamado
‘inference_result’ que contém os resultados necessários para inferências
de manipulação e tomada de decisões.

A variável global ‘stats_numer’ controla se resultados são mostrados em
ponto flutuante ou simbólico e no formato racional; seu valor padrão é
‘true’ e os resultados são retornados no formato de ponto flutuante.

O pacote ‘descriptive’ contém alguns utilitários para manipular
estruturas de dados (listas e matrizes); por exemplo, para extrair
subamostras.  O pacote ‘descriptive’ também contém alguns exemplos sobre
como usar o pacote ‘numericalio’ para ler dados a partir de ficheiro no
formato texto plano.  Veja ‘descriptive’ e ‘numericalio’ para maiores
detalhes.

O pacote ‘stats’ precisa dos pacotes ‘descriptive’, ‘distrib’ e
‘inference_result’.

Para comentários, erros ou sugestões, por favor contate o autor em

<’mario AT edu DOT xunta DOT es’>.


File: maxima.info,  Node: Definições para inference_result,  Next: Definições para stats,  Prev: Introdução a stats,  Up: Top

67.2 Definições para inference_result
=====================================

 -- Função: inference_result (<título>, <valores>, <números>)

     Constrói um objecto ‘inference_result’ do tipo retornado pelas
     funções stats.  O argumento <título> é uma sequência de caracteres
     do Maxima co o nome do procedimento; <valores> é uma lissta com
     elementos da forma ‘símbolo = valor’ e <números> é uma lista com
     números inteiros positivos no intervalo de um para
     ‘length(<valores>)’, indicando que valores serão mostrados por
     padrão.

     Exemplo:

     Este é um exemplo que mostras os resultados associados a um
     retángulo.  O título deste bojeto é a sequência de caraceteres
     ‘"Retângulo"’, o qual armazena cinco resultados, a saber, ‘'base’,
     ‘'altura’, ‘'diagonal’, ‘'área’ y ‘'perímetro’, porém só mostra o
     primeiro, segundo, quinto e quarto resultado.  O resultado
     ‘'diagonal’ também é armazenado neste objecto, no entanto não é
     mostrado por padrão; para se ter acesso a este valor, faz-se uso da
     função ‘take_inference’.

          (%i1) load("inference_result")$
          (%i2) b: 3$ h: 2$
          (%i3) inference_result("Retângulo",
                                  ['base=b,
                                   'altura=h,
                                   'diagonal=sqrt(b^2+h^2),
                                   'área=b*h,
                                   'perímetro=2*(b+h)],
                                  [1,2,5,4] );
                                  |   Retângulo
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   altura = 2
                                  |
                                  | perímetro = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('diagonal,%);
          (%o4)                        sqrt(13)

     Veja também ‘take_inference’.

 -- Função: inferencep (<obj>)

     Retorna ‘true’ ou ‘false’, dependendo se <obj> é um objecto
     ‘inference_result’ ou não.

 -- Função: items_inference (<obj>)

     Retorna uma lista com os nomes dos itens em <obj>, que devem ser um
     objecto ‘inference_result’.

     Exemplo:

     O objecto ‘inference_result’ armazena dois valores, a saber ‘'pi’ e
     ‘'e’, mas somente o segundo é mostrado.  A função ‘items_inference’
     retorna os nomes de todos os itens, não importa se eles são ou não
     mostrados.

          (%i1) load("inference_result")$
          (%i2) inference_result("Hi", ['pi=%pi,'e=%e],[2]);
                                      |   Hi
          (%o2)                       |
                                      | e = %e
          (%i3) items_inference(%);
          (%o3)                        [pi, e]

 -- Função: take_inference (<n>, <obj>)
 -- Função: take_inference (<nome>, <obj>)
 -- Função: take_inference (<lista>, <obj>)

     Retorna o <n>-ésimo valor armazenado em <obj> se <n> for um inteiro
     positivo, ou o item chamado <nome> se esse for o nome de um item.
     Se o primeiro argumento for uma lista de números e/ou símbolos, a
     função ‘take_inference’ retorna uma lista com os resultados
     correspondentes.

     Exemplo:

     Fornece um objecto ‘inference_result’, a função ‘take_inference’ é
     chamada com o objectivo de extrair alguma informação armazenada
     nesse objecto.

          (%i1) load("inference_result")$
          (%i2) b: 3$ h: 2$
          (%i3) sol: inference_result("Retângulo",
                                      ['base=b,
                                       'altura=h,
                                       'diagonal=sqrt(b^2+h^2),
                                       'area=b*h,
                                       'perímetro=2*(b+h)],
                                      [1,2,5,4] );
                                  |   Retângulo
                                  |
                                  |    base = 3
                                  |
          (%o3)                   |   altura = 2
                                  |
                                  | perímetro = 10
                                  |
                                  |    area = 6
          (%i4) take_inference('base,sol);
          (%o4)                           3
          (%i5) take_inference(5,sol);
          (%o5)                          10
          (%i6) take_inference([1,'diagonal],sol);
          (%o6)                     [3, sqrt(13)]
          (%i7) take_inference(items_inference(sol),sol);
          (%o7)                [3, 2, sqrt(13), 6, 10]

     Veja também ‘inference_result’ e ‘take_inference’.


File: maxima.info,  Node: Definições para stats,  Next: Definições para distribuições especiais,  Prev: Definições para inference_result,  Up: Top

67.3 Definições para stats
==========================

 -- Variável de opção: stats_numer
     Valor por omissão: ‘true’

     Se ‘stats_numer’ for ‘true’, funções de inferência estatística
     retornam seus resultados em números com ponto flutuante.  Se
     ‘stats_numer’ for ‘false’, resultados são fornecidos em formato
     simbólico e racional.

 -- Função: test_mean (<x>)
 -- Função: test_mean (<x>, <opção_1>, <opção_2>, ...)

     Esse é o teste-<t> de média.  O argumento <x> é uma lista ou uma
     matriz coluna contendo uma amostra unidimensional.  ‘test_mean’
     tamb;em executa um teste assintótico baseado no Teorema do Limite
     Central se a opção ‘'asymptotic’ for ‘true’.

     Opções:

        • ‘'mean’, o valor padrão é ‘0’, é o valor da média a ser
          verificado.

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

        • ‘'dev’, o valor padrão é ‘'unknown’, corresponde ao valor do
          desvio padrão quando esse valor de desvio padrão for
          conhecido; valores válidos são: ‘'unknown’ ou uma expressão
          positiva.

        • ‘'conflevel’, o valor padrão é ‘95/100’, nível de confidência
          para o intervalo de confidência; deve ser uma expressão que
          toma um valor em (0,1).

        • ‘'asymptotic’, o valor padrão é ‘false’, indica se ‘test_mean’
          exeecuta um teste-<t> exato ou um teste assintótico
          baseando-se no Teorema do Limite Central; valores válidos são
          ‘true’ e ‘false’.

     A saída da função ‘test_mean’ é um objecto ‘inference_result’ do
     Maxima mostrando os seguintes resultados:

       1. ‘'mean_estimate’: a média da amostra.

       2. ‘'conf_level’: nível de confidência seleccionado pelo
          utilizador.

       3. ‘'conf_interval’: intervalo de confidência para a média da
          população.

       4. ‘'method’: procedimento de inferência.

       5. ‘'hypotheses’: hipótese do nulo e hipótese alternativa a ser
          testada.

       6. ‘'statistic’: valor da amostra estatística a ser usado para
          testar a hipótese do nulo.

       7. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seus parâmetro(s).

       8. ‘'p_value’: valores de p do teste.

     Exemplos:

     Executa um teste-<t> exato com variância desconhecida.  A hipótese
     do nulo é H_0: mean=50 contra a alternativa unilatera H_1: mean<50;
     conforme os resultados, o valor de p é muito grande, não existem
     evidências paa rejeitar H_0.

          (%i1) load("stats")$
          (%i2) data: [78,64,35,45,45,75,43,74,42,42]$
          (%i3) test_mean(data,'conflevel=0.9,'alternative='less,'mean=50);
                    |                 MEAN TEST
                    |
                    |            mean_estimate = 54.3
                    |
                    |              conf_level = 0.9
                    |
                    | conf_interval = [minf, 61.51314273502712]
                    |
          (%o3)     |  method = Exact t-test. Unknown variance.
                    |
                    | hypotheses = H0: mean = 50 , H1: mean < 50
                    |
                    |       statistic = .8244705235071678
                    |
                    |       distribution = [student_t, 9]
                    |
                    |        p_value = .7845100411786889

     Nesta ocasião Maxima executa um testte assintótico, baseado no
     Teorema do Limite Central.  A hipótese do nulo é H_0: equal(mean,
     50) contra a alternativa de duas vias H_1: not equal(mean, 50);
     conforme os resultados, o valor de p é muito pequeno, H_0 pode ser
     rejeitado em favor da alternativa H_1.  Note que, como indicado
     pela componente ‘Method’, esse procedimento pode ser aplicado a
     grandes amostras.

          (%i1) load("stats")$
          (%i2) test_mean([36,118,52,87,35,256,56,178,57,57,89,34,25,98,35,
                        98,41,45,198,54,79,63,35,45,44,75,42,75,45,45,
                        45,51,123,54,151],
                        'asymptotic=true,'mean=50);
                    |                       MEAN TEST
                    |
                    |           mean_estimate = 74.88571428571429
                    |
                    |                   conf_level = 0.95
                    |
                    | conf_interval = [57.72848600856194, 92.04294256286663]
                    |
          (%o2)     |    method = Large sample z-test. Unknown variance.
                    |
                    |       hypotheses = H0: mean = 50 , H1: mean # 50
                    |
                    |             statistic = 2.842831192874313
                    |
                    |             distribution = [normal, 0, 1]
                    |
                    |             p_value = .004471474652002261

 -- Função: test_means_difference (<x1>, <x2>)
 -- Função: test_means_difference (<x1>, <x2>, <opção_1>, <opção_2>,
          ...)

     Esse é o teste-<t> de diferença de médias entre duas amostras.  Os
     argumentos <x1> e <x2> são listas ou matrizes colunas contendo duas
     amostras independentes.  No caso de diferentes variâncias
     desconhecidas (veja opções ‘'dev1’, ‘'dev2’ e ‘'varequal’ abaixo),
     os graus de liberdade são calculados por meio da aproximação de
     Welch.  ‘test_means_difference’ também executa um teste assintótico
     baseado no Teorema do Limite Central se a opção ‘'asymptotic’ for
     escolhida para ‘true’.

     Opções:

        • 
        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

        • ‘'dev1’, o valor padrão é ‘'unknown’, é o valor do desvio
          padrão da amostra <x1> quando esse desvio for conhecido;
          valores válidos são: ‘'unknown’ ou uma expressão positiva.

        • ‘'dev2’, o valor padrão é ‘'unknown’, é o valor do desvio
          padrão da amostra <x2> quando esse desvio for conhecido;
          valores válidos são: ‘'unknown’ ou uma expressão positiva.

        • ‘'varequal’, o valor padrão é ‘false’, se variâncias podem
          serem consideradas como iguais ou não; essa opção tem efeito
          somente quando ‘'dev1’ e/ou ‘'dev2’ forem ‘'unknown’.

        • ‘'conflevel’, o valor padrão é ‘95/100’, nível de confidência
          para o intervalo de confidência; deve ser uma expressão que
          toma valores em (0,1).

          Nota de Tradução: (0,1) representa intervalo aberto.

        • ‘'asymptotic’, o valor padrão é ‘false’, indica se
          ‘test_means_difference’ executa um teste-<t> exato ou um teste
          assíntótico baseando-se no Teorema do Limite Central; valores
          válidos são ‘true’ e ‘false’.

     A saída da função ‘test_means_difference’ é um objecto
     ‘inference_result’ do Maxima mostrando os seguintes resultados:

       1. ‘'diff_estimate’: a diferença de médias estimadas.

       2. ‘'conf_level’: nível de confidência seleccionado pelo
          utilizador.

       3. ‘'conf_interval’: intervalo de confidência para a diferença de
          médias.

       4. ‘'method’: procedimento de inferência.

       5. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       6. ‘'statistic’: valor da amostra estatística usado para testar a
          hipótese do nulo.

       7. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seu(s) parâmetro(s).

       8. ‘'p_value’: valor de p do teste.

     Exemplos:

     A igualdade de médias é testada com duas pequenas amostras <x> e
     <y>, contra a alternativa H_1: m_1>m_2, sendo m_1 e m_2 as médias
     das populações; variâncias são desconhecidas e supostamente
     admitidas para serem diferentes.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_means_difference(x,y,'alternative='greater);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |    conf_interval = [- .04597417812882298, inf]
                      |
          (%o4)       |        method = Exact t-test. Welch approx.
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.838004300728477
                      |
                      |    distribution = [student_t, 8.62758740184604]
                      |
                      |            p_value = .05032746527991905

     O mesmo teste que antes, mas agora as variâncias são admitidas
     serem supostamente iguais.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: matrix([1.2],[6.9],[38.7],[20.4],[17.2])$
          (%i4) test_means_difference(x,y,'alternative='greater,'varequal=true);
                      |              DIFFERENCE OF MEANS TEST
                      |
                      |         diff_estimate = 20.31999999999999
                      |
                      |                 conf_level = 0.95
                      |
                      |     conf_interval = [- .7722627696897568, inf]
                      |
          (%o4)       |   method = Exact t-test. Unknown equal variances
                      |
                      | hypotheses = H0: mean1 = mean2 , H1: mean1 > mean2
                      |
                      |           statistic = 1.765996124515009
                      |
                      |           distribution = [student_t, 9]
                      |
                      |            p_value = .05560320992529344

 -- Função: test_variance (<x>)
 -- Função: test_variance (<x>, <opção_1>, <opção_2>, ...)

     Esse é o teste da variância <chi^2>.  O argumento <x> é uma lista
     ou uma matriz coluna contendo uma amostra unidimensional tomada
     entre a população normal.

     Opções:

        • ‘'mean’, o valor padrão é ‘'unknown’, é a média da população,
          quando for conhecida.

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

        • ‘'variance’, o valor padrão é ‘1’, isso é o valor (positivo)
          da variância a ser testado.

        • ‘'conflevel’, o valor padrão é ‘95/100’, nível de confidência
          para o intervalo de confidência; deve ser uma expressão que
          toma valores em (0,1).

     A saída da função ‘test_variance’ está no objecto
     ‘inference_result’ do Maxima mostrando os seguintes resultados:

       1. ‘'var_estimate’: a variância da amostra.

       2. ‘'conf_level’: nível de confidência seleccionado pelo
          utilizador.

       3. ‘'conf_interval’: intervalo de confidência para a variância da
          população.

       4. ‘'method’: procedimento de inferência.

       5. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       6. ‘'statistic’: valor da amostra estatística usado para testar a
          hipótese do nulo.

       7. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seu parâmetro.

       8. ‘'p_value’: o valor de p do teste.

     Exemplos:

     Isso é testado se a variância de uma população com média
     desconhhecida for igual ou maior que 200.

          (%i1) load("stats")$
          (%i2) x: [203,229,215,220,223,233,208,228,209]$
          (%i3) test_variance(x,'alternative='greater,'variance=200);
                       |                  VARIANCE TEST
                       |
                       |              var_estimate = 110.75
                       |
                       |                conf_level = 0.95
                       |
                       |     conf_interval = [57.13433376937479, inf]
                       |
          (%o3)        | method = Variance Chi-square test. Unknown mean.
                       |
                       |    hypotheses = H0: var = 200 , H1: var > 200
                       |
                       |                 statistic = 4.43
                       |
                       |             distribution = [chi2, 8]
                       |
                       |           p_value = .8163948512777689

 -- Função: test_variance_ratio (<x1>, <x2>)
 -- Função: test_variance_ratio (<x1>, <x2>, <opção_1>, <opção_2>, ...)

     Isso é o teste <F> da razão de variância para duas populações
     normais.  Os argumentos <x1> e <x2> são listas ou matrizes colunas
     contendo duas amostras independentes.

     Opções:

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

        • ‘'mean1’, o valor padrão é ‘'unknown’, quando for conhecida,
          isso é a média da população da qual <x1> foi tomada.

        • ‘'mean2’, o valor padrão é ‘'unknown’, quando for conhecida,
          isso é a média da população da qual <x2> foi tomada.

        • ‘'conflevel’, o valor padrão é ‘95/100’, nível de confidência
          para o intervalo de confidência da razão; deve ser uma
          expressão que tome valores em (0,1).

     A saída da função ‘test_variance_ratio’ é um objecto
     ‘inference_result’ do Maxima mostrando os seguintes resultados:

       1. ‘'ratio_estimate’: a razão de variância da amostra.

       2. ‘'conf_level’: nível de confidência seleccionado pelo
          utilizador.

       3. ‘'conf_interval’: intervalo de confidência para a razão de
          variância.

       4. ‘'method’: procedimento de inferência.

       5. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       6. ‘'statistic’: valor da amostra estatística usado para testar a
          hipótese do nulo.

       7. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seus parâmetros.

       8. ‘'p_value’: o valor de p do teste.

     Exemplos:

     a igualdade das variâncias de duas populações normais é verificado
     contra a alternativa que a primeira é maior que a segunda.

          (%i1) load("stats")$
          (%i2) x: [20.4,62.5,61.3,44.2,11.1,23.7]$
          (%i3) y: [1.2,6.9,38.7,20.4,17.2]$
          (%i4) test_variance_ratio(x,y,'alternative='greater);
                        |              VARIANCE RATIO TEST
                        |
                        |       ratio_estimate = 2.316933391522034
                        |
                        |               conf_level = 0.95
                        |
                        |    conf_interval = [.3703504689507268, inf]
                        |
          (%o4)         | method = Variance ratio F-test. Unknown means.
                        |
                        | hypotheses = H0: var1 = var2 , H1: var1 > var2
                        |
                        |         statistic = 2.316933391522034
                        |
                        |            distribution = [f, 5, 4]
                        |
                        |          p_value = .2179269692254457

 -- Função: test_sign (<x>)
 -- Função: test_sign (<x>, <opção_1>, <opção_2>, ...)

     Esse é o teste de sinal não paramétrico para a mediana de uma
     população contínua.  O argumento <x> é uma lista ou uma matriz
     coluna contendo uma amostra unidimensional.

     Opções:

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

        • ‘'median’, o valor padrão é ‘0’, é o valor da mediana a ser
          verificado.

     A saída da função ‘test_sign’ é um objecto ‘inference_result’ do
     Maxima mostrando os seguintes resultados:

       1. ‘'med_estimate’: a mediana da amostra.

       2. ‘'method’: procedimento de inferência.

       3. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       4. ‘'statistic’: valor da amostra estatística usada para testar a
          hipótese do nulo.

       5. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seu(s) parâmetro(s).

       6. ‘'p_value’: o valor de p do teste.

     Exemplos:

     Verifica se a população da qual a amostra foi tomada tem mediana 6,
     contra a alternativa H_1: median > 6.

          (%i1) load("stats")$
          (%i2) x: [2,0.1,7,1.8,4,2.3,5.6,7.4,5.1,6.1,6]$
          (%i3) test_sign(x,'median=6,'alternative='greater);
                         |                  SIGN TEST
                         |
                         |              med_estimate = 5.1
                         |
                         |      method = Non parametric sign test.
                         |
          (%o3)          | hypotheses = H0: median = 6 , H1: median > 6
                         |
                         |                statistic = 7
                         |
                         |      distribution = [binomial, 10, 0.5]
                         |
                         |         p_value = .05468749999999989

 -- Função: test_signed_rank (<x>)
 -- Função: test_signed_rank (<x>, <opção_1>, <opção_2>, ...)

     Esse é o teste de ranque sinalizado de Wilcoxon para fazer
     inferências sobre a mediana de uma população contínua.  O argumento
     <x> é uma lista ou uma matriz coluna contendo uma amostra
     unidimensional.  Executa uma aproximação normal se o tamanho da
     amostra for maior que 20, ou se existirem zeros ou houverem
     empates.

     Veja também ‘pdf_rank_test’ e ‘cdf_rank_test’.

     Opções:

        • ‘'median’, o valor padrão é ‘0’, é o valor da mediana a ser
          verificado.

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

     A saída da função ‘test_signed_rank’ é um objecto
     ‘inference_result’ do Maxima com os seguintes resultados:

       1. ‘'med_estimate’: a mediana da amostra.

       2. ‘'method’: procedimento de inferência.

       3. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       4. ‘'statistic’: valor da amostra estatística usado para testar a
          hipótese do nulo.

       5. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seu(s) parâmetro(s).

       6. ‘'p_value’: o valor de p do teste.

     Exemplos:

     Verifica a hipótese do nulo H_0: median = 15 contra a alternativa
     H_1: median > 15.  Esse é um teste exato, ua vez que não exite
     empates.

          (%i1) load("stats")$
          (%i2) x: [17.1,15.9,13.7,13.4,15.5,17.6]$
          (%i3) test_signed_rank(x,median=15,alternative=greater);
                           |             SIGNED RANK TEST
                           |
                           |           med_estimate = 15.7
                           |
                           |           method = Exact test
                           |
          (%o3)            | hypotheses = H0: med = 15 , H1: med > 15
                           |
                           |              statistic = 14
                           |
                           |     distribution = [signed_rank, 6]
                           |
                           |            p_value = 0.28125

     Verifica a hipótese do nulo H_0: equal(median, 2.5) contra a
     alternativa H_1: not equal(median, 2.5).  Esse é um teste
     aproximado, uma vez que ocorrem empates.

          (%i1) load("stats")$
          (%i2) y:[1.9,2.3,2.6,1.9,1.6,3.3,4.2,4,2.4,2.9,1.5,3,2.9,4.2,3.1]$
          (%i3) test_signed_rank(y,median=2.5);
                       |                 SIGNED RANK TEST
                       |
                       |                med_estimate = 2.9
                       |
                       |          method = Asymptotic test. Ties
                       |
          (%o3)        |    hypotheses = H0: med = 2.5 , H1: med # 2.5
                       |
                       |                 statistic = 76.5
                       |
                       | distribution = [normal, 60.5, 17.58195097251724]
                       |
                       |           p_value = .3628097734643669

 -- Função: test_rank_sum (<x1>, <x2>)
 -- Função: test_rank_sum (<x1>, <x2>, <opção_1>)

     Esse é o teste de Wilcoxon-Mann-Whitney para comparação das
     medianas de duas populações contínuas.  Os primeiros dois
     argumentos <x1> e <x2> são listas ou matrizes colunas com os dados
     de duas amostras independentes.  Executa aproximação normal se
     quaisquer dos tamanhos de amostra for maior que 10, ou se houverem
     empates.

     Opção:

        • ‘'alternative’, o valor padrão é ‘'twosided’, é a hipótese
          alternativa; valores válidos são: ‘'twosided’, ‘'greater’ e
          ‘'less’.

     A saída da função ‘test_rank_sum’ é um objecto ‘inference_result’
     do Maxima com os seguintes resultados:

       1. ‘'method’: procedimento de inferência.

       2. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa a
          serem testadas.

       3. ‘'statistic’: valor da amostra estatística usada para testar a
          hipótese do nulo.

       4. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seus parâmetros.

       5. ‘'p_value’: o valor de p do teste.

     Exemplos:

     Verifica se populações possuem medianas similares.  Tamanhos de
     amotra são pequenos e é feito um teste exato.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) y:[21,18,25,14,52,65,40,43]$
          (%i4) test_rank_sum(x,y);
                        |                 RANK SUM TEST
                        |
                        |              method = Exact test
                        |
                        | hypotheses = H0: med1 = med2 , H1: med1 # med2
          (%o4)         |
                        |                 statistic = 22
                        |
                        |        distribution = [rank_sum, 9, 8]
                        |
                        |          p_value = .1995886466474702

     Agora, com grandes amostras e empates, o procedimento faz
     aproximação norma.  A hipótese alternativa é H_1: median1 <
     median2.

          (%i1) load("stats")$
          (%i2) x: [39,42,35,13,10,23,15,20,17,27]$
          (%i3) y: [20,52,66,19,41,32,44,25,14,39,43,35,19,56,27,15]$
          (%i4) test_rank_sum(x,y,'alternative='less);
                       |                  RANK SUM TEST
                       |
                       |          method = Asymptotic test. Ties
                       |
                       |  hypotheses = H0: med1 = med2 , H1: med1 < med2
          (%o4)        |
                       |                 statistic = 48.5
                       |
                       | distribution = [normal, 79.5, 18.95419580097078]
                       |
                       |           p_value = .05096985666598441

 -- Função: test_normality (<x>)

     Teste de Shapiro-Wilk para normalidade.  O argumento <x> é uma
     lista de números, e o tamanho da amostra deve ser maior que 2 e
     menor ou igua a 5000, de outra forma, a função ‘test_normality’
     sinaliza com um erro.

     Referência:

     [1] Algorithm AS R94, Applied Statistics (1995), vol.44, no.4,
     547-551

     A saída da função ‘test_normality’ é um objecto ‘inference_result’
     do Maxima com os seguintes resultados:

       1. ‘'statistic’: valor do <W> estatístico.

       2. ‘'p_value’: valor de p sob a hipótese de normalidade.

     Exemplos:

     Verifica a normalidade de uma população, baseada em uma amostra de
     tamanho 9.

          (%i1) load("stats")$
          (%i2) x:[12,15,17,38,42,10,23,35,28]$
          (%i3) test_normality(x);
                                 |      SHAPIRO - WILK TEST
                                 |
          (%o3)                  | statistic = .9251055695162436
                                 |
                                 |  p_value = .4361763918860381

 -- Função: simple_linear_regression (<x>)
 -- Função: simple_linear_regression (<x> <opção_1>)

     Regressão linear simples, y_i=a+b x_i+e_i, onde os e_i são
     N(0,sigma) variáveis aleatórias independentes.  O argumento <x>
     deve ser uma matriz de duas colunas ou uma lista de pares.

     Opções:

        • ‘'conflevel’, o valor padrão é ‘95/100’, nível de confidência
          para o intervalo de confidência; isso deve ser uma expressão
          que tome valores em (0,1).

        • ‘'regressor’, o valor padrão é ‘'x’, nome da variável
          independente.

     A saída da função ‘simple_linear_regression’ é um objecto
     ‘inference_result’ do Maxima com os seguintes resultados:

       1. ‘'model’: a equação ajustada.  Útil para fazer novas
          previsões.  Veja exemplos abaixo.

       2. ‘'means’: média de duas variáveis pseudo-aleatórias.

       3. ‘'variances’: variâncias de ambas as variáveis.

       4. ‘'correlation’: coeficiente de correlação.

       5. ‘'adc’: coeficiente de determinação ajustado.

       6. ‘'a_estimation’: estimador do parâmetro <a>.

       7. ‘'a_conf_int’: intervalo de confidência do parâmetro <a>.

       8. ‘'b_estimation’: estimador do parâmetro <b>.

       9. ‘'b_conf_int’: intervalo de confidência do parâmetro <b>.

       10. ‘'hypotheses’: a hipótese do nulo e a hipótese alternativa
          sobre o parâmetro <b>.

       11. ‘'statistic’: valor da amostra estatística usado para testar
          a hipótese do nulo.

       12. ‘'distribution’: distribuição da amostra estatística,
          juntamente com seu parâmetro.

       13. ‘'p_value’: o valor de p do teste sobre <b>.

       14. ‘'v_estimation’: estimador de variância imparcial, ou
          variância residual.

       15. ‘'v_conf_int’: intervalo de confidência da variância.

       16. ‘'cond_mean_conf_int’: intervalo de confidência paa a média
          condicionada.  Veja exemplos abaixo.

       17. ‘'new_pred_conf_int’: intervalo de confidência para uma nova
          previsão.  Veja exemplos abaixo.

       18. ‘'residuals’: lista de pares (previsão, resíduo), ordenados
          em relação às previsões.  Útil para achar o melhor da análise
          de ajuste.  Veja exemplos abaixo.

     Somente os itens 1, 4, 14, 9, 10, 11, 12, e 13 acima, nessa ordem,
     são mostrados por padrão.  Os restantes escondem-se até que o
     utilizador faça uso de funções ‘items_inference’ e
     ‘take_inference’.

     Exemplo:

     Ajustando um modelo linear para uma amostras de duas variáveis.  A
     entrada ‘%i4’ monta p gráfico da amostra junto com a linha de
     regressão; a entrada ‘%i5’ calcula ‘y’ dado ‘x=113’; a média e o
     intervalo de confidência para uma nova previsão quando ‘x=113’ são
     também calculados.

          (%i1) load("stats")$
          (%i2) s:[[125,140.7],[130,155.1],[135,160.3],[140,167.2],[145,169.8]]$
          (%i3) z:simple_linear_regression(s,conflevel=0.99);
                     |               SIMPLE LINEAR REGRESSION
                     |
                     |   model = 1.405999999999985 x - 31.18999999999804
                     |
                     |           correlation = .9611685255255155
                     |
                     |           v_estimation = 13.57966666666665
                     |
          (%o3)      | b_conf_int = [.04469633662525263, 2.767303663374718]
                     |
                     |          hypotheses = H0: b = 0 ,H1: b # 0
                     |
                     |            statistic = 6.032686683658114
                     |
                     |            distribution = [student_t, 3]
                     |
                     |             p_value = 0.0038059549413203
          (%i4) plot2d([[discrete, s], take_inference(model,z)],
                        [x,120,150],
                        [gnuplot_curve_styles, ["with points","with lines"]] )$
          (%i5) take_inference(model,z), x=133;
          (%o5)                         155.808
          (%i6) take_inference(means,z);
          (%o6)                     [135.0, 158.62]
          (%i7) take_inference(new_pred_conf_int,z), x=133;
          (%o7)              [132.0728595995113, 179.5431404004887]


File: maxima.info,  Node: Definições para distribuições especiais,  Prev: Definições para stats,  Up: Top

67.4 Definições para distribuições especiais
============================================

 -- Função: pdf_signed_rank (<x>, <n>)
     Função densidade de probabilidade da distribuição exacta da
     estatística do rank sinalizado.  O argumento <x> é um número real e
     <n> um inteiro positivo.

     Veja também ‘test_signed_rank’.

 -- Função: cdf_signed_rank (<x>, <n>)
     Função de densidade cumulativa da distribuição exacta da
     estatística do rank sinalizado.  O argumento <x> é um número real e
     <n> um inteiro positivo.

     Veja também ‘test_signed_rank’.

 -- Função: pdf_rank_sum (<x>, <n>, <m>)
     Função densidade de probabilidade da distribuição exacta da
     estatística do somatório do rank.  O argumento <x> é um número real
     e <n> e <m> são ambos inteiros positivos.

     Veja também ‘test_rank_sum’.

 -- Função: cdf_rank_sum (<x>, <n>, <m>)
     Função de densidade cumulativa da distribuição exacta da
     estatística do somatório do rank.  O argumento <x> é um número real
     e <n> e <m> são ambos inteiro positivos.

     Veja também ‘test_rank_sum’.


File: maxima.info,  Node: stirling,  Next: stringproc,  Prev: stats,  Up: Top

68 stirling
***********

* Menu:

* Definições para stirling::


File: maxima.info,  Node: Definições para stirling,  Prev: stirling,  Up: stirling

68.1 Definições para stirling
=============================

 -- Função: stirling (<z>,<n>)
     Substitui ‘gamma(x)’ pela fórmula de Stirling O(1/x^(2n-1)).
     Quando <n> for um inteiro estritamente negativo, sinaliza um erro.

     Referência: Abramowitz & Stegun, " Handbook of mathematical
     functions", 6.1.40.

     Exemplos:
          (%i1) load ("stirling")$

          (%i2) stirling(gamma(%alpha+x)/gamma(x),1);
                 1/2 - x             x + %alpha - 1/2
          (%o2) x        (x + %alpha)
                                             1           1
                                      --------------- - ---- - %alpha
                                      12 (x + %alpha)   12 x
                                    %e
          (%i3) taylor(%,x,inf,1);
                              %alpha       2    %alpha
                    %alpha   x       %alpha  - x       %alpha
          (%o3)/T/ x       + -------------------------------- + . . .
                                           2 x
          (%i4) map('factor,%);
                                                 %alpha - 1
                   %alpha   (%alpha - 1) %alpha x
          (%o4)   x       + -------------------------------
                                            2

     A função ‘stirling’ conhece a diferença entre a variável <gamma> e
     a função ‘gamma’:

          (%i5) stirling(gamma + gamma(x),0);
                                              x - 1/2   - x
          (%o5)    gamma + sqrt(2) sqrt(%pi) x        %e
          (%i6) stirling(gamma(y) + gamma(x),0);
                                   y - 1/2   - y
          (%o6) sqrt(2) sqrt(%pi) y        %e
                                                        x - 1/2   - x
                                   + sqrt(2) sqrt(%pi) x        %e

     Para usar essa função escreva primeiro ‘load("stirling")’.


File: maxima.info,  Node: stringproc,  Next: unit,  Prev: stirling,  Up: Top

69 stringproc
*************

* Menu:

* Introdução a manipulação de sequências de caracteres::
* Definições para entrada e saída::
* Definições para caracteres::
* Definições para sequências de caracteres::


File: maxima.info,  Node: Introdução a manipulação de sequências de caracteres,  Next: Definições para entrada e saída,  Prev: stringproc,  Up: stringproc

69.1 Introdução a manipulação de sequências de caracteres
=========================================================

O ficheiro ‘stringproc.lisp’ amplia a compatibilidade do Maxima de
trabalhar com sequências de caracteres e adiciona algumas funções úteis
a entrada e saída de dados.

Para esclarecimentos e erros por favor mande um e-mail para van.nek at
arcor.de .

Para disponibilizar ‘stringproc.lisp’ para uso digite
‘load("stringproc");’.

No Maxima uma sequência de caracteres é facilmente contruída digitando
"texto" (qualquer texto desejado entre aspas duplas).  Note que
sequências de caracteres do Maxima não são sequências de caracteres do
Lisp e vice-versa.  Testes podem ser concluídos com ‘stringp’ e
‘lstringp’.  Se por alguma razão tiver um valor, que é uma sequência de
caracteres do Lisp, talvez quando estiver usando a função ‘sconcat’ do
Maxima, poderá converter via ‘sunlisp’.

     (%i1) load("stringproc")$
     (%i2) m: "text";
     (%o2)                         text
     (%i3) [stringp(m),lstringp(m)];
     (%o3)                     [true, false]
     (%i4) l: sconcat("text");
     (%o4)                         text
     (%i5) [stringp(l),lstringp(l)];
     (%o5)                     [false, true]
     (%i6) stringp( sunlisp(l) );
     (%o6)                         true

Todas as funções em ‘stringproc.lisp’, que retornarem sequências de
caracteres, retornam sequências de caracteres do Maxima.

Caracteres são introduzidos como sequências de caracteres do Maxima de
comprimento 1.  Com certeza, esses caracteres não são caracteres do
Lisp.  Testes podem ser realizados com ‘charp’ ( ‘lcharp’ e conversões
do Lisp para o Maxima com ‘cunlisp’).

     (%i1) load("stringproc")$
     (%i2) c: "e";
     (%o2)                           e
     (%i3) [charp(c),lcharp(c)];
     (%o3)                     [true, false]
     (%i4) supcase(c);
     (%o4)                           E
     (%i5) charp(%);
     (%o5)                         true

Novamente, todas as funções em ‘stringproc.lisp’, que retornam
caracteres, retornam caracteres do Maxima.  devido a esse facto, que os
caracteres introduzidos são sequências de caracteres de comprimento 1,
pode usar muitas das funções de sequência de caracteres também para
caracteres.  Como visto, ‘supcase’ é um exemplo.

É importante saber, que o primeiro caractere em uma sequência de
caracteres do Maxima éstá na posição 1.  Isso é designado devido ao
facto de o primeiro elemento em uma lista do Maxima está na posição 1
também.  Veja definições de ‘charat’ e de ‘charlist’ para obter
exemplos.

Em aplicações fnções de sequência de caractere são muitas vezes usadas
quando estamos trabalhando com ficheiros.  Poderá encontrará algumas
funções úteis de fluxo e de impressão em ‘stringproc.lisp’.  O seguinte
exemplo mostra algumas das funções aqui introduzidas no trabalho.

Exemplo:

‘openw’ retorna um fluxo de saída para um ficheiro, ‘printf’ então
permite escrita formatada para esse ficheiro.  Veja ‘printf’ para
detalhes.

     (%i1) load("stringproc")$
     (%i2) s: openw("E:/file.txt");
     (%o2)                    #<output stream E:/file.txt>
     (%i3) for n:0 thru 10 do printf( s, "~d ", fib(n) );
     (%o3)                                done
     (%i4) printf( s, "~%~d ~f ~a ~a ~f ~e ~a~%",
                   42,1.234,sqrt(2),%pi,1.0e-2,1.0e-2,1.0b-2 );
     (%o4)                                false
     (%i5) close(s);
     (%o5)                                true

Após fechar o fluxo pode abrí-lo novamente, dessa vez com direção de
entrada.  ‘readline’ retorna a linha completa como uma sequência de
caracteres.  O pacote ‘stringproc’ agora oferece muitas funções para
manipulação de sequências de caracteres.  A troca de indicações/fichas
pode ser realizada por ‘split’ ou por ‘tokens’.

     (%i6) s: openr("E:/file.txt");
     (%o6)                     #<input stream E:/file.txt>
     (%i7) readline(s);
     (%o7)                     0 1 1 2 3 5 8 13 21 34 55
     (%i8) line: readline(s);
     (%o8)               42 1.234 sqrt(2) %pi 0.01 1.0E-2 1.0b-2
     (%i9) list: tokens(line);
     (%o9)           [42, 1.234, sqrt(2), %pi, 0.01, 1.0E-2, 1.0b-2]
     (%i10) map( parsetoken, list );
     (%o10)           [42, 1.234, false, false, 0.01, 0.01, false]

‘parsetoken’ somente analiza números inteiros e em ponto flutuante.  A
análise de símbolos ou grandes números em ponto flutuante precisa de
‘parse_string’, que pode ser disponibilizada para uso através de
‘eval_string.lisp’.

     (%i11) load("eval_string")$
     (%i12) map( parse_string, list );
     (%o12)           [42, 1.234, sqrt(2), %pi, 0.01, 0.01, 1.0b-2]
     (%i13) float(%);
     (%o13) [42.0, 1.234, 1.414213562373095, 3.141592653589793, 0.01, 0.01, 0.01]
     (%i14) readline(s);
     (%o14)                               false
     (%i15) close(s)$

‘readline’ retorna ‘false’ quado o fim de ficheiro acontecer.


File: maxima.info,  Node: Definições para entrada e saída,  Next: Definições para caracteres,  Prev: Introdução a manipulação de sequências de caracteres,  Up: stringproc

69.2 Definições para entrada e saída
====================================

Exemplo:

     (%i1) load("stringproc")$
     (%i2) s: openw("E:/file.txt");
     (%o2)                     #<output stream E:/file.txt>
     (%i3) control:
     "~2tAn atom: ~20t~a~%~2tand a list: ~20t~{~r ~}~%~2tand an integer: ~20t~d~%"$
     (%i4) printf( s,control, 'true,[1,2,3],42 )$
     (%o4)                                false
     (%i5) close(s);
     (%o5)                                true
     (%i6) s: openr("E:/file.txt");
     (%o6)                     #<input stream E:/file.txt>
     (%i7) while stringp( tmp:readline(s) ) do print(tmp)$
       An atom:          true
       and a list:       one two three
       and an integer:   42
     (%i8) close(s)$

 -- Função: close (<fluxo>)
     Fecha <fluxo> e retorna ‘true’ se <fluxo> tiver sido aberto
     anteriormente.

 -- Função: flength (<fluxo>)
     Retorna o número de elementos em <fluxo>.

 -- Função: fposition (<fluxo>)
 -- Função: fposition (<fluxo>, <pos>)
     Retorna a posição corrente em <fluxo>, se <pos> não está sendo
     usada.  Se <pos> estiver sendo usada, ‘fposition’ escolhe a posição
     em <fluxo>.  <pos> tem que ser um número positivo, o primeiro
     elemento em <fluxo> está na posição 1.

 -- Função: freshline ()
 -- Função: freshline (<fluxo>)
     escreve uma nova linha (em <fluxo>), se a posição actual não for um
     início de linha.  Veja também ‘newline’.

 -- Função: newline ()
 -- Função: newline (<fluxo>)
     Escreve uma nova linha (para <fluxo>).  Veja ‘sprint’ para um
     exemplo de uso de ‘newline()’.  Note que existem alguns casos, onde
     ‘newline()’não trabalha como esperado.

 -- Função: opena (<ficheiro>)
     Retorna um fluxo de saída para <ficheiro>.  Se um ficheiro já
     existente tiver sido aberto, ‘opena’ anexa os elementos ao final do
     ficheiro.

 -- Função: openr (<ficheiro>)
     Retorna um fluxo para <ficheiro>.  Se <ficheiro> não existir, ele
     será criado.

 -- Função: openw (<ficheiro>)
     Retorna um fluxo de saída para <ficheiro>.  Se <ficheiro> não
     existir, será criado.  Se um ficheiro já existente for aberto,
     ‘openw’ modifica destrutivametne o <ficheiro>.

 -- Função: printf (<dest>, <seq_caracte>)
 -- Função: printf (<dest>, <seq_caracte>, <expr_1>, ..., <expr_n>)
     Torna a função FORMAT do Lisp Comum disponível no Maxima.
     (Retirado de gcl.info: "format produces formatted output by
     outputting the caracteres of control-string string and observing
     that a tilde introduces a directive.  The caractere after the
     tilde, possibly preceded by prefix parameters and modifiers,
     specifies what kind of formatting is desired.  Most directives use
     one or more elements of args to create their output.")

     A seguinte descrição e oa exemplos podem fornecer uma idéia de uso
     de ‘printf’.  Veja um referência de Lisp para maiores informações.

             ~%       nova linha
             ~&       novíssima line
             ~t       tabulação
             ~$       monetário
             ~d       inteiro decimal
             ~b       inteiro binário
             ~o       inteiro octal
             ~x       inteiro hexadecimal
             ~br      inteiro de base b
             ~r       soletra um inteiro
             ~p       plural
             ~f       ponto flutuante
             ~e       notação científica
             ~g       ~f ou ~e, dependendo  da magnitude
             ~a       como mostrado pela função print do Maxima
             ~s       sequências de caracteres entre "aspas duplas"
             ~~       ~
             ~<       justificação de texto, ~> terminador de justificação de texto
             ~(       conversão de caixa alta/baixa, ~) terminador de conversão de caixa
             ~[       selecção, ~] terminador de selecção
             ~{       iteração, ~} terminador de iteração

     Por favor note que não existe especificador de formato para grandes
     números em ponto flutuante.  Todavia grandes números em ponto
     flutuante podem simplesmente serem mostrados por meio da directiva
     ‘~a’.  ‘~s’ mostra as sequências de caracteres entre "aspas
     duplas"; pode evitar isso usando ‘~a’.  Note que a directiva de
     selecção ‘~[’ é indexada em zero.  Também note que existem algumas
     directivas, que não trabalham no Maxima.  Por exemplo, ‘~:[’ falha.

          (%i1) load("stringproc")$
          (%i2) printf( false, "~a ~a ~4f ~a ~@r",
                        "String",sym,bound,sqrt(12),144), bound = 1.234;
          (%o2)                 String sym 1.23 2*sqrt(3) CXLIV
          (%i3) printf( false,"~{~a ~}",["one",2,"THREE"] );
          (%o3)                          one 2 THREE
          (%i4) printf( true,"~{~{~9,1f ~}~%~}",mat ),
                        mat = args( matrix([1.1,2,3.33],[4,5,6],[7,8.88,9]) )$
                1.1       2.0       3.3
                4.0       5.0       6.0
                7.0       8.9       9.0
          (%i5) control: "~:(~r~) bird~p ~[is~;are~] singing."$
          (%i6) printf( false,control, n,n,if n=1 then 0 else 1 ), n=2;
          (%o6)                    Two birds are singing.

     Se <dest> for um fluxo ou ‘true’, então ‘printf’ retorna ‘false’.
     De outra forma, ‘printf’ retorna uma sequência de caracteres
     contendo a saída.

 -- Função: readline (<fluxo>)
     Retorna uma sequência de caracteres contendo os caracteres a partir
     da posição corrente em <fluxo> até o fim de linha ou <false> se o
     fim de linha do ficheiro for encontrado.

 -- Função: sprint (<expr_1>, ..., <expr_n>)
     Avalia e mostra seus argumentos um após o outro ‘sobre uma linha’
     iniciando na posição mais à esquerda.  Os números são mostrados com
     o ’-’ à direita do número, e isso desconsidera o comprimento da
     linha.  ‘newline()’, que pode ser chamada a partir de
     ‘stringproc.lisp’ pode ser útil, se desejar colocar uma parada de
     linha intermédia.

          (%i1) for n:0 thru 22 do sprint( fib(n) )$
          0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711
          (%i2) load("stringproc")$
          (%i3) for n:0 thru 22 do (
                   sprint(fib(n)), if mod(n,10)=9 then newline() )$
          0 1 1 2 3 5 8 13 21 34
          55 89 144 233 377 610 987 1597 2584 4181
          6765 10946 17711


File: maxima.info,  Node: Definições para caracteres,  Next: Definições para sequências de caracteres,  Prev: Definições para entrada e saída,  Up: stringproc

69.3 Definições para caracteres
===============================

 -- Função: alphacharp (<caractere>)
     Retorna ‘true’ se <caractere> for um caractere alfabético.

 -- Função: alphanumericp (<caractere>)
     Retorna ‘true’ se <caractere> for um caractere alfabético ou um
     dígito.

 -- Função: ascii (<int>)
     Retorna o caractere correspondente ao código numérico ASCII <int>.
     ( -1 < int < 256 )

          (%i1) load("stringproc")$
          (%i2) for n from 0 thru 255 do (
          tmp: ascii(n), if alphacharp(tmp) then sprint(tmp), if n=96 then newline() )$
          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
          a b c d e f g h i j k l m n o p q r s t u v w x y z

 -- Função: cequal (<caractere_1>, <caractere_2>)
     Retorna ‘true’ se <caractere_1> e <caractere_2> forem os mesmos.

 -- Função: cequalignore (<caractere_1>, <caractere_2>)
     como ‘cequal’ mas ignora a caixa alta/baixa.

 -- Função: cgreaterp (<caractere_1>, <caractere_2>)
     Retorna ‘true’ se o código numérico ASCII do <caractere_1> for
     maior que o código numérico ASCII do <caractere_2>.

 -- Função: cgreaterpignore (<caractere_1>, <caractere_2>)
     Como ‘cgreaterp’ mas ignora a caixa alta/baixa.

 -- Função: charp (<obj>)
     Retorna ‘true’ se <obj> for um caractere do Maxima.  Veja na seção
     "Introdução a manipulação de sequências de caracteres" para ter um
     exemplo.

 -- Função: cint (<caractere>)
     Retorna o código numéico ASCII de <caractere>.

 -- Função: clessp (<caractere_1>, <caractere_2>)
     Retorna ‘true’ se o código numérico ASCII de <caractere_1> for
     menor que o código numérico ASCII de <caractere_2>.

 -- Função: clesspignore (<caractere_1>, <caractere_2>)
     Como em ‘clessp’ ignora a caixa alta/baixa.

 -- Função: constituent (<caractere>)
     Retorna ‘true’ se <caractere> for caractere gráfico e não o
     caractere de espaço em branco.  Um caractere gráfico é um caractere
     que se pode ver, adicionado o caractere de espaço em branco.
     (‘constituent’ foi definida por Paul Graham, em ANSI Common Lisp,
     1996, página 67.)

          (%i1) load("stringproc")$
          (%i2) for n from 0 thru 255 do (
          tmp: ascii(n), if constituent(tmp) then sprint(tmp) )$
          ! " #  %  ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B
          C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c
          d e f g h i j k l m n o p q r s t u v w x y z { | } ~

 -- Função: cunlisp (<lisp_char>)
     Converte um caractere do Lisp em um caractere do Maxima.  (É
     possível que não chegue a precisar dessa função.)

 -- Função: digitcharp (<caractere>)
     Retorna ‘true’ se <caractere> for um dígito (algarismo de 0 a 9).

 -- Função: lcharp (<obj>)
     Retorna ‘true’ se <obj> for um caractere do Lisp.  (Pode não
     precisar dessa função.)

 -- Função: lowercasep (<caractere>)
     Retorna ‘true’ se <caractere> for um caractere em caixa baixa.

 -- Variable: newline
     O caractere de nova linha.

 -- Variável: space
     O caractere de espaço em branco.

 -- Variável: tab
     O caractere de tabulação.

 -- Função: uppercasep (<caractere>)
     Retorna ‘true’ se <caractere> for um caractere em caixa alta.


File: maxima.info,  Node: Definições para sequências de caracteres,  Prev: Definições para caracteres,  Up: stringproc

69.4 Definições para sequências de caracteres
=============================================

 -- Função: sunlisp (<lisp_string>)
     Converte uma sequência de caracteres do Lisp em uma sequência de
     caracteres do Maxima.  (Em geral, pode não chegar a precisar dessa
     função.)

 -- Função: lstringp (<obj>)
     Retorna ‘true’ se <obj> is uma sequência de caracteres do Lisp.
     (Em geral, pode não chegar a precisar dessa função.)

 -- Função: stringp (<obj>)
     Retorna ‘true’ se <obj> for uma sequência de caracteres do Maxima.
     Veja a introdução para obter exemplos.

 -- Função: charat (<seq_caracte>, <n>)
     Retorna o <n>-ésimo caractere de <seq_caracte>.  O primeiro
     caractere em <seq_caracte> é retornado com <n> = 1.

          (%i1) load("stringproc")$
          (%i2) charat("Lisp",1);
          (%o2)                           L

 -- Função: charlist (<seq_caracte>)
     Retorna a lsita de todos os caracteres em <seq_caracte>.

          (%i1) load("stringproc")$
          (%i2) charlist("Lisp");
          (%o2)                     [L, i, s, p]
          (%i3) %[1];
          (%o3)                           L

 -- Função: parsetoken (<seq_caracte>)
     ‘parsetoken’ converte a primeira ficha em <seq_caracte> para o
     correspondente número ou retorna ‘false’ se o número não puder ser
     determinado.  O conjunto de delimitadores para a troca de fichas é
     ‘{space, comma, semicolon, tab, newline}’

     Nota de tradução: espaço, vírgula, ponto e vírgula, tabulação e
     nova linha.

          (%i1) load("stringproc")$
          (%i2) 2*parsetoken("1.234 5.678");
          (%o2)                         2.468

     Para analizar, pode também usar a função ‘parse_string’.  Veja a
     descrição no ficheiro ’share\contrib\eval_string.lisp’.

 -- Função: sconc (<expr_1>, ..., <expr_n>)
     Avalia seus argumentos e concatena-os em uma sequência de
     caracteres.  ‘sconc’ é como ‘sconcat’ mas retorna uma sequência de
     caracteres do Maxima.

          (%i1) load("stringproc")$
          (%i2) sconc("xx[",3,"]:",expand((x+y)^3));
          (%o2)             xx[3]:y^3+3*x*y^2+3*x^2*y+x^3
          (%i3) stringp(%);
          (%o3)                         true

 -- Função: scopy (<seq_caracte>)
     Retorna uma cópia de <seq_caracte> como uma nova sequência de
     caracteres.

 -- Função: sdowncase (<seq_caracte>)
 -- Função: sdowncase (<seq_caracte>, <início>)
 -- Função: sdowncase (<seq_caracte>, <início>, <fim>)
     Como em ‘supcase’, mas caracteres em caixa alta são convertidos
     para caracteres em caixa baixa.

 -- Função: sequal (<seq_caracte__1>, <seq_caracte__2>)
     Retorna ‘true’ se <seq_caracte__1> e <seq_caracte__2> tiverem o
     mesmo comprimento e contiverem os mesmos caracteres.

 -- Função: sequalignore (<seq_caracte__1>, <seq_caracte__2>)
     Como em ‘sequal’ mas igonara a caixa alta/baixa.

 -- Função: sexplode (<seq_caracte>)
     ‘sexplode’ é um apelido para a função ‘charlist’.

 -- Função: simplode (<lista>)
 -- Função: simplode (<lista>, <delim>)
     ‘simplode’ takes uma ‘lista’ ou expressões e concatena-as em uma
     sequência de caracteres.  Se nenhum delimitador <delim> for usado,
     ‘simplode’ funciona como ‘sconc’ e não utiliza delimitador.
     <delim> pode ser qualquer sequência de caracteres.

          (%i1) load("stringproc")$
          (%i2) simplode(["xx[",3,"]:",expand((x+y)^3)]);
          (%o2)             xx[3]:y^3+3*x*y^2+3*x^2*y+x^3
          (%i3) simplode( sexplode("stars")," * " );
          (%o3)                   s * t * a * r * s
          (%i4) simplode( ["One","more","coffee."]," " );
          (%o4)                   One more coffee.

 -- Função: sinsert (<seq>, <seq_caracte>, <pos>)
     Retorna uma sequência de caracteres que é uma concatenação de
     ‘substring (<seq_caracte>, 1, <pos> - 1)’, a sequência de
     caracteres <seq> e ‘substring (<seq_caracte>, <pos>)’.  Note que o
     primeiro caractere está em <seq_caracte> e está na posição 1.

          (%i1) load("stringproc")$
          (%i2) s: "A submarine."$
          (%i3) sconc( substring(s,1,3),"yellow ",substring(s,3) );
          (%o3)                  A yellow submarine.
          (%i4) sinsert("hollow ",s,3);
          (%o4)                  A hollow submarine.

 -- Função: sinvertcase (<seq_caracte>)
 -- Função: sinvertcase (<seq_caracte>, <início>)
 -- Função: sinvertcase (<seq_caracte>, <início>, <fim>)
     Retorna <seq_caracte> excepto que cada caractere da posição
     <início> até a posição <fim> está invertido.  Se a posição <fim>
     não for fornecida, todos os caracteres do início ao <fim> de
     <seq_caracte> são substituídos.

          (%i1) load("stringproc")$
          (%i2) sinvertcase("sInvertCase");
          (%o2)                      SiNVERTcASE

 -- Função: slength (<seq_caracte>)
     Retorna número de caracteres em <seq_caracte>.

 -- Função: smake (<num>, <caractere>)
     Retorna uma nova sequência de caracteres repetindo <num> vezes
     <caractere>.

          (%i1) load("stringproc")$
          (%i2) smake(3,"w");
          (%o2)                          www

 -- Função: smismatch (<seq_caracte__1>, <seq_caracte__2>)
 -- Função: smismatch (<seq_caracte__1>, <seq_caracte__2>, <test>)
     Retorna a posição do primeiro caractere de <seq_caracte__1> no qual
     <seq_caracte__1> e <seq_caracte__2> diferem ou ‘false’ em caso
     contrário.  A função padrao de teste para coincidência é ‘sequal’.
     Se ‘smismatch’ pode ignorar a caixa alta/baixa, use ‘sequalignore’
     como função de teste.

          (%i1) load("stringproc")$
          (%i2) smismatch("seven","seventh");
          (%o2)                           6

 -- Função: split (<seq_caracte>)
 -- Função: split (<seq_caracte>, <delim>)
 -- Função: split (<seq_caracte>, <delim>, <multiple>)
     Retorna a lista de todas as fichas em <seq_caracte>.  Cada ficha é
     uma sequência de caracteres não analisada.  ‘split’ usa <delim>
     como delimitador.  Se <delim> não for fornecido, o caractere de
     espaço é o delimitador padrão.  <multiple> é uma variável booleana
     com ‘true’ como valor padrão.  Multiplos delimitadores são lidos
     como um.  Essa função é útil se tabulações são gravadas com
     caracteres de espaço multiplos.  Se <multiple> for escolhido para
     ‘false’, cada delimitador é considerado.

          (%i1) load("stringproc")$
          (%i2) split("1.2   2.3   3.4   4.5");
          (%o2)                 [1.2, 2.3, 3.4, 4.5]
          (%i3) split("first;;third;fourth",";",false);
          (%o3)               [first, , third, fourth]

 -- Função: sposition (<caractere>, <seq_caracte>)
     Retorna a posição do primeiro caractere em <seq_caracte> que
     coincide com <caractere>.  O primeiro caractere em <seq_caracte>
     está na posição 1.  Para que os caracteres que coincidirem
     desconsiderem a caixa alta/baixa veja ‘ssearch’.

 -- Função: sremove (<seq>, <seq_caracte>)
 -- Função: sremove (<seq>, <seq_caracte>, <test>)
 -- Função: sremove (<seq>, <seq_caracte>, <test>, <início>)
 -- Função: sremove (<seq>, <seq_caracte>, <test>, <início>, <fim>)
     Retorna uma sequência de caracteres como <seq_caracte> mas com
     todas as subsequências de caracteres que coincidirem com <seq>.  A
     função padrão de teste de coincidência é ‘sequal’.  Se ‘sremove’
     puder ignorar a caixa alta/baixa enquanto busca por <seq>, use
     ‘sequalignore’ como teste.  Use <início> e <fim> para limitar a
     busca.  Note que o primeiro caractere em <seq_caracte> está na
     posição 1.

          (%i1) load("stringproc")$
          (%i2) sremove("n't","I don't like coffee.");
          (%o2)                   I do like coffee.
          (%i3) sremove ("DO ",%,'sequalignore);
          (%o3)                    I like coffee.

 -- Função: sremovefirst (<seq>, <seq_caracte>)
 -- Função: sremovefirst (<seq>, <seq_caracte>, <test>)
 -- Função: sremovefirst (<seq>, <seq_caracte>, <test>, <início>)
 -- Função: sremovefirst (<seq>, <seq_caracte>, <test>, <início>, <fim>)
     Como em ‘sremove’ excepto que a primeira subsequência de caracteres
     que coincide com ‘seq’ é removida.

 -- Função: sreverse (<seq_caracte>)
     Retorna uma sequência de caracteres com todos os caracteres de
     <seq_caracte> em ordem reversa.

 -- Função: ssearch (<seq>, <seq_caracte>)
 -- Função: ssearch (<seq>, <seq_caracte>, <test>)
 -- Função: ssearch (<seq>, <seq_caracte>, <test>, <início>)
 -- Função: ssearch (<seq>, <seq_caracte>, <test>, <início>, <fim>)
     Retorna a posição da primeira subsequência de caracteres de
     <seq_caracte> que coincide com a sequência de caracteres <seq>.  A
     função padrão de teste de coincidência é ‘sequal’.  Se ‘ssearch’
     puder igonorar a caixa alta/baixa, use ‘sequalignore’ como função
     de teste.  Use <início> e <fim> para limitar a busca.  Note que o
     primeiro caracter em <seq_caracte> está na posição 1.

          (%i1) ssearch("~s","~{~S ~}~%",'sequalignore);
          (%o1)                                  4

 -- Função: ssort (<seq_caracte>)
 -- Função: ssort (<seq_caracte>, <test>)
     Retorna uma sequência de caracteres que contém todos os caracteres
     de <seq_caracte> em uma ordem tal que não existam dois caracteres
     <c> sucessivos e <d> seja tal que ‘test (<c>, <d>)’ seja ‘false’ e
     ‘test (<d>, <c>)’ seja ‘true’.  A função padrão de teste para
     ordenação é <clessp>.  O conjunto de funções de teste é ‘{clessp,
     clesspignore, cgreaterp, cgreaterpignore, cequal, cequalignore}’.

          (%i1) load("stringproc")$
          (%i2) ssort("I don't like Mondays.");
          (%o2)                    '.IMaddeiklnnoosty
          (%i3) ssort("I don't like Mondays.",'cgreaterpignore);
          (%o3)                 ytsoonnMlkIiedda.'

 -- Função: ssubst (<nova>, <antiga>, <seq_caracte>)
 -- Função: ssubst (<nova>, <antiga>, <seq_caracte>, <test>)
 -- Função: ssubst (<nova>, <antiga>, <seq_caracte>, <test>, <início>)
 -- Função: ssubst (<nova>, <antiga>, <seq_caracte>, <test>, <início>,
          <fim>)
     Retorna uma sequência de caracteres como <seq_caracte> excepto que
     todas as subsequências de caracteres que coincidirem com <antiga>
     são substituídas por <nova>.  <antiga> e <nova> não precisam ser de
     mesmo comprimento.  A função padrão de teste para coincidência é
     para coincidências é ‘sequal’.  Se ‘ssubst’ puder ignorar a cixa
     alta/baixa enquanto procurando por <antiga>, use ‘sequalignore’
     como função de teste.  Use <início> e <fim> para limitar a busca.
     Note que o primeiro caractere em <seq_caracte> está na posição 1.

          (%i1) load("stringproc")$
          (%i2) ssubst("like","hate","I hate Thai food. I hate green tea.");
          (%o2)          I like Thai food. I like green tea.
          (%i3) ssubst("Indian","thai",%,'sequalignore,8,12);
          (%o3)         I like Indian food. I like green tea.

 -- Função: ssubstfirst (<nova>, <antiga>, <seq_caracte>)
 -- Função: ssubstfirst (<nova>, <antiga>, <seq_caracte>, <test>)
 -- Função: ssubstfirst (<nova>, <antiga>, <seq_caracte>, <test>,
          <início>)
 -- Função: ssubstfirst (<nova>, <antiga>, <seq_caracte>, <test>,
          <início>, <fim>)
     Como em ‘subst’ excepto que somente a primeira subsequência de
     caracteres que coincidir com <antiga> é substituída.

 -- Função: strim (<seq>,<seq_caracte>)
     Retorna uma sequência de caracteres como <seq_caracte>, mas com
     todos os caracteres que aparecerem em <seq> removidos de ambas as
     extremidades.

          (%i1) load("stringproc")$
          (%i2) "/* comment */"$
          (%i3) strim(" /*",%);
          (%o3)                        comment
          (%i4) slength(%);
          (%o4)                           7

 -- Função: striml (<seq>, <seq_caracte>)
     Como em ‘strim’ excepto que somente a extremidade esquerda de
     <seq_caracte> é recordada.

 -- Função: strimr (<seq>, <seq_caracte>)
     Como em ‘strim’ excepto que somente a extremidade direita de
     sequência de caracteres é recortada.

 -- Função: substring (<seq_caracte>, <início>)
 -- Função: substring (<seq_caracte>, <início>, <fim>)
     Retorna a subsequência de caracteres de <seq_caracte> começando na
     posição <início> e terminando na posição <fim>.  O caractere na
     posição <fim> não é incluído.  Se <fim> não for fornecido, a
     subsequência de caracteres contém o restante da sequência de
     caracteres.  Note que o primeiro caractere em <seq_caracte> está na
     posição 1.

          (%i1) load("stringproc")$
          (%i2) substring("substring",4);
          (%o2)                        string
          (%i3) substring(%,4,6);
          (%o3)                          in

 -- Função: supcase (<seq_caracte>)
 -- Função: supcase (<seq_caracte>, <início>)
 -- Função: supcase (<seq_caracte>, <início>, <fim>)
     Retorna <seq_caracte> excepto que caracteres em caixa baixa a
     partir da posição <início> até a posição <fim> são substituídos
     pelo correspondente caracteres em cixa alta.  Se <fim> não for
     fornecido, todos os caracteres em caixa baixa de <início> até o fim
     de <seq_caracte> são substituídos.

          (%i1) load("stringproc")$
          (%i2) supcase("english",1,2);
          (%o2)                        English

 -- Função: tokens (<seq_caracte>)
 -- Função: tokens (<seq_caracte>, <test>)
     Retorna uma lista de fichas, que tiverem sido extrídos de
     <seq_caracte>.  As fichas são subsequências de caracteres cujos
     caracteres satisfazem a uma determinada função de teste.  Se o
     teste não for fornecido, <constituent> é usada como teste padrão.
     ‘{constituent, alphacharp, digitcharp, lowercasep, uppercasep,
     charp, characterp, alphanumericp}’ é o conjunto de fnç~oes de
     teste.  (A versão Lisp de ‘tokens’ é escrita por Paul Graham.  ANSI
     Common Lisp, 1996, page 67.)

          (%i1) load("stringproc")$
          (%i2) tokens("24 October 2005");
          (%o2)                  [24, October, 2005]
          (%i3) tokens("05-10-24",'digitcharp);
          (%o3)                     [05, 10, 24]
          (%i4) map(parsetoken,%);
          (%o4)                      [5, 10, 24]


File: maxima.info,  Node: unit,  Next: zeilberger,  Prev: stringproc,  Up: Top

70 unit
*******

* Menu:

* Introdução a Units::       
* Definições para Units::       


File: maxima.info,  Node: Introdução a Units,  Next: Definições para Units,  Prev: unit,  Up: unit

70.1 Introdução a Units
=======================

O pacote _unit_ torna o utilizador apto a converter entre unidades
arbitrárias e trabalhar com dimensões em equações.  O funcionamento
desse pacote é radicalmente diferente do pacote original units do Maxima
- apesar de o original conter uma lista básica de definições, o pacote
actual usa um conjunto de regras para permitir ao utilizador escolher,
sobre uma base dimensional, qual a resposta fianl de unidade pode ser
convertida.  Isso irá separar unidades em lugar de misturá-las na tela,
permitindo ao utilizador durante a leitura identificar as unidades
associadas com uma resposta em particular.  Isso permitirá ao utilizador
simplificar uma expressão em sua Base fundamental de Unidades, bem como
fornecer ajuste fino sobre a simplificação de unidades derivadas.
Análise dimensional é possível, e uma variedade de ferramentas está
disponível para gerenciar a conversão e também uma variedade de opções
de simplificação.  Adicionalmente para personalizar conversão
automática, _units_ também fornede um manual tradicional de opções de
conversão.

Nota -quando conversões de unidade forem não exactas Maxima irá fazer
aproximações resultando em frações.  Esso é uma concequência das
técnicas usadas para simplificar unidades.  A mensagem de alerta desse
tipo de substituição está desabilitada por padrão no caso de inidades
(normalmente essas mensagens estão habilitadas) uma vez que essa
situação de iemissão de mensagens de alerta ocorre frequêntemente e os
alertas confundem a saída.  (O estado actual de ‘ratprint’ é
restabelecido após uma conversão de unidades, de forma que modificações
de utilizador para aquela configuração irão ser preservadas de outra
forma.)  Se o utilizador precisar dessa informação para ‘units’, ele
pode escolher _unitverbose:on_ para reativar a impressão de mensagens de
alerta do processo de conversão.

_unit_ está inclído no Maxima no directório share/contrib/unit
directory.  Isso segue aos pacotes normais do Maxima conforme
convenções:

     (%i1) load("unit")$
     *******************************************************************
     *                       Units version 0.50                        *
     *          Definitions based on the NIST Reference on             *
     *              Constants, Units, and Uncertainty                  *
     *       Conversion factors from various sources including         *
     *                   NIST and the GNU units package                *
     *******************************************************************

     Redefining necessary functions...
     WARNING: DEFUN/DEFMACRO: redefining function TOPLEVEL-MACSYMA-EVAL ...
     WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
     WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
     WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
     Initializing unit arrays...
     Done.

As mensagens WARNING (DE ALERTA) são esperadas n ão uma causa de
preocupação - elas indicam que o pacote _unit_ está redefinindo funções
anteriormente definidas no local adequado do Maxima.  Essa redefinição é
necessária com o bojetivo de manusear adequadamente as unidades.  O
utilizador pode estar consciente que se outras modificações tiverem sido
feitas para essas funções por outros pacotes essas novas mudanças irão
ser sobrescritas por meio desse processo de disponibilização do pacote
‘unit’.

O ficheiro _unit.mac_ também chama um ficheiro lisp, a saber
_unit-functions.lisp_, que contém as funçãoes lisp necessárias ao
pacote.

Clifford Yapp é o autor primário.  Ele recebeu grande contribuição de
Barton Willis da University of Nebraska at Kearney (UNK), Robert Dodier,
e da intrépida tribo da lista de mensagens do Maxima.

Existem provavelmente muitos erros.  Diga-me quais.  ‘float’ e ‘numer’
não fazem o que é esperado.

PORFAZER : funcionalidade de dimensão, manuseio de temperatura, a função
‘showabbr’ e Cia.  Ltda.  Mostrar exemplos com adição de quantidades
contendo unidades.


File: maxima.info,  Node: Definições para Units,  Prev: Introdução a Units,  Up: unit

70.2 Definições para Units
==========================

 -- Função: setunits (<list>)
     Por padrão, o pacote _unit_ não usa qualquer dimensões derivadas,
     mas irá converter todas as unidades nas sete fundamentais do
     sistema MKS.
          (%i2) N;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) dyn;
                                             1      kg m
          (%o3)                           (------) (----)
                                           100000     2
                                                     s
          (%i4) g;
                                              1
          (%o4)                             (----) (kg)
                                             1000
          (%i5) centigram*inch/minutes^2;
                                            127        kg m
          (%o5)                       (-------------) (----)
                                       1800000000000     2
                                                        s

     Em alguns casos esse é o comportamento desejado.  Se o utilizador
     desejar usar outras unidades, isso é conseguido com o comando
     ‘setunits’:
          (%i6) setunits([centigram,inch,minute]);
          (%o6)                                done
          (%i7) N;
                                      1800000000000   %in cg
          (%o7)                      (-------------) (------)
                                           127            2
                                                      %min
          (%i8) dyn;
                                         18000000   %in cg
          (%o8)                         (--------) (------)
                                           127          2
                                                    %min
          (%i9) g;
          (%o9)                             (100) (cg)
          (%i10) centigram*inch/minutes^2;
                                              %in cg
          (%o10)                              ------
                                                  2
                                              %min

     A escolha de unidades é completamente flexível.  Por exemplo, se
     quisermos voltar para quiilogramas, metros, e segundos como padrão
     para essas dimensão nós podemos fazer:
          (%i11) setunits([kg,m,s]);
          (%o11)                               done
          (%i12) centigram*inch/minutes^2;
                                            127        kg m
          (%o12)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     Unidade derivadas são também manuseáveis por meio desse comando:
          (%i17) setunits(N);
          (%o17)                               done
          (%i18) N;
          (%o18)                                 N
          (%i19) dyn;
                                              1
          (%o19)                           (------) (N)
                                            100000
          (%i20) kg*m/s^2;
          (%o20)                                 N
          (%i21) centigram*inch/minutes^2;
                                              127
          (%o21)                        (-------------) (N)
                                         1800000000000

     Note que o pacote _unit_ reconhece a combinação não MKS de massa,
     comprimento, e tempo inverso elevado ao quadrado como uma força, e
     converte isso para Newtons.  É dessa forma que Maxima trabalha
     geralmente.  Se, por exemplo, nós preferirmos dinas em lugar de
     Newtons, simplesmente fazemos o seguinte:
          (%i22) setunits(dyn);
          (%o22)                               done
          (%i23) kg*m/s^2;
          (%o23)                          (100000) (dyn)
          (%i24) centigram*inch/minutes^2;
                                            127
          (%o24)                         (--------) (dyn)
                                          18000000

     Para descontinuar simplificando para qualquer unidade de força,
     usamos o comando ‘uforget’:
          (%i26) uforget(dyn);
          (%o26)                               false
          (%i27) kg*m/s^2;
                                               kg m
          (%o27)                               ----
                                                 2
                                                s
          (%i28) centigram*inch/minutes^2;
                                            127        kg m
          (%o28)                      (-------------) (----)
                                       1800000000000     2
                                                        s
     Isso pode trabalhar igualmente bem com ‘uforget(N)’ ou
     ‘uforget(%force)’.

     Veja também ‘uforget’.  Para usar essa função escreva primeiro
     ‘load("unit")’.

 -- Função: uforget (<list>)
     Por padrão, o pacote _unit_ converte todas as unidades para as sete
     unidaes fundamentais do sitema MKS de unidades.  Ess comportamento
     pode ser mudado com o comando ‘setunits’.  Após o qual, o
     utilizador pode restabelecer o comportamento padrão para uma
     dimensão em particular mediante o comando ‘uforget’:
          (%i13) setunits([centigram,inch,minute]);
          (%o13)                               done
          (%i14) centigram*inch/minutes^2;
                                              %in cg
          (%o14)                              ------
                                                  2
                                              %min
          (%i15) uforget([cg,%in,%min]);
          (%o15)                      [false, false, false]
          (%i16) centigram*inch/minutes^2;
                                            127        kg m
          (%o16)                      (-------------) (----)
                                       1800000000000     2
                                                        s

     ‘uforget’ opera sobre dimensões, não sobre unidades, de forma que
     qualquer unidade de uma dimensão em particular irá trabalhar.  A
     própia dimensão é também um argumento legal.

     Veja também ‘setunits’.  To use this function write first
     ‘load("unit")’.

 -- Função: convert (<expr>, <list>)
     Quando do restabelecimento dos valores padrão o ambiente global é
     destruído, existe o comando ‘convert’, que permite conversões
     imediatas.  ‘convert’ pode aceitar um argumetno simples ou uma
     lista de unidades a serem usadas na conversão.  Quando uma operação
     de conversão for concluída, o sistema normal de avaliação global é
     contornado, com o objectivo de evitar que o resultado desejado seja
     convertido novamente.  Como consequência, em cálculos aproximados
     alertas de "rat" irão ser visíveis se o ambiente global que
     controla esse comportamento (‘ratprint’) for ‘true’.  ‘convert’
     também é útil para uma verificação pontual e imediata da precisão
     de uma conversão global.  Outro recurso é que ‘convert’ irá
     permitir a um utilizador fazer um Base de Conversões Dimensionais
     mesmo se o ambiente global for escolhido para simplificar par uma
     Dimensão Derivada.

          (%i2) kg*m/s^2;
                                               kg m
          (%o2)                                ----
                                                 2
                                                s
          (%i3) convert(kg*m/s^2,[g,km,s]);
                                               g km
          (%o3)                                ----
                                                 2
                                                s
          (%i4) convert(kg*m/s^2,[g,inch,minute]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                        18000000000   %in g
          (%o4)                        (-----------) (-----)
                                            127           2
                                                      %min
          (%i5) convert(kg*m/s^2,[N]);
          (%o5)                                  N
          (%i6) convert(kg*m^2/s^2,[N]);
          (%o6)                                 m N
          (%i7) setunits([N,J]);
          (%o7)                                done
          (%i8) convert(kg*m^2/s^2,[N]);
          (%o8)                                 m N
          (%i9) convert(kg*m^2/s^2,[N,inch]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                           5000
          (%o9)                           (----) (%in N)
                                           127
          (%i10) convert(kg*m^2/s^2,[J]);
          (%o10)                                 J
          (%i11) kg*m^2/s^2;
          (%o11)                                 J
          (%i12) setunits([g,inch,s]);
          (%o12)                               done
          (%i13) kg*m/s^2;
          (%o13)                                 N
          (%i14) uforget(N);
          (%o14)                               false
          (%i15) kg*m/s^2;
                                          5000000   %in g
          (%o15)                         (-------) (-----)
                                            127       2
                                                     s
          (%i16) convert(kg*m/s^2,[g,inch,s]);

          `rat' replaced 39.37007874015748 by 5000/127 = 39.37007874015748
                                          5000000   %in g
          (%o16)                         (-------) (-----)
                                            127       2
                                                     s

     Veja também ‘setunits’ e ‘uforget’.  Para usar essa função
     primeiramente escreva ‘load("unit")’.

 -- Variável de opção: usersetunits
     Valor por omissão: none

     Se um utilizador desejar ter um comportamento padrão de unidade
     diferente daquele descrito, ele pode fazer uso de _maxima-init.mac_
     e da variável _usersetunits_.  O pacote _unit_ irá verificar o
     ficheiro _maxima-init.mac_ na inicialização para ver se a essa
     variável foi atribuído uma lista.  Se isso aconteceu, o pacote
     _unit_ irá usar ‘setunits’ sobre aquela lista e pegar as unidades
     lá colocadas para serem as padrões.  ‘uforget’ irá reverter para o
     comportamento definido por ‘usersetunits’ sobrescrevendo seus
     próprios padrões.  Por exemplo, Se tivermos um ficheiro
     _maxima-init.mac_ contendo:
          usersetunits : [N,J];
     nós poderemos ver o seguinte comportamento:
          (%i1) load("unit")$
          *******************************************************************
          *                       Units version 0.50                        *
          *          Definitions based on the NIST Reference on             *
          *              Constants, Units, and Uncertainty                  *
          *       Conversion factors from various sources including         *
          *                   NIST and the GNU units package                *
          *******************************************************************

          Redefining necessary functions...
          WARNING: DEFUN/DEFMACRO: redefining function TOPLEVEL-MACSYMA-EVAL ...
          WARNING: DEFUN/DEFMACRO: redefining function MSETCHK ...
          WARNING: DEFUN/DEFMACRO: redefining function KILL1 ...
          WARNING: DEFUN/DEFMACRO: redefining function NFORMAT ...
          Initializing unit arrays...
          Done.
          User defaults found...
          User defaults initialized.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) kg*m^3/s^2;
          (%o4)                                 J m
          (%i5) kg*m*km/s^2;
          (%o5)                             (1000) (J)
          (%i6) setunits([dyn,eV]);
          (%o6)                                done
          (%i7) kg*m/s^2;
          (%o7)                           (100000) (dyn)
          (%i8) kg*m^2/s^2;
          (%o8)                     (6241509596477042688) (eV)
          (%i9) kg*m^3/s^2;
          (%o9)                    (6241509596477042688) (eV m)
          (%i10) kg*m*km/s^2;
          (%o10)                   (6241509596477042688000) (eV)
          (%i11) uforget([dyn,eV]);
          (%o11)                           [false, false]
          (%i12) kg*m/s^2;
          (%o12)                                 N
          (%i13) kg*m^2/s^2;
          (%o13)                                 J
          (%i14) kg*m^3/s^2;
          (%o14)                                J m
          (%i15) kg*m*km/s^2;
          (%o15)                            (1000) (J)
     Sem ‘usersetunits’, as entradas iniciais poderiam ter sido
     convertidas para o sistema de unidades MKS, e ‘uforget’ poderia ter
     resultado em um retorno para as regras do MKS. Em vez disso, as
     preferências do utilizador foram respeitadas em ambos os casos.
     Note que esse podem ainda serem sobrescritos se for desejado.  Para
     eliminar completamente essa simplificação - i.e.  ter as
     preferências de utilizador escolhidas para os padrões de unidade do
     Maxima - o comando ‘dontusedimension’ pode ser usado.  ‘uforget’
     pode restabelecer as preferências de utilizador novamente, mas
     somente se ‘usedimension’ liberar isso para uso.  Alternativamente,
     ‘kill(usersetunits)’ irá remover completametne todo o conhecimento
     dessas escolhas de utilizador da sessão actual.  Aqui está alguns
     exemplos de como esssas várias opções trabalham.
          (%i2) kg*m/s^2;
          (%o2)                                  N
          (%i3) kg*m^2/s^2;
          (%o3)                                  J
          (%i4) setunits([dyn,eV]);
          (%o4)                                done
          (%i5) kg*m/s^2;
          (%o5)                           (100000) (dyn)
          (%i6) kg*m^2/s^2;
          (%o6)                     (6241509596477042688) (eV)
          (%i7) uforget([dyn,eV]);
          (%o7)                          [false, false]
          (%i8) kg*m/s^2;
          (%o8)                                  N
          (%i9) kg*m^2/s^2;
          (%o9)                                  J
          (%i10) dontusedimension(N);
          (%o10)                             [%force]
          (%i11) dontusedimension(J);
          (%o11)                         [%energy, %force]
          (%i12) kg*m/s^2;
                                               kg m
          (%o12)                               ----
                                                 2
                                                s
          (%i13) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o13)                               -----
                                                 2
                                                s
          (%i14) setunits([dyn,eV]);
          (%o14)                               done
          (%i15) kg*m/s^2;
                                               kg m
          (%o15)                               ----
                                                 2
                                                s
          (%i16) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o16)                               -----
                                                 2
                                                s
          (%i17) uforget([dyn,eV]);
          (%o17)                         [false, false]
          (%i18) kg*m/s^2;
                                               kg m
          (%o18)                               ----
                                                 2
                                                s
          (%i19) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o19)                               -----
                                                 2
                                                s
          (%i20) usedimension(N);
          Done.  To have Maxima simplify to this dimension, use setunits([unit])
          to select a unit.
          (%o20)                               true
          (%i21) usedimension(J);
          Done.  To have Maxima simplify to this dimension, use setunits([unit])
          to select a unit.
          (%o21)                               true
          (%i22) kg*m/s^2;
                                               kg m
          (%o22)                               ----
                                                 2
                                                s
          (%i23) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o23)                               -----
                                                 2
                                                s
          (%i24) setunits([dyn,eV]);
          (%o24)                               done
          (%i25) kg*m/s^2;
          (%o25)                          (100000) (dyn)
          (%i26) kg*m^2/s^2;
          (%o26)                    (6241509596477042688) (eV)
          (%i27) uforget([dyn,eV]);
          (%o27)                           [false, false]
          (%i28) kg*m/s^2;
          (%o28)                                 N
          (%i29) kg*m^2/s^2;
          (%o29)                                 J
          (%i30) kill(usersetunits);
          (%o30)                               done
          (%i31) uforget([dyn,eV]);
          (%o31)                          [false, false]
          (%i32) kg*m/s^2;
                                               kg m
          (%o32)                               ----
                                                 2
                                                s
          (%i33) kg*m^2/s^2;
                                                   2
                                               kg m
          (%o33)                               -----
                                                 2
                                                s
     Desafortunadamente essa ampla variedade de opções é um pouco confus
     no início, mas uma vez que o utilizador cultiva o uso delas o
     utilizador perceberá que elas permitem completo controle sobre seu
     ambiente de trabalho.

 -- Função: metricexpandall (<x>)
     Reconstrói listas de unidades globais automaticamente criando todas
     as unidades métricas desejadas.  <x> é um argumento numérico que é
     usado para especificar quantos prefixos métricos o utilizador
     deseja que seja definido.  Os argumentos são os seguintes, com cada
     maior número definindo todos os menores números de unidade:
                     0 - none. Only base units
                     1 - kilo, centi, milli
          (default)  2 - giga, mega, kilo, hecto, deka, deci, centi, milli,
                         micro, nano
                     3 - peta, tera, giga, mega, kilo, hecto, deka, deci,
                         centi, milli, micro, nano, pico, femto
                     4 - all
     Normalmente, Maxima não irá definir a expansão completa desses
     resultados em uma grande número de unidades, mas ‘metricexpandall’
     pode ser usada para reconstruir a lista em um estilo mais ou menos
     completo.  A variável relevante no ficheiro _unit.mac_ é
     <%unitexpand>.

 -- Variável: %unitexpand
     Valor por omissão: ‘2’

     Ess é o valor fornecido a ‘metricexpandall’ durante a inicialização
     de _unit_.


File: maxima.info,  Node: zeilberger,  Next: Índice de Funções e Variáveis,  Prev: unit,  Up: Top

71 zeilberger
*************

* Menu:

* Introdução a zeilberger::
* Definições para zeilberger::


File: maxima.info,  Node: Introdução a zeilberger,  Next: Definições para zeilberger,  Prev: zeilberger,  Up: zeilberger

71.1 Introdução a zeilberger
============================

‘zeilberger’ é uma implementação do algoritmo de Zeilberger para
somatório hipergeométricos definidos, e também para o algoritmo de
Gosper para somatórios hipergeométricos indefinidos.

‘zeilberger’ faz uso do método de optimização "filtering" desenvolvido
por Axel Riese.

‘zeilberger’ foi desenvolvido por Fabrizio Caruso.

‘load ("zeilberger")’ torna esse pacote disponível para uso.

71.1.1 O problema dos somatórios hipergeométricos indefinidos
-------------------------------------------------------------

‘zeilberger’ implementa o algoritmo de Gosper para somatório
hipergeométrico indefinido.  Dado um termo hipergeométrico F_k em k
queremos encontrar sua anti-diferença hipergeométrica, isto é, um termo
hipergeométrico f_k tal que F_k = f_(k+1) - f_k.

71.1.2 O problema dos somatórios hipergeométricos definidos
-----------------------------------------------------------

‘zeilberger’ implementa o algoritmo de Zeilberger para somatório
hipergeométrico definido.  Dado um termo hipergeométrico apropriado (em
n e k) F_(n,k) e um inteiro positivo d queremos encontrar um d-ésima
ordem de recorrência linear com coeficientes polinomiais (em n) para
F_(n,k) e uma função racional R em n e k tal que

a_0 F_(n,k) + ... + a_d F_(n+d),k = Delta_K(R(n,k) F_(n,k))

onde Delta_k é o k-seguinte operador de diferença, i.e., Delta_k(t_k) :=
t_(k+1) - t_k.

71.1.3 Níveis de detalhe nas informações
----------------------------------------

Existe também versões de níveis de detalhe fornecidos pelos comandos que
são chamados (os níveis) através da adição de um dos seguintes prefixos:

‘Summary’
     Apenas um sumário é mostrado no final
‘Verbose’
     Algumas informações nos passos intermédios
‘VeryVerbose’
     Muita informação
‘Extra’
     Muito mais informação incluindo informação sobre o sistema linear
     no algoritmo de Zeilberger

Por exemplo: ‘GosperVerbose’, ‘parGosperVeryVerbose’, ‘ZeilbergerExtra’,
‘AntiDifferenceSummary’.


File: maxima.info,  Node: Definições para zeilberger,  Prev: Introdução a zeilberger,  Up: zeilberger

71.2 Definições para zeilberger
===============================

 -- Função: AntiDifference (<F_k>, <k>)

     Retorna a anti-diferença hipergeométrica de <F_k>, se essa
     anti-diferença.  De outra forma ‘AntiDifference’ retorna
     ‘no_hyp_antidifference’.

 -- Função: Gosper (<F_k>, <k>)
     Retorna o certificado racional <R(k)> para <F_k>, isto é, uma
     função racional tal que

     F_k = R(k+1) F_(k+1) - R(k) F_k

     se essa função racional exitir.  De outra forma, ‘Gosper’ retorna
     ‘no_hyp_sol’.

 -- Função: GosperSum (<F_k>, <k>, <a>, <b>)

     Retorna o somatório de <F_k> de <k> = <a> a <k> = <b> se <F_k>
     tiver ma diferença hipergeométrica.  De outra forma, ‘GosperSum’
     retorna ‘nongosper_summable’.

     Exemplos:

          (%i1) load ("zeilberger");
          (%o1)  /usr/share/maxima/share/contrib/Zeilberger/zeilberger.mac
          (%i2) GosperSum ((-1)^k*k / (4*k^2 - 1), k, 1, n);

          Dependent equations eliminated:  (1)
                                     3       n + 1
                                (n + -) (- 1)
                                     2               1
          (%o2)               - ------------------ - -
                                            2        4
                                2 (4 (n + 1)  - 1)
          (%i3) GosperSum (1 / (4*k^2 - 1), k, 1, n);
                                          3
                                    - n - -
                                          2       1
          (%o3)                  -------------- + -
                                          2       2
                                 4 (n + 1)  - 1
          (%i4) GosperSum (x^k, k, 1, n);
                                    n + 1
                                   x          x
          (%o4)                    ------ - -----
                                   x - 1    x - 1
          (%i5) GosperSum ((-1)^k*a! / (k!*(a - k)!), k, 1, n);
                                          n + 1
                          a! (n + 1) (- 1)              a!
          (%o5)       - ------------------------- - ----------
                        a (- n + a - 1)! (n + 1)!   a (a - 1)!
          (%i6) GosperSum (k*k!, k, 1, n);

          Dependent equations eliminated:  (1)
          (%o6)                     (n + 1)! - 1
          (%i7) GosperSum ((k + 1)*k! / (k + 1)!, k, 1, n);
                            (n + 1) (n + 2) (n + 1)!
          (%o7)             ------------------------ - 1
                                    (n + 2)!
          (%i8) GosperSum (1 / ((a - k)!*k!), k, 1, n);
          (%o8)                  nonGosper_summable

 -- Função: parGosper (<F_{n,k}>, <k>, <n>, <d>)
     Tenta encontrar uma recorrência de <d>-ésima ordem para <F_{n,k}>.

     O algoritmo retorna uma sequência [s_1, s_2, ..., s_m] de soluções.
     Cada solução tem a forma

     [R(n, k), [a_0, a_1, ..., a_d]]

     ‘parGosper’ retorna ‘[]’ caso não consiga encontrar uma
     recorrência.

 -- Função: Zeilberger (<F_{n,k}>, <k>, <n>)
     Tenta calcular o somatório hipergeométrico indefinido de <F_{n,k}>.

     ‘Zeilberger’ primeiro invoca ‘Gosper’, e se ‘Gosper’ não conseguir
     encontrar uma solução, então ‘Zeilberger’ invoca ‘parGosper’com
     ordem 1, 2, 3, ..., acima de ‘MAX_ORD’.  Se Zeilberger encontrar
     uma solução antes de esticar ‘MAX_ORD’, Zeilberger para e retorna a
     solução.

     O algoritmo retorna uma sequência [s_1, s_2, ..., s_m] de soluções.
     Cada solução tem a forma

     [R(n,k), [a_0, a_1, ..., a_d]]

     ‘Zeilberger’ retorna ‘[]’ se não conseguir encontrar uma solução.

     ‘Zeilberger’ invoca ‘Gosper’ somente se ‘gosper_in_zeilberger’ for
     ‘true’.

71.3 Variáveis globais gerais
=============================

 -- Variável global: MAX_ORD
     Valor por omissão: 5

     ‘MAX_ORD’ é a ordem máxima de recorrência tentada por ‘Zeilberger’.

 -- Variável global: simplified_output
     Valor por omissão: ‘false’

     Quando ‘simplified_output’ for ‘true’, funções no pacote
     ‘zeilberger’ tentam simplificação adicional da solução.

 -- Variável global: linear_solver
     Valor por omissão: ‘linsolve’

     ‘linear_solver’ nomeia o resolvedor que é usado para resolver o
     sistema de equações no algoritmo de Zeilberger.

 -- Variável global: warnings
     Valor por omissão: ‘true’

     Quando ‘warnings’ for ‘true’, funções no pacote ‘zeilberger’
     imprimem mensagens de alerta durante a execução.

 -- Variável global: gosper_in_zeilberger
     Valor por omissão: ‘true’

     Quando ‘gosper_in_zeilberger’ for ‘true’, a função ‘Zeilberger’
     chama ‘Gosper’ antes de chamar ‘parGosper’.  De outra forma,
     ‘Zeilberger’ vai imediatamente para ‘parGosper’.

 -- Variável global: trivial_solutions
     Valor por omissão: ‘true’

     Quando ‘trivial_solutions’ for ‘true’, ‘Zeilberger’ retorna
     soluções que possuem certificado igual a zero, ou todos os
     coeficientes iguais a zero.

71.4 Variáveis relacionadas ao teste modular
============================================

 -- Variável global: mod_test
     Valor por omissão: ‘false’

     Quando ‘mod_test’ for ‘true’, ‘parGosper’ executa um teste modular
     discartando sistemas sem solução.

 -- Variável global: modular_linear_solver
     Valor por omissão: ‘linsolve’

     ‘modular_linear_solver’ nomeia o resolvedor linear usado pelo teste
     modular em ‘parGosper’.

 -- Variável global: ev_point
     Valor por omissão: ‘big_primes[10]’

     ‘ev_point’ é o valor no qual a variável <n> é avaliada no momento
     da execução do teste modular em ‘parGosper’.

 -- Variável global: mod_big_prime
     Valor por omissão: ‘big_primes[1]’

     ‘mod_big_prime’ é o módulo usado pelo teste modular em ‘parGosper’.

 -- Variável global: mod_threshold
     Valor por omissão: 4

     ‘mod_threshold’ is the maior ordem para a qual o teste modular em
     ‘parGosper’ é tentado.


File: maxima.info,  Node: Índice de Funções e Variáveis,  Prev: zeilberger,  Up: Top

Appendix A Índice de Funções e Variáveis
****************************************

 [index ]
* Menu:

* !:                                     Operadores Geral.   (line    8)
* !!:                                    Operadores Geral.   (line   67)
* #:                                     Operadores Geral.   (line   85)
* %:                                     Definições para Entrada e Saída.
                                                             (line   92)
* %%:                                    Definições para Entrada e Saída.
                                                             (line  106)
* %e:                                    Definições para Constantes.
                                                             (line    6)
* %edispflag:                            Definições para Entrada e Saída.
                                                             (line  140)
* %emode:                                Definições para Expressões.
                                                             (line  550)
* %enumer:                               Definições para Expressões.
                                                             (line  567)
* %e_to_numlog:                          Definições para Logaritmos.
                                                             (line    6)
* %gamma:                                Definições para Teoria dos Números.
                                                             (line  220)
* %i:                                    Definições para Constantes.
                                                             (line   11)
* %phi:                                  Definições para Constantes.
                                                             (line   27)
* %pi:                                   Definições para Constantes.
                                                             (line   81)
* %rnum_list:                            Definições para Equações.
                                                             (line    6)
* %th:                                   Definições para Entrada e Saída.
                                                             (line  147)
* %unitexpand:                           Definições para Units.
                                                             (line  416)
* ':                                     Introdução a Linha de Comandos.
                                                             (line    6)
* '':                                    Introdução a Linha de Comandos.
                                                             (line   90)
* *:                                     Operadores Aritméticos.
                                                             (line    8)
* **:                                    Operadores Aritméticos.
                                                             (line  172)
* +:                                     Operadores Aritméticos.
                                                             (line    6)
* -:                                     Operadores Aritméticos.
                                                             (line    7)
* .:                                     Operadores Geral.   (line  112)
* /:                                     Operadores Aritméticos.
                                                             (line    9)
* ::                                     Operadores Geral.   (line  123)
* :::                                    Operadores Geral.   (line  126)
* ::=:                                   Operadores Geral.   (line  131)
* :=:                                    Operadores Geral.   (line  217)
* <:                                     Operadores Relacionais.
                                                             (line    6)
* <=:                                    Operadores Relacionais.
                                                             (line    7)
* =:                                     Operadores Geral.   (line  221)
* >:                                     Operadores Relacionais.
                                                             (line    9)
* >=:                                    Operadores Relacionais.
                                                             (line    8)
* ?:                                     Definições para Entrada e Saída.
                                                             (line  169)
* ??:                                    Definições para Entrada e Saída.
                                                             (line  181)
* [:                                     Definições para Matrizes e Álgebra Linear.
                                                             (line 1135)
* ]:                                     Definições para Matrizes e Álgebra Linear.
                                                             (line 1136)
* ^:                                     Operadores Aritméticos.
                                                             (line   10)
* ^^:                                    Operadores Geral.   (line    6)
* _:                                     Definições para Entrada e Saída.
                                                             (line   46)
* __:                                    Definições para Entrada e Saída.
                                                             (line    6)
* |:                                     Definições para itensor.
                                                             (line 1384)
* ~:                                     Definições para itensor.
                                                             (line 1351)
* abasep:                                Definições para o Pacote atensor.
                                                             (line  131)
* abs:                                   Operadores Geral.   (line  370)
* absboxchar:                            Definições para Entrada e Saída.
                                                             (line  188)
* absint:                                Definições para Séries de Fourier.
                                                             (line   28)
* absint <1>:                            Definições para Séries de Fourier.
                                                             (line   29)
* absint <2>:                            Definições para Séries de Fourier.
                                                             (line   30)
* acos:                                  Definições para Trigonometria.
                                                             (line    6)
* acosh:                                 Definições para Trigonometria.
                                                             (line    9)
* acot:                                  Definições para Trigonometria.
                                                             (line   12)
* acoth:                                 Definições para Trigonometria.
                                                             (line   15)
* acsc:                                  Definições para Trigonometria.
                                                             (line   18)
* acsch:                                 Definições para Trigonometria.
                                                             (line   21)
* activate:                              Definições para Contextos.
                                                             (line    6)
* activecontexts:                        Definições para Contextos.
                                                             (line   15)
* addcol:                                Definições para Matrizes e Álgebra Linear.
                                                             (line    6)
* additive:                              Operadores Geral.   (line  374)
* addmatrices:                           Definições para linearalgebra.
                                                             (line    6)
* addrow:                                Definições para Matrizes e Álgebra Linear.
                                                             (line   10)
* adim:                                  Definições para o Pacote atensor.
                                                             (line   77)
* Adição:                                Operadores Aritméticos.
                                                             (line    7)
* adjoin:                                Definições para Conjuntos.
                                                             (line    6)
* adjoint:                               Definições para Matrizes e Álgebra Linear.
                                                             (line   14)
* af:                                    Definições para o Pacote atensor.
                                                             (line   99)
* aform:                                 Definições para o Pacote atensor.
                                                             (line   83)
* agd:                                   Definições para simplification.
                                                             (line  253)
* airy_ai:                               Definições para Funções Especiais.
                                                             (line    6)
* airy_bi:                               Definições para Funções Especiais.
                                                             (line   25)
* airy_dai:                              Definições para Funções Especiais.
                                                             (line   20)
* airy_dbi:                              Definições para Funções Especiais.
                                                             (line   39)
* Ajuda:                                 Definições para Ajuda.
                                                             (line   93)
* algebraic:                             Definições para Polinómios.
                                                             (line    6)
* algepsilon:                            Definições para ponto Flutuante.
                                                             (line   14)
* algexact:                              Definições para Equações.
                                                             (line   15)
* algsys:                                Definições para Equações.
                                                             (line   31)
* algsys <1>:                            Definições para Equações.
                                                             (line   32)
* alg_type:                              Definições para o Pacote atensor.
                                                             (line   72)
* alias:                                 Definições para Linha de Comandos.
                                                             (line    6)
* aliases:                               Definições para Opções Diversas.
                                                             (line    6)
* allbut:                                Operadores Geral.   (line  389)
* allroots:                              Definições para Equações.
                                                             (line  133)
* allroots <1>:                          Definições para Equações.
                                                             (line  134)
* allsym:                                Definições para itensor.
                                                             (line  505)
* all_dotsimp_denoms:                    Definições para Funções Afins.
                                                             (line  128)
* alphabetic:                            Definições para Opções Diversas.
                                                             (line   14)
* alphacharp:                            Definições para caracteres.
                                                             (line    6)
* alphanumericp:                         Definições para caracteres.
                                                             (line    9)
* and:                                   Operadores Geral.   (line  315)
* antid:                                 Definições para Diferenciação.
                                                             (line    6)
* antidiff:                              Definições para Diferenciação.
                                                             (line   60)
* AntiDifference:                        Definições para zeilberger.
                                                             (line    6)
* antisymmetric:                         Operadores Geral.   (line  418)
* append:                                Definições para Listas.
                                                             (line    6)
* appendfile:                            Definições para Entrada e Saída.
                                                             (line  210)
* apply:                                 Definições para Definição de Função.
                                                             (line    6)
* apply1:                                Definições para Regras e Modelos.
                                                             (line    6)
* apply2:                                Definições para Regras e Modelos.
                                                             (line   20)
* applyb1:                               Definições para Regras e Modelos.
                                                             (line   33)
* apropos:                               Definições para Opções Diversas.
                                                             (line   33)
* args:                                  Definições para Opções Diversas.
                                                             (line   44)
* arithmetic:                            Definições para simplification.
                                                             (line  212)
* arithsum:                              Definições para simplification.
                                                             (line  230)
* array:                                 Definições para Arrays.
                                                             (line    6)
* array <1>:                             Definições para Arrays.
                                                             (line    7)
* array <2>:                             Definições para Arrays.
                                                             (line    8)
* arrayapply:                            Definições para Arrays.
                                                             (line   37)
* arrayinfo:                             Definições para Arrays.
                                                             (line   44)
* arraymake:                             Definições para Arrays.
                                                             (line  140)
* arrays:                                Definições para Arrays.
                                                             (line  185)
* ascii:                                 Definições para caracteres.
                                                             (line   13)
* asec:                                  Definições para Trigonometria.
                                                             (line   24)
* asech:                                 Definições para Trigonometria.
                                                             (line   27)
* asin:                                  Definições para Trigonometria.
                                                             (line   30)
* asinh:                                 Definições para Trigonometria.
                                                             (line   33)
* askexp:                                Definições para Simplificação.
                                                             (line    6)
* askinteger:                            Definições para Simplificação.
                                                             (line   13)
* askinteger <1>:                        Definições para Simplificação.
                                                             (line   14)
* askinteger <2>:                        Definições para Simplificação.
                                                             (line   15)
* askinteger <3>:                        Definições para Simplificação.
                                                             (line   16)
* asksign:                               Definições para Simplificação.
                                                             (line   29)
* assoc:                                 Definições para Listas.
                                                             (line   14)
* assoc <1>:                             Definições para Listas.
                                                             (line   15)
* assoc_legendre_p:                      Definições para polinómios ortogonais.
                                                             (line    6)
* assoc_legendre_q:                      Definições para polinómios ortogonais.
                                                             (line   12)
* assume:                                Definições para Contextos.
                                                             (line   22)
* assumescalar:                          Definições para Contextos.
                                                             (line   76)
* assume_pos:                            Definições para Contextos.
                                                             (line   99)
* assume_pos_pred:                       Definições para Contextos.
                                                             (line  124)
* asymbol:                               Definições para o Pacote atensor.
                                                             (line   88)
* asympa:                                Definições para Funções Especiais.
                                                             (line   44)
* at:                                    Definições para Expressões.
                                                             (line    6)
* at <1>:                                Definições para Expressões.
                                                             (line    7)
* atan:                                  Definições para Trigonometria.
                                                             (line   36)
* atan2:                                 Definições para Trigonometria.
                                                             (line   39)
* atanh:                                 Definições para Trigonometria.
                                                             (line   43)
* atensimp:                              Definições para o Pacote atensor.
                                                             (line   63)
* atom:                                  Definições para Listas.
                                                             (line   24)
* atomgrad:                              Definições para Diferenciação.
                                                             (line  110)
* atrig1:                                Definições para Trigonometria.
                                                             (line   46)
* atvalue:                               Definições para Diferenciação.
                                                             (line  115)
* atvalue <1>:                           Definições para Diferenciação.
                                                             (line  116)
* augcoefmatrix:                         Definições para Matrizes e Álgebra Linear.
                                                             (line   18)
* augmented_lagrangian_method:           Definições para augmented_lagrangian.
                                                             (line    6)
* augmented_lagrangian_method <1>:       Definições para augmented_lagrangian.
                                                             (line    7)
* av:                                    Definições para o Pacote atensor.
                                                             (line  106)
* backsubst:                             Definições para Equações.
                                                             (line  192)
* backtrace:                             Definições para Fluxo de Programa.
                                                             (line    6)
* backtrace <1>:                         Definições para Fluxo de Programa.
                                                             (line    7)
* barsplot:                              Definições para gráficos estatísticos.
                                                             (line  170)
* barsplot <1>:                          Definições para gráficos estatísticos.
                                                             (line  171)
* barsplot <2>:                          Definições para gráficos estatísticos.
                                                             (line  172)
* barsplot <3>:                          Definições para gráficos estatísticos.
                                                             (line  173)
* Base do logaritmo natural:             Definições para Constantes.
                                                             (line    7)
* bashindices:                           Definições para Arrays.
                                                             (line  214)
* batch:                                 Definições para Entrada e Saída.
                                                             (line  219)
* batchload:                             Definições para Entrada e Saída.
                                                             (line  255)
* bc2:                                   Definições para Equações Diferenciais.
                                                             (line    6)
* bdvac:                                 Definições para ctensor.
                                                             (line  775)
* belln:                                 Definições para Conjuntos.
                                                             (line   24)
* berlefact:                             Definições para Polinómios.
                                                             (line   12)
* bern:                                  Definições para Teoria dos Números.
                                                             (line    6)
* bernpoly:                              Definições para Teoria dos Números.
                                                             (line   24)
* bessel:                                Definições para Funções Especiais.
                                                             (line   52)
* besselexpand:                          Definições para Funções Especiais.
                                                             (line  122)
* bessel_i:                              Definições para Funções Especiais.
                                                             (line   89)
* bessel_j:                              Definições para Funções Especiais.
                                                             (line   58)
* bessel_k:                              Definições para Funções Especiais.
                                                             (line  107)
* bessel_y:                              Definições para Funções Especiais.
                                                             (line   75)
* beta:                                  Definições para Funções Especiais.
                                                             (line  160)
* bezout:                                Definições para Polinómios.
                                                             (line   19)
* bffac:                                 Definições para ponto Flutuante.
                                                             (line    6)
* bfhzeta:                               Definições para Teoria dos Números.
                                                             (line   34)
* bfloat:                                Definições para ponto Flutuante.
                                                             (line   19)
* bfloatp:                               Definições para ponto Flutuante.
                                                             (line   30)
* bfpsi:                                 Definições para ponto Flutuante.
                                                             (line   34)
* bfpsi0:                                Definições para ponto Flutuante.
                                                             (line   35)
* bftorat:                               Definições para ponto Flutuante.
                                                             (line   46)
* bftrunc:                               Definições para ponto Flutuante.
                                                             (line   55)
* bfzeta:                                Definições para Teoria dos Números.
                                                             (line   27)
* bimetric:                              Definições para ctensor.
                                                             (line  799)
* binomial:                              Definições para Teoria dos Números.
                                                             (line   45)
* block:                                 Definições para Definição de Função.
                                                             (line   65)
* block <1>:                             Definições para Definição de Função.
                                                             (line   66)
* blockmatrixp:                          Definições para linearalgebra.
                                                             (line   21)
* bode_gain:                             Definições para bode.
                                                             (line    6)
* bode_phase:                            Definições para bode.
                                                             (line   51)
* bothcoef:                              Definições para Polinómios.
                                                             (line   23)
* box:                                   Definições para Expressões.
                                                             (line   52)
* box <1>:                               Definições para Expressões.
                                                             (line   53)
* boxchar:                               Definições para Expressões.
                                                             (line  101)
* boxplot:                               Definições para gráficos estatísticos.
                                                             (line  224)
* boxplot <1>:                           Definições para gráficos estatísticos.
                                                             (line  225)
* break:                                 Definições para Definição de Função.
                                                             (line  115)
* breakup:                               Definições para Equações.
                                                             (line  201)
* bug_report:                            Definições para Detecção e Relato de Erros.
                                                             (line   52)
* buildq:                                Macros.             (line    6)
* build_info:                            Definições para Detecção e Relato de Erros.
                                                             (line   64)
* burn:                                  Definições para Teoria dos Números.
                                                             (line   68)
* cabs:                                  Operadores Geral.   (line  426)
* canform:                               Definições para itensor.
                                                             (line  567)
* canten:                                Definições para itensor.
                                                             (line  486)
* cardinality:                           Definições para Conjuntos.
                                                             (line   52)
* carg:                                  Definições para Expressões.
                                                             (line  113)
* cartan:                                Definições para Diferenciação.
                                                             (line  171)
* cartesian_product:                     Definições para Conjuntos.
                                                             (line   70)
* catch:                                 Definições para Definição de Função.
                                                             (line  121)
* cauchysum:                             Definições para Séries.
                                                             (line    6)
* cbffac:                                Definições para ponto Flutuante.
                                                             (line   63)
* cdf_bernoulli:                         Definições para distribuições discretas.
                                                             (line  189)
* cdf_beta:                              Definições para distribuições contínuas.
                                                             (line  783)
* cdf_binomial:                          Definições para distribuições discretas.
                                                             (line   12)
* cdf_cauchy:                            Definições para distribuições contínuas.
                                                             (line 1300)
* cdf_chi2:                              Definições para distribuições contínuas.
                                                             (line  199)
* cdf_continuous_uniform:                Definições para distribuições contínuas.
                                                             (line  868)
* cdf_discrete_uniform:                  Definições para distribuições discretas.
                                                             (line  369)
* cdf_exp:                               Definições para distribuições contínuas.
                                                             (line  465)
* cdf_f:                                 Definições para distribuições contínuas.
                                                             (line  356)
* cdf_gamma:                             Definições para distribuições contínuas.
                                                             (line  698)
* cdf_geometric:                         Definições para distribuições discretas.
                                                             (line  295)
* cdf_gumbel:                            Definições para distribuições contínuas.
                                                             (line 1325)
* cdf_hypergeometric:                    Definições para distribuições discretas.
                                                             (line  426)
* cdf_laplace:                           Definições para distribuições contínuas.
                                                             (line 1249)
* cdf_logistic:                          Definições para distribuições contínuas.
                                                             (line  922)
* cdf_lognormal:                         Definições para distribuições contínuas.
                                                             (line  631)
* cdf_negative_binomial:                 Definições para distribuições discretas.
                                                             (line  508)
* cdf_normal:                            Definições para distribuições contínuas.
                                                             (line   11)
* cdf_pareto:                            Definições para distribuições contínuas.
                                                             (line  973)
* cdf_poisson:                           Definições para distribuições discretas.
                                                             (line   98)
* cdf_rank_sum:                          Definições para distribuições especiais.
                                                             (line   27)
* cdf_rayleigh:                          Definições para distribuições contínuas.
                                                             (line 1088)
* cdf_signed_rank:                       Definições para distribuições especiais.
                                                             (line   13)
* cdf_student_t:                         Definições para distribuições contínuas.
                                                             (line   89)
* cdf_weibull:                           Definições para distribuições contínuas.
                                                             (line 1023)
* cdisplay:                              Definições para ctensor.
                                                             (line  825)
* ceiling:                               Operadores Geral.   (line  429)
* central_moment:                        Definições para estatística descritiva.
                                                             (line  140)
* central_moment <1>:                    Definições para estatística descritiva.
                                                             (line  141)
* cequal:                                Definições para caracteres.
                                                             (line   23)
* cequalignore:                          Definições para caracteres.
                                                             (line   26)
* cf:                                    Definições para Teoria dos Números.
                                                             (line   81)
* cfdisrep:                              Definições para Teoria dos Números.
                                                             (line  145)
* cfexpand:                              Definições para Teoria dos Números.
                                                             (line  161)
* cflength:                              Definições para Teoria dos Números.
                                                             (line  177)
* cframe_flag:                           Definições para ctensor.
                                                             (line 1071)
* cgeodesic:                             Definições para ctensor.
                                                             (line  769)
* cgreaterp:                             Definições para caracteres.
                                                             (line   29)
* cgreaterpignore:                       Definições para caracteres.
                                                             (line   33)
* changename:                            Definições para itensor.
                                                             (line   17)
* changevar:                             Definições para Integração.
                                                             (line    6)
* chaosgame:                             Análise gráfica de sistemas dinâmicos discretos.
                                                             (line    6)
* charat:                                Definições para sequências de caracteres.
                                                             (line   19)
* charfun:                               Operadores Geral.   (line  474)
* charfun2:                              Definições para interpol.
                                                             (line   59)
* charlist:                              Definições para sequências de caracteres.
                                                             (line   27)
* charp:                                 Definições para caracteres.
                                                             (line   36)
* charpoly:                              Definições para Matrizes e Álgebra Linear.
                                                             (line   31)
* chebyshev_t:                           Definições para polinómios ortogonais.
                                                             (line   17)
* chebyshev_u:                           Definições para polinómios ortogonais.
                                                             (line   22)
* checkdiv:                              Definições para ctensor.
                                                             (line  759)
* check_overlaps:                        Definições para Funções Afins.
                                                             (line   86)
* cholesky:                              Definições para linearalgebra.
                                                             (line   71)
* cholesky <1>:                          Definições para linearalgebra.
                                                             (line   72)
* christof:                              Definições para ctensor.
                                                             (line  182)
* cint:                                  Definições para caracteres.
                                                             (line   41)
* clear_rules:                           Definições para Regras e Modelos.
                                                             (line  957)
* clessp:                                Definições para caracteres.
                                                             (line   44)
* clesspignore:                          Definições para caracteres.
                                                             (line   48)
* close:                                 Definições para entrada e saída.
                                                             (line   25)
* closefile:                             Definições para Entrada e Saída.
                                                             (line  270)
* cmetric:                               Definições para ctensor.
                                                             (line   14)
* cmetric <1>:                           Definições para ctensor.
                                                             (line   15)
* cnonmet_flag:                          Definições para ctensor.
                                                             (line 1088)
* coeff:                                 Definições para Polinómios.
                                                             (line   37)
* coefmatrix:                            Definições para Matrizes e Álgebra Linear.
                                                             (line   67)
* cograd:                                Definições para ctensor.
                                                             (line  707)
* col:                                   Definições para Matrizes e Álgebra Linear.
                                                             (line   76)
* collapse:                              Definições para Entrada e Saída.
                                                             (line  273)
* collectterms:                          Definições para simplification.
                                                             (line  137)
* columnop:                              Definições para linearalgebra.
                                                             (line   26)
* columnspace:                           Definições para linearalgebra.
                                                             (line   37)
* columnswap:                            Definições para linearalgebra.
                                                             (line   32)
* columnvector:                          Definições para Matrizes e Álgebra Linear.
                                                             (line   80)
* combination:                           Definições para simplification.
                                                             (line  279)
* combine:                               Definições para Polinómios.
                                                             (line   53)
* commutative:                           Operadores Geral.   (line  491)
* comp2pui:                              Definições para Simetrias.
                                                             (line    9)
* compare:                               Operadores Geral.   (line  496)
* compfile:                              Definições para Definição de Função.
                                                             (line  144)
* compfile <1>:                          Definições para Definição de Função.
                                                             (line  145)
* compfile <2>:                          Definições para Definição de Função.
                                                             (line  146)
* compile:                               Definições para Definição de Função.
                                                             (line  163)
* compile <1>:                           Definições para Definição de Função.
                                                             (line  164)
* compile <2>:                           Definições para Definição de Função.
                                                             (line  165)
* compile_file:                          Definições para Definição de Função.
                                                             (line 1092)
* compile_file <1>:                      Definições para Definição de Função.
                                                             (line 1093)
* compile_file <2>:                      Definições para Definição de Função.
                                                             (line 1094)
* components:                            Definições para itensor.
                                                             (line  185)
* concan:                                Definições para itensor.
                                                             (line  499)
* concat:                                Definições para Entrada e Saída.
                                                             (line  283)
* conjugate:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  106)
* Conjunção lógica:                      Operadores Geral.   (line  316)
* conmetderiv:                           Definições para itensor.
                                                             (line  749)
* cons:                                  Definições para Listas.
                                                             (line   30)
* constant:                              Definições para Expressões.
                                                             (line  145)
* Constante de Euler:                    Definições para Constantes.
                                                             (line    7)
* Constante de Euler-Mascheroni:         Definições para Teoria dos Números.
                                                             (line  221)
* constantp:                             Definições para Expressões.
                                                             (line  149)
* constituent:                           Definições para caracteres.
                                                             (line   51)
* Consulta documentação:                 Definições para Entrada e Saída.
                                                             (line  170)
* Consulta documentação (busca inexacta): Definições para Entrada e Saída.
                                                             (line  182)
* cont2part:                             Definições para Simetrias.
                                                             (line  208)
* content:                               Definições para Polinómios.
                                                             (line   57)
* context:                               Definições para Contextos.
                                                             (line  193)
* contexts:                              Definições para Contextos.
                                                             (line  207)
* continuous_freq:                       Definições para manipulação da dados.
                                                             (line    6)
* continuous_freq <1>:                   Definições para manipulação da dados.
                                                             (line    7)
* contortion:                            Definições para ctensor.
                                                             (line  643)
* contract:                              Definições para itensor.
                                                             (line  169)
* contract <1>:                          Definições para Simetrias.
                                                             (line  219)
* contragrad:                            Definições para ctensor.
                                                             (line  711)
* Contração com um vector:               Definições para itensor.
                                                             (line 1385)
* convert:                               Definições para Units.
                                                             (line  142)
* coord:                                 Definições para itensor.
                                                             (line  727)
* copy:                                  Definições para linearalgebra.
                                                             (line   45)
* copylist:                              Definições para Listas.
                                                             (line   36)
* copymatrix:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  125)
* cor:                                   Definições específicas para estatística descritiva de várias variáveis.
                                                             (line  110)
* cor <1>:                               Definições específicas para estatística descritiva de várias variáveis.
                                                             (line  111)
* cos:                                   Definições para Trigonometria.
                                                             (line   54)
* cosh:                                  Definições para Trigonometria.
                                                             (line   57)
* cosnpiflag:                            Definições para Séries de Fourier.
                                                             (line   55)
* cot:                                   Definições para Trigonometria.
                                                             (line   60)
* coth:                                  Definições para Trigonometria.
                                                             (line   63)
* cov:                                   Definições específicas para estatística descritiva de várias variáveis.
                                                             (line    6)
* cov1:                                  Definições específicas para estatística descritiva de várias variáveis.
                                                             (line   37)
* covdiff:                               Definições para itensor.
                                                             (line  896)
* covect:                                Definições para Matrizes e Álgebra Linear.
                                                             (line   81)
* covers:                                Definições para simplification.
                                                             (line  264)
* create_list:                           Definições para Listas.
                                                             (line   39)
* csc:                                   Definições para Trigonometria.
                                                             (line   66)
* csch:                                  Definições para Trigonometria.
                                                             (line   69)
* csetup:                                Definições para ctensor.
                                                             (line    9)
* cspline:                               Definições para interpol.
                                                             (line  121)
* cspline <1>:                           Definições para interpol.
                                                             (line  122)
* ctaylor:                               Definições para ctensor.
                                                             (line  318)
* ctaypov:                               Definições para ctensor.
                                                             (line 1107)
* ctaypt:                                Definições para ctensor.
                                                             (line 1112)
* ctayswitch:                            Definições para ctensor.
                                                             (line 1095)
* ctayvar:                               Definições para ctensor.
                                                             (line 1102)
* ctorsion_flag:                         Definições para ctensor.
                                                             (line 1081)
* ctransform:                            Definições para ctensor.
                                                             (line  656)
* ctranspose:                            Definições para linearalgebra.
                                                             (line   79)
* ctrgsimp:                              Definições para ctensor.
                                                             (line 1065)
* ct_coords:                             Definições para ctensor.
                                                             (line 1253)
* ct_coordsys:                           Definições para ctensor.
                                                             (line   33)
* ct_coordsys <1>:                       Definições para ctensor.
                                                             (line   34)
* cunlisp:                               Definições para caracteres.
                                                             (line   65)
* current_let_rule_package:              Definições para Regras e Modelos.
                                                             (line   50)
* cv:                                    Definições para estatística descritiva.
                                                             (line  165)
* cv <1>:                                Definições para estatística descritiva.
                                                             (line  166)
* dataplot:                              Definições para gráficos estatísticos.
                                                             (line    6)
* dataplot <1>:                          Definições para gráficos estatísticos.
                                                             (line    7)
* dataplot <2>:                          Definições para gráficos estatísticos.
                                                             (line    8)
* dataplot <3>:                          Definições para gráficos estatísticos.
                                                             (line    9)
* dblint:                                Definições para Integração.
                                                             (line   59)
* deactivate:                            Definições para Contextos.
                                                             (line  238)
* debugmode:                             Definições para Linha de Comandos.
                                                             (line   12)
* declare:                               Definições para Expressões.
                                                             (line  179)
* declare_translated:                    Definições para Definição de Função.
                                                             (line 1121)
* declare_weights:                       Definições para Funções Afins.
                                                             (line   55)
* decsym:                                Definições para itensor.
                                                             (line  514)
* default_let_rule_package:              Definições para Regras e Modelos.
                                                             (line   64)
* defcon:                                Definições para itensor.
                                                             (line  146)
* defcon <1>:                            Definições para itensor.
                                                             (line  147)
* define:                                Definições para Definição de Função.
                                                             (line  178)
* define <1>:                            Definições para Definição de Função.
                                                             (line  179)
* define <2>:                            Definições para Definição de Função.
                                                             (line  180)
* define <3>:                            Definições para Definição de Função.
                                                             (line  181)
* define <4>:                            Definições para Definição de Função.
                                                             (line  182)
* define_variable:                       Definições para Definição de Função.
                                                             (line  268)
* defint:                                Definições para Integração.
                                                             (line  107)
* defmatch:                              Definições para Regras e Modelos.
                                                             (line   72)
* defmatch <1>:                          Definições para Regras e Modelos.
                                                             (line   73)
* defrule:                               Definições para Regras e Modelos.
                                                             (line  172)
* deftaylor:                             Definições para Séries.
                                                             (line   38)
* del:                                   Definições para Diferenciação.
                                                             (line  183)
* delete:                                Definições para Listas.
                                                             (line   67)
* delete <1>:                            Definições para Listas.
                                                             (line   68)
* deleten:                               Definições para ctensor.
                                                             (line 1040)
* Delimitador de Lista:                  Definições para Matrizes e Álgebra Linear.
                                                             (line 1137)
* delta:                                 Definições para Diferenciação.
                                                             (line  202)
* demo:                                  Definições para Ajuda.
                                                             (line    6)
* demoivre:                              Definições para Simplificação.
                                                             (line   37)
* demoivre <1>:                          Definições para Simplificação.
                                                             (line   38)
* denom:                                 Definições para Polinómios.
                                                             (line   69)
* dependencies:                          Definições para Diferenciação.
                                                             (line  216)
* depends:                               Definições para Diferenciação.
                                                             (line  226)
* derivabbrev:                           Definições para Diferenciação.
                                                             (line  281)
* derivdegree:                           Definições para Diferenciação.
                                                             (line  288)
* derivlist:                             Definições para Diferenciação.
                                                             (line  302)
* derivsubst:                            Definições para Diferenciação.
                                                             (line  306)
* describe:                              Definições para Ajuda.
                                                             (line   90)
* describe <1>:                          Definições para Ajuda.
                                                             (line   91)
* describe <2>:                          Definições para Ajuda.
                                                             (line   92)
* desolve:                               Definições para Equações Diferenciais.
                                                             (line   18)
* desolve <1>:                           Definições para Equações Diferenciais.
                                                             (line   19)
* DETCOEF:                               Definições para lsquares.
                                                             (line    6)
* determinant:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  134)
* detout:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  144)
* diag:                                  Definições para diag.
                                                             (line    6)
* diagmatrix:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  171)
* diagmatrixp:                           Definições para ctensor.
                                                             (line  809)
* diagmetric:                            Definições para ctensor.
                                                             (line 1054)
* diag_matrix:                           Definições para linearalgebra.
                                                             (line   85)
* diff:                                  Definições para Diferenciação.
                                                             (line  389)
* diff <1>:                              Definições para Diferenciação.
                                                             (line  313)
* diff <2>:                              Definições para Diferenciação.
                                                             (line  314)
* diff <3>:                              Definições para Diferenciação.
                                                             (line  315)
* diff <4>:                              Definições para Diferenciação.
                                                             (line  316)
* diff <5>:                              Definições para itensor.
                                                             (line  586)
* digitcharp:                            Definições para caracteres.
                                                             (line   69)
* dim:                                   Definições para ctensor.
                                                             (line 1047)
* dimension:                             Definições para Equações.
                                                             (line  273)
* dimension <1>:                         Definições para Equações.
                                                             (line  274)
* direct:                                Definições para Simetrias.
                                                             (line  268)
* discrete_freq:                         Definições para manipulação da dados.
                                                             (line   25)
* disjoin:                               Definições para Conjuntos.
                                                             (line   89)
* disjointp:                             Definições para Conjuntos.
                                                             (line  108)
* Disjunção lógica:                      Operadores Geral.   (line  338)
* disolate:                              Definições para Expressões.
                                                             (line  478)
* disp:                                  Definições para Entrada e Saída.
                                                             (line  332)
* dispcon:                               Definições para Entrada e Saída.
                                                             (line  338)
* dispcon <1>:                           Definições para Entrada e Saída.
                                                             (line  339)
* dispflag:                              Definições para Equações.
                                                             (line  278)
* dispform:                              Definições para Expressões.
                                                             (line  487)
* dispfun:                               Definições para Definição de Função.
                                                             (line  358)
* dispfun <1>:                           Definições para Definição de Função.
                                                             (line  359)
* dispJordan:                            Definições para diag.
                                                             (line   94)
* display:                               Definições para Entrada e Saída.
                                                             (line  344)
* display2d:                             Definições para Entrada e Saída.
                                                             (line  358)
* display_format_internal:               Definições para Entrada e Saída.
                                                             (line  364)
* disprule:                              Definições para Regras e Modelos.
                                                             (line  186)
* disprule <1>:                          Definições para Regras e Modelos.
                                                             (line  187)
* dispterms:                             Definições para Entrada e Saída.
                                                             (line  387)
* distrib:                               Definições para Expressões.
                                                             (line  499)
* divide:                                Definições para Polinómios.
                                                             (line   72)
* divisors:                              Definições para Conjuntos.
                                                             (line  121)
* Divisão:                               Operadores Aritméticos.
                                                             (line   10)
* divsum:                                Definições para Teoria dos Números.
                                                             (line  194)
* divsum <1>:                            Definições para Teoria dos Números.
                                                             (line  195)
* do:                                    Definições para Fluxo de Programa.
                                                             (line   53)
* doallmxops:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  183)
* domain:                                Definições para Simplificação.
                                                             (line   55)
* domxexpt:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  191)
* domxmxops:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  223)
* domxnctimes:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  230)
* dontfactor:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  236)
* doscmxops:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  246)
* doscmxplus:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  252)
* dot0nscsimp:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  258)
* dot0simp:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  264)
* dot1simp:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  270)
* dotassoc:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  276)
* dotconstrules:                         Definições para Matrizes e Álgebra Linear.
                                                             (line  282)
* dotdistrib:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  290)
* dotexptsimp:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  296)
* dotident:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  302)
* dotproduct:                            Definições para linearalgebra.
                                                             (line  108)
* dotscrules:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  307)
* dotsimp:                               Definições para Funções Afins.
                                                             (line   67)
* dpart:                                 Definições para Expressões.
                                                             (line  521)
* dscalar:                               Definições para Diferenciação.
                                                             (line  394)
* dscalar <1>:                           Definições para ctensor.
                                                             (line  739)
* Duplo factorial:                       Operadores Geral.   (line   68)
* e:                                     Definições para Constantes.
                                                             (line    7)
* echelon:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  313)
* eigens_by_jacobi:                      Definições para linearalgebra.
                                                             (line  114)
* eigens_by_jacobi <1>:                  Definições para linearalgebra.
                                                             (line  115)
* eigenvalues:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  344)
* eigenvectors:                          Definições para Matrizes e Álgebra Linear.
                                                             (line  370)
* eighth:                                Definições para Listas.
                                                             (line   86)
* einstein:                              Definições para ctensor.
                                                             (line  218)
* eivals:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  345)
* eivects:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  371)
* ele2comp:                              Definições para Simetrias.
                                                             (line   28)
* ele2polynome:                          Definições para Simetrias.
                                                             (line  493)
* ele2pui:                               Definições para Simetrias.
                                                             (line   22)
* elem:                                  Definições para Simetrias.
                                                             (line   34)
* elementp:                              Definições para Conjuntos.
                                                             (line  166)
* eliminate:                             Definições para Polinómios.
                                                             (line   88)
* elliptic_e:                            Definições para Integrais Elípticas.
                                                             (line   13)
* elliptic_ec:                           Definições para Integrais Elípticas.
                                                             (line   44)
* elliptic_eu:                           Definições para Integrais Elípticas.
                                                             (line   19)
* elliptic_f:                            Definições para Integrais Elípticas.
                                                             (line    6)
* elliptic_kc:                           Definições para Integrais Elípticas.
                                                             (line   36)
* elliptic_pi:                           Definições para Integrais Elípticas.
                                                             (line   29)
* ematrix:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  409)
* emptyp:                                Definições para Conjuntos.
                                                             (line  178)
* endcons:                               Definições para Listas.
                                                             (line   90)
* entermatrix:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  413)
* entertensor:                           Definições para itensor.
                                                             (line    9)
* entier:                                Operadores Geral.   (line  527)
* Entrada anterior:                      Definições para Entrada e Saída.
                                                             (line   47)
* epsilon_sx:                            Definições para simplex.
                                                             (line    6)
* equal:                                 Operadores Geral.   (line  532)
* equalp:                                Definições para Séries de Fourier.
                                                             (line    6)
* equiv_classes:                         Definições para Conjuntos.
                                                             (line  189)
* erf:                                   Definições para Integração.
                                                             (line  119)
* erfflag:                               Definições para Integração.
                                                             (line  123)
* errcatch:                              Definições para Fluxo de Programa.
                                                             (line  241)
* error:                                 Definições para Fluxo de Programa.
                                                             (line  252)
* error <1>:                             Definições para Fluxo de Programa.
                                                             (line  253)
* errormsg:                              Definições para Fluxo de Programa.
                                                             (line  268)
* error_size:                            Definições para Entrada e Saída.
                                                             (line  401)
* error_syms:                            Definições para Entrada e Saída.
                                                             (line  445)
* euler:                                 Definições para Teoria dos Números.
                                                             (line  211)
* ev:                                    Definições para Linha de Comandos.
                                                             (line   24)
* eval:                                  Operadores Geral.   (line  726)
* eval_string:                           Definições para eval_string.
                                                             (line    6)
* evenp:                                 Operadores Geral.   (line  730)
* every:                                 Definições para Conjuntos.
                                                             (line  222)
* every <1>:                             Definições para Conjuntos.
                                                             (line  223)
* evflag:                                Definições para Linha de Comandos.
                                                             (line  191)
* evfun:                                 Definições para Linha de Comandos.
                                                             (line  247)
* evolution:                             Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   18)
* evolution2d:                           Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   30)
* evundiff:                              Definições para itensor.
                                                             (line  648)
* ev_point:                              Definições para zeilberger.
                                                             (line  153)
* example:                               Definições para Ajuda.
                                                             (line  144)
* example <1>:                           Definições para Ajuda.
                                                             (line  145)
* exp:                                   Definições para Expressões.
                                                             (line  535)
* expand:                                Definições para Simplificação.
                                                             (line   61)
* expand <1>:                            Definições para Simplificação.
                                                             (line   62)
* expandwrt:                             Definições para Simplificação.
                                                             (line  102)
* expandwrt_denom:                       Definições para Simplificação.
                                                             (line  115)
* expandwrt_factored:                    Definições para Simplificação.
                                                             (line  124)
* explose:                               Definições para Simetrias.
                                                             (line  235)
* expon:                                 Definições para Simplificação.
                                                             (line  132)
* Exponenciação:                         Operadores Aritméticos.
                                                             (line   11)
* exponenciação não comutativa:          Operadores Geral.   (line    7)
* exponentialize:                        Definições para Simplificação.
                                                             (line  140)
* exponentialize <1>:                    Definições para Simplificação.
                                                             (line  141)
* expop:                                 Definições para Simplificação.
                                                             (line  155)
* express:                               Definições para Diferenciação.
                                                             (line  399)
* Expressão de entrada actual:           Definições para Entrada e Saída.
                                                             (line    7)
* expt:                                  Definições para Entrada e Saída.
                                                             (line  460)
* exptdispflag:                          Definições para Entrada e Saída.
                                                             (line  467)
* exptisolate:                           Definições para Expressões.
                                                             (line  578)
* exptsubst:                             Definições para Expressões.
                                                             (line  584)
* exsec:                                 Definições para simplification.
                                                             (line  269)
* extdiff:                               Definições para itensor.
                                                             (line 1414)
* extract_linear_equations:              Definições para Funções Afins.
                                                             (line  110)
* extremal_subset:                       Definições para Conjuntos.
                                                             (line  288)
* extremal_subset <1>:                   Definições para Conjuntos.
                                                             (line  289)
* ezgcd:                                 Definições para Polinómios.
                                                             (line  115)
* f90:                                   Definições para f90.
                                                             (line    6)
* facexpand:                             Definições para Polinómios.
                                                             (line  121)
* facsum:                                Definições para simplification.
                                                             (line   58)
* facsum_combine:                        Definições para simplification.
                                                             (line  115)
* factcomb:                              Definições para Polinómios.
                                                             (line  128)
* factlim:                               Definições para Simplificação.
                                                             (line  165)
* factor:                                Definições para Polinómios.
                                                             (line  136)
* factor <1>:                            Definições para Polinómios.
                                                             (line  137)
* factorfacsum:                          Definições para simplification.
                                                             (line  130)
* factorflag:                            Definições para Polinómios.
                                                             (line  269)
* Factorial:                             Operadores Geral.   (line    9)
* factorial:                             Definições para Teoria dos Números.
                                                             (line  223)
* factorout:                             Definições para Polinómios.
                                                             (line  275)
* factorsum:                             Definições para Polinómios.
                                                             (line  280)
* facts:                                 Definições para Contextos.
                                                             (line  241)
* facts <1>:                             Definições para Contextos.
                                                             (line  242)
* false:                                 Definições para Constantes.
                                                             (line   14)
* fasttimes:                             Definições para Polinómios.
                                                             (line  299)
* fast_central_elements:                 Definições para Funções Afins.
                                                             (line   74)
* fast_linsolve:                         Definições para Funções Afins.
                                                             (line    6)
* fb:                                    Definições para ctensor.
                                                             (line 1199)
* feature:                               Definições para Ambiente em Tempo de Execução.
                                                             (line    6)
* featurep:                              Definições para Ambiente em Tempo de Execução.
                                                             (line   15)
* features:                              Definições para Contextos.
                                                             (line  253)
* fft:                                   Definições para Numérico.
                                                             (line   61)
* fib:                                   Definições para Teoria dos Números.
                                                             (line  227)
* fibtophi:                              Definições para Teoria dos Números.
                                                             (line  238)
* fifth:                                 Definições para Listas.
                                                             (line   95)
* filename_merge:                        Definições para Entrada e Saída.
                                                             (line  473)
* file_output_append:                    Definições para Entrada e Saída.
                                                             (line  195)
* file_search:                           Definições para Entrada e Saída.
                                                             (line  480)
* file_search <1>:                       Definições para Entrada e Saída.
                                                             (line  481)
* file_search_demo:                      Definições para Entrada e Saída.
                                                             (line  524)
* file_search_lisp:                      Definições para Entrada e Saída.
                                                             (line  523)
* file_search_maxima:                    Definições para Entrada e Saída.
                                                             (line  522)
* file_type:                             Definições para Entrada e Saída.
                                                             (line  559)
* fillarray:                             Definições para Arrays.
                                                             (line  222)
* findde:                                Definições para ctensor.
                                                             (line  662)
* find_root:                             Definições para Numérico.
                                                             (line  220)
* find_root <1>:                         Definições para Numérico.
                                                             (line  221)
* find_root_abs:                         Definições para Numérico.
                                                             (line  268)
* find_root_error:                       Definições para Numérico.
                                                             (line  281)
* find_root_rel:                         Definições para Numérico.
                                                             (line  295)
* first:                                 Definições para Listas.
                                                             (line   99)
* fix:                                   Operadores Geral.   (line  734)
* flatten:                               Definições para Conjuntos.
                                                             (line  308)
* flength:                               Definições para entrada e saída.
                                                             (line   29)
* flipflag:                              Definições para itensor.
                                                             (line  133)
* float:                                 Definições para ponto Flutuante.
                                                             (line   68)
* float2bf:                              Definições para ponto Flutuante.
                                                             (line   75)
* floatnump:                             Definições para ponto Flutuante.
                                                             (line   83)
* floor:                                 Operadores Geral.   (line  641)
* flush:                                 Definições para itensor.
                                                             (line  703)
* flush1deriv:                           Definições para itensor.
                                                             (line  848)
* flushd:                                Definições para itensor.
                                                             (line  707)
* flushnd:                               Definições para itensor.
                                                             (line  711)
* for:                                   Definições para Fluxo de Programa.
                                                             (line  272)
* forget:                                Definições para Contextos.
                                                             (line  278)
* forget <1>:                            Definições para Contextos.
                                                             (line  279)
* fortindent:                            Definições para Numérico.
                                                             (line  126)
* fortran:                               Definições para Numérico.
                                                             (line  134)
* fortspaces:                            Definições para Numérico.
                                                             (line  187)
* fourcos:                               Definições para Séries de Fourier.
                                                             (line   66)
* fourexpand:                            Definições para Séries de Fourier.
                                                             (line   60)
* fourier:                               Definições para Séries de Fourier.
                                                             (line   42)
* fourint:                               Definições para Séries de Fourier.
                                                             (line   78)
* fourintcos:                            Definições para Séries de Fourier.
                                                             (line   82)
* fourintsin:                            Definições para Séries de Fourier.
                                                             (line   86)
* foursimp:                              Definições para Séries de Fourier.
                                                             (line   46)
* foursin:                               Definições para Séries de Fourier.
                                                             (line   70)
* fourth:                                Definições para Listas.
                                                             (line  112)
* fposition:                             Definições para entrada e saída.
                                                             (line   32)
* fposition <1>:                         Definições para entrada e saída.
                                                             (line   33)
* fpprec:                                Definições para ponto Flutuante.
                                                             (line   87)
* fpprintprec:                           Definições para ponto Flutuante.
                                                             (line   96)
* frame_bracket:                         Definições para ctensor.
                                                             (line  451)
* freeof:                                Definições para Expressões.
                                                             (line  590)
* freshline:                             Definições para entrada e saída.
                                                             (line   39)
* freshline <1>:                         Definições para entrada e saída.
                                                             (line   40)
* fullmap:                               Operadores Geral.   (line  737)
* fullmapl:                              Operadores Geral.   (line  756)
* fullratsimp:                           Definições para Polinómios.
                                                             (line  307)
* fullratsubst:                          Definições para Polinómios.
                                                             (line  345)
* fullsetify:                            Definições para Conjuntos.
                                                             (line  388)
* full_listify:                          Definições para Conjuntos.
                                                             (line  373)
* funcsolve:                             Definições para Equações.
                                                             (line  286)
* functions:                             Definições para Definição de Função.
                                                             (line  444)
* fundef:                                Definições para Definição de Função.
                                                             (line  490)
* funmake:                               Definições para Definição de Função.
                                                             (line  511)
* funp:                                  Definições para Séries de Fourier.
                                                             (line   20)
* funp <1>:                              Definições para Séries de Fourier.
                                                             (line   21)
* gamma:                                 Definições para Funções Especiais.
                                                             (line  163)
* gammalim:                              Definições para Funções Especiais.
                                                             (line  172)
* gaussprob:                             Definições para simplification.
                                                             (line  242)
* gcd:                                   Definições para Polinómios.
                                                             (line  391)
* gcdex:                                 Definições para Polinómios.
                                                             (line  412)
* gcdex <1>:                             Definições para Polinómios.
                                                             (line  413)
* gcdivide:                              Definições para simplification.
                                                             (line  203)
* gcfac:                                 Definições para simplification.
                                                             (line  427)
* gcfactor:                              Definições para Polinómios.
                                                             (line  446)
* gd:                                    Definições para simplification.
                                                             (line  248)
* gdet:                                  Definições para ctensor.
                                                             (line 1117)
* genfact:                               Definições para Expressões.
                                                             (line  680)
* genindex:                              Definições para Opções Diversas.
                                                             (line   59)
* genmatrix:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  450)
* genmatrix <1>:                         Definições para Matrizes e Álgebra Linear.
                                                             (line  451)
* genmatrix <2>:                         Definições para Matrizes e Álgebra Linear.
                                                             (line  452)
* gensumnum:                             Definições para Opções Diversas.
                                                             (line   65)
* gen_laguerre:                          Definições para polinómios ortogonais.
                                                             (line   27)
* geometric:                             Definições para simplification.
                                                             (line  218)
* geometric_mean:                        Definições para estatística descritiva.
                                                             (line  370)
* geometric_mean <1>:                    Definições para estatística descritiva.
                                                             (line  371)
* geosum:                                Definições para simplification.
                                                             (line  235)
* get:                                   Definições para Listas.
                                                             (line  116)
* get_lu_factors:                        Definições para linearalgebra.
                                                             (line  177)
* gfactor:                               Definições para Polinómios.
                                                             (line  452)
* gfactorsum:                            Definições para Polinómios.
                                                             (line  462)
* ggf:                                   Definições para ggf.
                                                             (line   36)
* GGFCFMAX:                              Definições para ggf.
                                                             (line   21)
* GGFINFINITY:                           Definições para ggf.
                                                             (line    6)
* globalsolve:                           Definições para Equações.
                                                             (line  307)
* global_variances:                      Definições específicas para estatística descritiva de várias variáveis.
                                                             (line   68)
* global_variances <1>:                  Definições específicas para estatística descritiva de várias variáveis.
                                                             (line   69)
* go:                                    Definições para Fluxo de Programa.
                                                             (line  276)
* Gosper:                                Definições para zeilberger.
                                                             (line   12)
* GosperSum:                             Definições para zeilberger.
                                                             (line   21)
* gosper_in_zeilberger:                  Definições para zeilberger.
                                                             (line  124)
* gradef:                                Definições para Diferenciação.
                                                             (line  460)
* gradef <1>:                            Definições para Diferenciação.
                                                             (line  461)
* gradefs:                               Definições para Diferenciação.
                                                             (line  505)
* gramschmidt:                           Definições para Matrizes e Álgebra Linear.
                                                             (line  510)
* grind:                                 Definições para Entrada e Saída.
                                                             (line  571)
* grind <1>:                             Definições para Entrada e Saída.
                                                             (line  572)
* grobner_basis:                         Definições para Funções Afins.
                                                             (line   22)
* gschmit:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  511)
* halfangles:                            Definições para Trigonometria.
                                                             (line   72)
* hankel:                                Definições para linearalgebra.
                                                             (line  184)
* hankel <1>:                            Definições para linearalgebra.
                                                             (line  185)
* harmonic:                              Definições para simplification.
                                                             (line  224)
* harmonic_mean:                         Definições para estatística descritiva.
                                                             (line  343)
* harmonic_mean <1>:                     Definições para estatística descritiva.
                                                             (line  344)
* hav:                                   Definições para simplification.
                                                             (line  274)
* hermite:                               Definições para polinómios ortogonais.
                                                             (line   32)
* hessian:                               Definições para linearalgebra.
                                                             (line  192)
* hilbert_matrix:                        Definições para linearalgebra.
                                                             (line  198)
* hipow:                                 Definições para Polinómios.
                                                             (line  465)
* histogram:                             Definições para gráficos estatísticos.
                                                             (line  119)
* histogram <1>:                         Definições para gráficos estatísticos.
                                                             (line  120)
* histogram <2>:                         Definições para gráficos estatísticos.
                                                             (line  121)
* histogram <3>:                         Definições para gráficos estatísticos.
                                                             (line  122)
* hodge:                                 Definições para itensor.
                                                             (line 1445)
* horner:                                Definições para Numérico.
                                                             (line  193)
* horner <1>:                            Definições para Numérico.
                                                             (line  194)
* i:                                     Definições para Constantes.
                                                             (line   12)
* ibase:                                 Definições para Entrada e Saída.
                                                             (line  669)
* ic1:                                   Definições para Equações Diferenciais.
                                                             (line   68)
* ic2:                                   Definições para Equações Diferenciais.
                                                             (line   77)
* icc1:                                  Definições para itensor.
                                                             (line 1082)
* icc2:                                  Definições para itensor.
                                                             (line 1099)
* ichr1:                                 Definições para itensor.
                                                             (line  871)
* ichr2:                                 Definições para itensor.
                                                             (line  879)
* icounter:                              Definições para itensor.
                                                             (line  339)
* icurvature:                            Definições para itensor.
                                                             (line  886)
* ic_convert:                            Definições para itensor.
                                                             (line 1536)
* ident:                                 Definições para Matrizes e Álgebra Linear.
                                                             (line  552)
* identfor:                              Definições para linearalgebra.
                                                             (line  203)
* identfor <1>:                          Definições para linearalgebra.
                                                             (line  204)
* identity:                              Definições para Conjuntos.
                                                             (line  406)
* idiff:                                 Definições para itensor.
                                                             (line  600)
* idim:                                  Definições para itensor.
                                                             (line  866)
* idummy:                                Definições para itensor.
                                                             (line  325)
* idummyx:                               Definições para itensor.
                                                             (line  333)
* ieqn:                                  Definições para Equações.
                                                             (line  362)
* ieqnprint:                             Definições para Equações.
                                                             (line  392)
* if:                                    Definições para Fluxo de Programa.
                                                             (line  289)
* ifactors:                              Definições para Teoria dos Números.
                                                             (line  264)
* ifb:                                   Definições para itensor.
                                                             (line 1051)
* ifc1:                                  Definições para itensor.
                                                             (line 1117)
* ifc2:                                  Definições para itensor.
                                                             (line 1131)
* ifg:                                   Definições para itensor.
                                                             (line 1156)
* ifgi:                                  Definições para itensor.
                                                             (line 1161)
* ifr:                                   Definições para itensor.
                                                             (line 1144)
* iframes:                               Definições para itensor.
                                                             (line 1045)
* iframe_bracket_form:                   Definições para itensor.
                                                             (line 1166)
* ifri:                                  Definições para itensor.
                                                             (line 1150)
* ifs:                                   Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   41)
* ift:                                   Definições para Numérico.
                                                             (line   48)
* ift <1>:                               Definições para Numérico.
                                                             (line   62)
* igeodesic_coords:                      Definições para itensor.
                                                             (line  942)
* igeowedge_flag:                        Definições para itensor.
                                                             (line 1483)
* Igual (igualdade sintática):           Operadores Geral.   (line  222)
* ikt1:                                  Definições para itensor.
                                                             (line 1222)
* ikt2:                                  Definições para itensor.
                                                             (line 1237)
* ilt:                                   Definições para Integração.
                                                             (line  129)
* imagpart:                              Definições para Expressões.
                                                             (line  685)
* imetric:                               Definições para itensor.
                                                             (line  856)
* imetric <1>:                           Definições para itensor.
                                                             (line  857)
* implicit_derivative:                   Definições para impdiff.
                                                             (line    6)
* inchar:                                Definições para Entrada e Saída.
                                                             (line  684)
* indexed_tensor:                        Definições para itensor.
                                                             (line  179)
* indices:                               Definições para itensor.
                                                             (line   48)
* inf:                                   Definições para Constantes.
                                                             (line   18)
* inf <1>:                               Definições para Opções Diversas.
                                                             (line   72)
* inferencep:                            Definições para inference_result.
                                                             (line   50)
* inference_result:                      Definições para inference_result.
                                                             (line    6)
* infeval:                               Definições para Linha de Comandos.
                                                             (line  315)
* Infinito Complexo:                     Definições para Constantes.
                                                             (line   22)
* Infinito negativo:                     Definições para Constantes.
                                                             (line   25)
* Infinito positivo real:                Definições para Constantes.
                                                             (line   19)
* infinity:                              Definições para Constantes.
                                                             (line   21)
* infinity <1>:                          Definições para Opções Diversas.
                                                             (line   75)
* infix:                                 Definições para Expressões.
                                                             (line  693)
* infix <1>:                             Definições para Expressões.
                                                             (line  694)
* infix <2>:                             Definições para Expressões.
                                                             (line  695)
* inflag:                                Definições para Expressões.
                                                             (line  770)
* infolists:                             Definições para Opções Diversas.
                                                             (line   79)
* init_atensor:                          Definições para o Pacote atensor.
                                                             (line    6)
* init_atensor <1>:                      Definições para o Pacote atensor.
                                                             (line    7)
* init_ctensor:                          Definições para ctensor.
                                                             (line  137)
* inm:                                   Definições para itensor.
                                                             (line 1180)
* inmc1:                                 Definições para itensor.
                                                             (line 1192)
* inmc2:                                 Definições para itensor.
                                                             (line 1206)
* innerproduct:                          Definições para Matrizes e Álgebra Linear.
                                                             (line  555)
* inpart:                                Definições para Expressões.
                                                             (line  789)
* inprod:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  556)
* inrt:                                  Definições para Teoria dos Números.
                                                             (line  277)
* integerp:                              Definições para Opções Diversas.
                                                             (line  137)
* integer_partitions:                    Definições para Conjuntos.
                                                             (line  418)
* integer_partitions <1>:                Definições para Conjuntos.
                                                             (line  419)
* integrate:                             Definições para Integração.
                                                             (line  172)
* integrate <1>:                         Definições para Integração.
                                                             (line  173)
* integrate_use_rootsof:                 Definições para Integração.
                                                             (line  356)
* integration_constant_counter:          Definições para Integração.
                                                             (line  348)
* intersect:                             Definições para Conjuntos.
                                                             (line  463)
* intersection:                          Definições para Conjuntos.
                                                             (line  467)
* intervalp:                             Definições para polinómios ortogonais.
                                                             (line   37)
* intfaclim:                             Definições para Polinómios.
                                                             (line  488)
* intopois:                              Definições para Funções Especiais.
                                                             (line  181)
* intosum:                               Definições para Simplificação.
                                                             (line  171)
* invariant1:                            Definições para ctensor.
                                                             (line  785)
* invariant2:                            Definições para ctensor.
                                                             (line  791)
* inverse_jacobi_cd:                     Definições para Funções Elípticas.
                                                             (line   66)
* inverse_jacobi_cn:                     Definições para Funções Elípticas.
                                                             (line   45)
* inverse_jacobi_cs:                     Definições para Funções Elípticas.
                                                             (line   63)
* inverse_jacobi_dc:                     Definições para Funções Elípticas.
                                                             (line   75)
* inverse_jacobi_dn:                     Definições para Funções Elípticas.
                                                             (line   48)
* inverse_jacobi_ds:                     Definições para Funções Elípticas.
                                                             (line   72)
* inverse_jacobi_nc:                     Definições para Funções Elípticas.
                                                             (line   60)
* inverse_jacobi_nd:                     Definições para Funções Elípticas.
                                                             (line   69)
* inverse_jacobi_ns:                     Definições para Funções Elípticas.
                                                             (line   51)
* inverse_jacobi_sc:                     Definições para Funções Elípticas.
                                                             (line   54)
* inverse_jacobi_sd:                     Definições para Funções Elípticas.
                                                             (line   57)
* inverse_jacobi_sn:                     Definições para Funções Elípticas.
                                                             (line   42)
* invert:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  567)
* invert_by_lu:                          Definições para linearalgebra.
                                                             (line  219)
* inv_mod:                               Definições para Teoria dos Números.
                                                             (line  284)
* in_netmath:                            Definições para Criação de Gráficos.
                                                             (line    6)
* is:                                    Operadores Geral.   (line  765)
* ishow:                                 Definições para itensor.
                                                             (line   40)
* isolate:                               Definições para Expressões.
                                                             (line  817)
* isolate_wrt_times:                     Definições para Expressões.
                                                             (line  835)
* isqrt:                                 Operadores Geral.   (line  841)
* items_inference:                       Definições para inference_result.
                                                             (line   55)
* itr:                                   Definições para itensor.
                                                             (line 1250)
* jacobi:                                Definições para Teoria dos Números.
                                                             (line  295)
* jacobi_cd:                             Definições para Funções Elípticas.
                                                             (line   30)
* jacobi_cn:                             Definições para Funções Elípticas.
                                                             (line    9)
* jacobi_cs:                             Definições para Funções Elípticas.
                                                             (line   27)
* jacobi_dc:                             Definições para Funções Elípticas.
                                                             (line   39)
* jacobi_dn:                             Definições para Funções Elípticas.
                                                             (line   12)
* jacobi_ds:                             Definições para Funções Elípticas.
                                                             (line   36)
* jacobi_nc:                             Definições para Funções Elípticas.
                                                             (line   24)
* jacobi_nd:                             Definições para Funções Elípticas.
                                                             (line   33)
* jacobi_ns:                             Definições para Funções Elípticas.
                                                             (line   15)
* jacobi_p:                              Definições para polinómios ortogonais.
                                                             (line   41)
* jacobi_sc:                             Definições para Funções Elípticas.
                                                             (line   18)
* jacobi_sd:                             Definições para Funções Elípticas.
                                                             (line   21)
* jacobi_sn:                             Definições para Funções Elípticas.
                                                             (line    6)
* JF:                                    Definições para diag.
                                                             (line   32)
* join:                                  Definições para Listas.
                                                             (line  140)
* jordan:                                Definições para diag.
                                                             (line   55)
* kdels:                                 Definições para itensor.
                                                             (line  362)
* kdelta:                                Definições para itensor.
                                                             (line  346)
* keepfloat:                             Definições para Polinómios.
                                                             (line  505)
* kill:                                  Definições para Linha de Comandos.
                                                             (line  323)
* kill <1>:                              Definições para Linha de Comandos.
                                                             (line  324)
* kill <2>:                              Definições para Linha de Comandos.
                                                             (line  325)
* kill <3>:                              Definições para Linha de Comandos.
                                                             (line  326)
* kill <4>:                              Definições para Linha de Comandos.
                                                             (line  327)
* kill <5>:                              Definições para Linha de Comandos.
                                                             (line  328)
* kill <6>:                              Definições para Linha de Comandos.
                                                             (line  329)
* kill <7>:                              Definições para Linha de Comandos.
                                                             (line  330)
* killcontext:                           Definições para Contextos.
                                                             (line  287)
* kinvariant:                            Definições para ctensor.
                                                             (line 1204)
* kostka:                                Definições para Simetrias.
                                                             (line  442)
* kronecker_product:                     Definições para linearalgebra.
                                                             (line  224)
* kron_delta:                            Definições para Conjuntos.
                                                             (line  493)
* kt:                                    Definições para ctensor.
                                                             (line 1232)
* kurtosis:                              Definições para estatística descritiva.
                                                             (line  395)
* kurtosis <1>:                          Definições para estatística descritiva.
                                                             (line  396)
* kurtosis_bernoulli:                    Definições para distribuições discretas.
                                                             (line  261)
* kurtosis_beta:                         Definições para distribuições contínuas.
                                                             (line  825)
* kurtosis_binomial:                     Definições para distribuições discretas.
                                                             (line   56)
* kurtosis_chi2:                         Definições para distribuições contínuas.
                                                             (line  304)
* kurtosis_continuous_uniform:           Definições para distribuições contínuas.
                                                             (line  900)
* kurtosis_discrete_uniform:             Definições para distribuições discretas.
                                                             (line  402)
* kurtosis_exp:                          Definições para distribuições contínuas.
                                                             (line  575)
* kurtosis_f:                            Definições para distribuições contínuas.
                                                             (line  408)
* kurtosis_gamma:                        Definições para distribuições contínuas.
                                                             (line  738)
* kurtosis_geometric:                    Definições para distribuições discretas.
                                                             (line  327)
* kurtosis_gumbel:                       Definições para distribuições contínuas.
                                                             (line 1369)
* kurtosis_hypergeometric:               Definições para distribuições discretas.
                                                             (line  464)
* kurtosis_laplace:                      Definições para distribuições contínuas.
                                                             (line 1281)
* kurtosis_logistic:                     Definições para distribuições contínuas.
                                                             (line  954)
* kurtosis_lognormal:                    Definições para distribuições contínuas.
                                                             (line  673)
* kurtosis_negative_binomial:            Definições para distribuições discretas.
                                                             (line  553)
* kurtosis_normal:                       Definições para distribuições contínuas.
                                                             (line   52)
* kurtosis_pareto:                       Definições para distribuições contínuas.
                                                             (line 1004)
* kurtosis_poisson:                      Definições para distribuições discretas.
                                                             (line  139)
* kurtosis_rayleigh:                     Definições para distribuições contínuas.
                                                             (line 1211)
* kurtosis_student_t:                    Definições para distribuições contínuas.
                                                             (line  136)
* kurtosis_weibull:                      Definições para distribuições contínuas.
                                                             (line 1055)
* labels:                                Definições para Linha de Comandos.
                                                             (line  386)
* labels <1>:                            Definições para Linha de Comandos.
                                                             (line  387)
* lagrange:                              Definições para interpol.
                                                             (line    6)
* lagrange <1>:                          Definições para interpol.
                                                             (line    7)
* laguerre:                              Definições para polinómios ortogonais.
                                                             (line   50)
* lambda:                                Definições para Definição de Função.
                                                             (line  595)
* lambda <1>:                            Definições para Definição de Função.
                                                             (line  596)
* lambda <2>:                            Definições para Definição de Função.
                                                             (line  597)
* laplace:                               Definições para Diferenciação.
                                                             (line  513)
* lassociative:                          Definições para Simplificação.
                                                             (line  182)
* last:                                  Definições para Listas.
                                                             (line  160)
* lbfgs:                                 Definições para lbfgs.
                                                             (line    6)
* lbfgs_ncorrections:                    Definições para lbfgs.
                                                             (line  117)
* lbfgs_nfeval_max:                      Definições para lbfgs.
                                                             (line  114)
* lc2kdt:                                Definições para itensor.
                                                             (line  389)
* lcharp:                                Definições para caracteres.
                                                             (line   72)
* lcm:                                   Definições para Teoria dos Números.
                                                             (line  302)
* lc_l:                                  Definições para itensor.
                                                             (line  455)
* lc_u:                                  Definições para itensor.
                                                             (line  478)
* ldefint:                               Definições para Integração.
                                                             (line  406)
* ldisp:                                 Definições para Entrada e Saída.
                                                             (line  702)
* ldisplay:                              Definições para Entrada e Saída.
                                                             (line  730)
* legendre_p:                            Definições para polinómios ortogonais.
                                                             (line   56)
* legendre_q:                            Definições para polinómios ortogonais.
                                                             (line   62)
* leinstein:                             Definições para ctensor.
                                                             (line  228)
* length:                                Definições para Listas.
                                                             (line  163)
* let:                                   Definições para Regras e Modelos.
                                                             (line  224)
* let <1>:                               Definições para Regras e Modelos.
                                                             (line  225)
* letrat:                                Definições para Regras e Modelos.
                                                             (line  306)
* letrules:                              Definições para Regras e Modelos.
                                                             (line  330)
* letrules <1>:                          Definições para Regras e Modelos.
                                                             (line  331)
* letsimp:                               Definições para Regras e Modelos.
                                                             (line  344)
* letsimp <1>:                           Definições para Regras e Modelos.
                                                             (line  345)
* letsimp <2>:                           Definições para Regras e Modelos.
                                                             (line  346)
* let_rule_packages:                     Definições para Regras e Modelos.
                                                             (line  359)
* levi_civita:                           Definições para itensor.
                                                             (line  383)
* lfg:                                   Definições para ctensor.
                                                             (line 1150)
* lfreeof:                               Definições para Expressões.
                                                             (line  898)
* lg:                                    Definições para ctensor.
                                                             (line 1185)
* lgtreillis:                            Definições para Simetrias.
                                                             (line  449)
* lhospitallim:                          Definições para Limites.
                                                             (line    6)
* lhs:                                   Definições para Equações.
                                                             (line  409)
* li:                                    Definições para Logaritmos.
                                                             (line   15)
* liediff:                               Definições para itensor.
                                                             (line  614)
* limit:                                 Definições para Limites.
                                                             (line   13)
* limit <1>:                             Definições para Limites.
                                                             (line   14)
* limit <2>:                             Definições para Limites.
                                                             (line   15)
* limsubst:                              Definições para Limites.
                                                             (line   48)
* Lindstedt:                             Definições para lindstedt.
                                                             (line    6)
* linear:                                Definições para Simplificação.
                                                             (line  187)
* linear <1>:                            Definições para simplification.
                                                             (line  196)
* linearinterpol:                        Definições para interpol.
                                                             (line   63)
* linearinterpol <1>:                    Definições para interpol.
                                                             (line   64)
* linear_program:                        Definições para simplex.
                                                             (line   13)
* linear_solver:                         Definições para zeilberger.
                                                             (line  112)
* linechar:                              Definições para Entrada e Saída.
                                                             (line  761)
* linel:                                 Definições para Entrada e Saída.
                                                             (line  773)
* linenum:                               Definições para Linha de Comandos.
                                                             (line  422)
* linsolve:                              Definições para Equações.
                                                             (line  448)
* linsolvewarn:                          Definições para Equações.
                                                             (line  519)
* linsolve_params:                       Definições para Equações.
                                                             (line  525)
* lispdisp:                              Definições para Entrada e Saída.
                                                             (line  783)
* listarith:                             Definições para Listas.
                                                             (line  174)
* listarray:                             Definições para Arrays.
                                                             (line  275)
* listconstvars:                         Definições para Expressões.
                                                             (line  861)
* listdummyvars:                         Definições para Expressões.
                                                             (line  869)
* listify:                               Definições para Conjuntos.
                                                             (line  599)
* listoftens:                            Definições para itensor.
                                                             (line   25)
* listofvars:                            Definições para Expressões.
                                                             (line  886)
* listp:                                 Definições para Listas.
                                                             (line  181)
* listp <1>:                             Definições para linearalgebra.
                                                             (line  228)
* listp <2>:                             Definições para linearalgebra.
                                                             (line  229)
* list_correlations:                     Definições específicas para estatística descritiva de várias variáveis.
                                                             (line  155)
* list_correlations <1>:                 Definições específicas para estatística descritiva de várias variáveis.
                                                             (line  156)
* list_nc_monomials:                     Definições para Funções Afins.
                                                             (line  120)
* list_nc_monomials <1>:                 Definições para Funções Afins.
                                                             (line  121)
* lmax:                                  Operadores Geral.   (line  845)
* lmin:                                  Operadores Geral.   (line  851)
* lmxchar:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  596)
* load:                                  Definições para Entrada e Saída.
                                                             (line  799)
* loadfile:                              Definições para Entrada e Saída.
                                                             (line  830)
* loadprint:                             Definições para Entrada e Saída.
                                                             (line  845)
* local:                                 Definições para Definição de Função.
                                                             (line  716)
* locate_matrix_entry:                   Definições para linearalgebra.
                                                             (line  237)
* log:                                   Definições para Logaritmos.
                                                             (line   73)
* logabs:                                Definições para Logaritmos.
                                                             (line  111)
* logarc:                                Definições para Logaritmos.
                                                             (line  121)
* logarc <1>:                            Definições para Logaritmos.
                                                             (line  122)
* logconcoeffp:                          Definições para Logaritmos.
                                                             (line  132)
* logcontract:                           Definições para Logaritmos.
                                                             (line  142)
* logexpand:                             Definições para Logaritmos.
                                                             (line  162)
* lognegint:                             Definições para Logaritmos.
                                                             (line  173)
* lognumer:                              Definições para Logaritmos.
                                                             (line  179)
* logsimp:                               Definições para Logaritmos.
                                                             (line  188)
* lopow:                                 Definições para Expressões.
                                                             (line  903)
* lorentz_gauge:                         Definições para itensor.
                                                             (line  937)
* lowercasep:                            Definições para caracteres.
                                                             (line   76)
* lpart:                                 Definições para Expressões.
                                                             (line  910)
* lratsubst:                             Definições para Polinómios.
                                                             (line  513)
* lreduce:                               Definições para Conjuntos.
                                                             (line  614)
* lreduce <1>:                           Definições para Conjuntos.
                                                             (line  615)
* lriem:                                 Definições para ctensor.
                                                             (line 1168)
* lriemann:                              Definições para ctensor.
                                                             (line  260)
* lsquares:                              Definições para lsquares.
                                                             (line   19)
* lsquares <1>:                          Definições para lsquares.
                                                             (line   20)
* lstringp:                              Definições para sequências de caracteres.
                                                             (line   11)
* lsum:                                  Definições para Expressões.
                                                             (line 1473)
* ltreillis:                             Definições para Simetrias.
                                                             (line  456)
* lu_backsub:                            Definições para linearalgebra.
                                                             (line  265)
* lu_factor:                             Definições para linearalgebra.
                                                             (line  270)
* m1pbranch:                             Definições para Opções Diversas.
                                                             (line  165)
* macroexpand:                           Macros.             (line   88)
* macroexpand1:                          Macros.             (line  121)
* macroexpansion:                        Definições para Definição de Função.
                                                             (line  729)
* macros:                                Macros.             (line  152)
* mainvar:                               Definições para Simplificação.
                                                             (line  199)
* Maior que:                             Operadores Relacionais.
                                                             (line   10)
* Maior que ou igual a:                  Operadores Relacionais.
                                                             (line    9)
* makebox:                               Definições para itensor.
                                                             (line  743)
* makefact:                              Definições para Funções Especiais.
                                                             (line  184)
* makegamma:                             Definições para Funções Especiais.
                                                             (line  190)
* makelist:                              Definições para Listas.
                                                             (line  185)
* makelist <1>:                          Definições para Listas.
                                                             (line  186)
* makeOrders:                            Definições para makeOrders.
                                                             (line    6)
* makeset:                               Definições para Conjuntos.
                                                             (line  654)
* make_array:                            Definições para Arrays.
                                                             (line  367)
* make_random_state:                     Operadores Geral.   (line  925)
* make_random_state <1>:                 Operadores Geral.   (line  926)
* make_random_state <2>:                 Operadores Geral.   (line  927)
* make_random_state <3>:                 Operadores Geral.   (line  928)
* make_transform:                        Definições para Criação de Gráficos.
                                                             (line  600)
* map:                                   Definições para Fluxo de Programa.
                                                             (line  334)
* mapatom:                               Definições para Fluxo de Programa.
                                                             (line  369)
* maperror:                              Definições para Fluxo de Programa.
                                                             (line  374)
* maplist:                               Definições para Fluxo de Programa.
                                                             (line  390)
* matchdeclare:                          Definições para Regras e Modelos.
                                                             (line  366)
* matchfix:                              Definições para Regras e Modelos.
                                                             (line  526)
* matchfix <1>:                          Definições para Regras e Modelos.
                                                             (line  527)
* matrix:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  612)
* matrixmap:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  738)
* matrixp:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  743)
* matrixp <1>:                           Definições para linearalgebra.
                                                             (line  403)
* matrixp <2>:                           Definições para linearalgebra.
                                                             (line  404)
* matrix_element_add:                    Definições para Matrizes e Álgebra Linear.
                                                             (line  747)
* matrix_element_mult:                   Definições para Matrizes e Álgebra Linear.
                                                             (line  778)
* matrix_element_transpose:              Definições para Matrizes e Álgebra Linear.
                                                             (line  819)
* matrix_size:                           Definições para linearalgebra.
                                                             (line  414)
* mattrace:                              Definições para Matrizes e Álgebra Linear.
                                                             (line  867)
* mat_cond:                              Definições para linearalgebra.
                                                             (line  384)
* mat_cond <1>:                          Definições para linearalgebra.
                                                             (line  385)
* mat_fullunblocker:                     Definições para linearalgebra.
                                                             (line  419)
* mat_function:                          Definições para diag.
                                                             (line  180)
* mat_norm:                              Definições para linearalgebra.
                                                             (line  395)
* mat_norm <1>:                          Definições para linearalgebra.
                                                             (line  396)
* mat_norm <2>:                          Definições para linearalgebra.
                                                             (line  397)
* mat_trace:                             Definições para linearalgebra.
                                                             (line  425)
* mat_unblocker:                         Definições para linearalgebra.
                                                             (line  432)
* max:                                   Operadores Geral.   (line  857)
* maxapplydepth:                         Definições para Simplificação.
                                                             (line  212)
* maxapplyheight:                        Definições para Simplificação.
                                                             (line  218)
* maxi:                                  Definições para estatística descritiva.
                                                             (line  197)
* maxi <1>:                              Definições para estatística descritiva.
                                                             (line  198)
* maxima_tempdir:                        Definições para Ambiente em Tempo de Execução.
                                                             (line   31)
* maxima_userdir:                        Definições para Ambiente em Tempo de Execução.
                                                             (line   44)
* maximize_sx:                           Definições para simplex.
                                                             (line   40)
* maxnegex:                              Definições para Simplificação.
                                                             (line  224)
* maxposex:                              Definições para Simplificação.
                                                             (line  230)
* maxpsifracdenom:                       Definições para Funções Especiais.
                                                             (line  361)
* maxpsifracnum:                         Definições para Funções Especiais.
                                                             (line  324)
* maxpsinegint:                          Definições para Funções Especiais.
                                                             (line  316)
* maxpsiposint:                          Definições para Funções Especiais.
                                                             (line  310)
* maxtayorder:                           Definições para Séries.
                                                             (line   69)
* MAX_ORD:                               Definições para zeilberger.
                                                             (line  101)
* maybe:                                 Operadores Geral.   (line  818)
* mean:                                  Definições para estatística descritiva.
                                                             (line    6)
* mean <1>:                              Definições para estatística descritiva.
                                                             (line    7)
* meanlog:                               Definições para distribuições contínuas.
                                                             (line  934)
* mean_bernoulli:                        Definições para distribuições discretas.
                                                             (line  201)
* mean_beta:                             Definições para distribuições contínuas.
                                                             (line  805)
* mean_binomial:                         Definições para distribuições discretas.
                                                             (line   36)
* mean_chi2:                             Definições para distribuições contínuas.
                                                             (line  234)
* mean_continuous_uniform:               Definições para distribuições contínuas.
                                                             (line  880)
* mean_deviation:                        Definições para estatística descritiva.
                                                             (line  289)
* mean_deviation <1>:                    Definições para estatística descritiva.
                                                             (line  290)
* mean_discrete_uniform:                 Definições para distribuições discretas.
                                                             (line  382)
* mean_exp:                              Definições para distribuições contínuas.
                                                             (line  501)
* mean_f:                                Definições para distribuições contínuas.
                                                             (line  388)
* mean_gamma:                            Definições para distribuições contínuas.
                                                             (line  718)
* mean_geometric:                        Definições para distribuições discretas.
                                                             (line  307)
* mean_gumbel:                           Definições para distribuições contínuas.
                                                             (line 1336)
* mean_hypergeometric:                   Definições para distribuições discretas.
                                                             (line  440)
* mean_laplace:                          Definições para distribuições contínuas.
                                                             (line 1261)
* mean_lognormal:                        Definições para distribuições contínuas.
                                                             (line  653)
* mean_negative_binomial:                Definições para distribuições discretas.
                                                             (line  533)
* mean_normal:                           Definições para distribuições contínuas.
                                                             (line   32)
* mean_pareto:                           Definições para distribuições contínuas.
                                                             (line  984)
* mean_poisson:                          Definições para distribuições discretas.
                                                             (line  119)
* mean_rayleigh:                         Definições para distribuições contínuas.
                                                             (line 1127)
* mean_student_t:                        Definições para distribuições contínuas.
                                                             (line  111)
* mean_weibull:                          Definições para distribuições contínuas.
                                                             (line 1035)
* median:                                Definições para estatística descritiva.
                                                             (line  247)
* median <1>:                            Definições para estatística descritiva.
                                                             (line  248)
* median_deviation:                      Definições para estatística descritiva.
                                                             (line  316)
* median_deviation <1>:                  Definições para estatística descritiva.
                                                             (line  317)
* member:                                Definições para Listas.
                                                             (line  205)
* Menor que:                             Operadores Relacionais.
                                                             (line    7)
* Menor que ou igual a:                  Operadores Relacionais.
                                                             (line    8)
* Menos infinito:                        Definições para Constantes.
                                                             (line   25)
* metricexpandall:                       Definições para Units.
                                                             (line  397)
* min:                                   Operadores Geral.   (line  867)
* minf:                                  Definições para Constantes.
                                                             (line   24)
* minfactorial:                          Definições para Teoria dos Números.
                                                             (line  308)
* mini:                                  Definições para estatística descritiva.
                                                             (line  182)
* mini <1>:                              Definições para estatística descritiva.
                                                             (line  183)
* minimalPoly:                           Definições para diag.
                                                             (line  123)
* minimize_sx:                           Definições para simplex.
                                                             (line   48)
* minor:                                 Definições para Matrizes e Álgebra Linear.
                                                             (line  876)
* mnewton:                               Definições para mnewton.
                                                             (line   22)
* mod:                                   Operadores Geral.   (line  887)
* ModeMatrix:                            Definições para diag.
                                                             (line  144)
* mode_checkp:                           Definições para Definição de Função.
                                                             (line  752)
* mode_check_errorp:                     Definições para Definição de Função.
                                                             (line  758)
* mode_check_warnp:                      Definições para Definição de Função.
                                                             (line  764)
* mode_declare:                          Definições para Definição de Função.
                                                             (line  769)
* mode_identity:                         Definições para Definição de Função.
                                                             (line  812)
* modular_linear_solver:                 Definições para zeilberger.
                                                             (line  147)
* modulus:                               Definições para Polinómios.
                                                             (line  538)
* mod_big_prime:                         Definições para zeilberger.
                                                             (line  159)
* mod_test:                              Definições para zeilberger.
                                                             (line  141)
* mod_threshold:                         Definições para zeilberger.
                                                             (line  164)
* moebius:                               Definições para Conjuntos.
                                                             (line  689)
* mon2schur:                             Definições para Simetrias.
                                                             (line   63)
* mono:                                  Definições para Funções Afins.
                                                             (line   98)
* monomial_dimensions:                   Definições para Funções Afins.
                                                             (line  104)
* multinomial:                           Definições para Simetrias.
                                                             (line  847)
* multinomial_coeff:                     Definições para Conjuntos.
                                                             (line  723)
* multinomial_coeff <1>:                 Definições para Conjuntos.
                                                             (line  724)
* multiplicative:                        Definições para Simplificação.
                                                             (line  236)
* Multiplicação:                         Operadores Aritméticos.
                                                             (line    9)
* Multiplicação não comutativa matricial: Operadores Geral.  (line  113)
* multiplicities:                        Definições para Equações.
                                                             (line  534)
* multi_elem:                            Definições para Simetrias.
                                                             (line   89)
* multi_orbit:                           Definições para Simetrias.
                                                             (line  350)
* multi_pui:                             Definições para Simetrias.
                                                             (line  104)
* multsym:                               Definições para Simetrias.
                                                             (line  363)
* multthru:                              Definições para Expressões.
                                                             (line  915)
* multthru <1>:                          Definições para Expressões.
                                                             (line  916)
* myoptions:                             Definições para Linha de Comandos.
                                                             (line  426)
* N'ésima saída anterior:                Definições para Entrada e Saída.
                                                             (line  148)
* ncexpt:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  881)
* ncharpoly:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  888)
* nc_degree:                             Definições para Funções Afins.
                                                             (line   61)
* Negação lógica:                        Operadores Geral.   (line  359)
* negdistrib:                            Definições para Simplificação.
                                                             (line  252)
* negsumdispflag:                        Definições para Simplificação.
                                                             (line  263)
* newcontext:                            Definições para Contextos.
                                                             (line  304)
* newdet:                                Definições para Matrizes e Álgebra Linear.
                                                             (line  904)
* newline:                               Definições para caracteres.
                                                             (line   79)
* newline <1>:                           Definições para entrada e saída.
                                                             (line   44)
* newline <2>:                           Definições para entrada e saída.
                                                             (line   45)
* newton:                                Definições para Numérico.
                                                             (line  308)
* newtonepsilon:                         Definições para mnewton.
                                                             (line    6)
* newtonmaxiter:                         Definições para mnewton.
                                                             (line   14)
* nextlayerfactor:                       Definições para simplification.
                                                             (line   97)
* next_prime:                            Definições para Teoria dos Números.
                                                             (line  322)
* niceindices:                           Definições para Séries.
                                                             (line   76)
* niceindicespref:                       Definições para Séries.
                                                             (line  110)
* ninth:                                 Definições para Listas.
                                                             (line  241)
* nm:                                    Definições para ctensor.
                                                             (line 1237)
* nmc:                                   Definições para ctensor.
                                                             (line 1242)
* noeval:                                Definições para Simplificação.
                                                             (line  272)
* nolabels:                              Definições para Linha de Comandos.
                                                             (line  433)
* noncentral_moment:                     Definições para estatística descritiva.
                                                             (line  115)
* noncentral_moment <1>:                 Definições para estatística descritiva.
                                                             (line  116)
* nonegative_sx:                         Definições para simplex.
                                                             (line   90)
* nonmetricity:                          Definições para ctensor.
                                                             (line  648)
* nonnegintegerp:                        Definições para linearalgebra.
                                                             (line  471)
* nonscalar:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  909)
* nonscalarp:                            Definições para Matrizes e Álgebra Linear.
                                                             (line  913)
* nonzeroandfreeof:                      Definições para simplification.
                                                             (line  190)
* not:                                   Operadores Geral.   (line  358)
* notequal:                              Operadores Geral.   (line  686)
* noun:                                  Definições para Simplificação.
                                                             (line  277)
* noundisp:                              Definições para Simplificação.
                                                             (line  282)
* nounify:                               Definições para Expressões.
                                                             (line  960)
* nouns:                                 Definições para Simplificação.
                                                             (line  289)
* np:                                    Definições para ctensor.
                                                             (line 1208)
* npi:                                   Definições para ctensor.
                                                             (line 1212)
* nptetrad:                              Definições para ctensor.
                                                             (line  468)
* nroots:                                Definições para Equações.
                                                             (line  540)
* nterms:                                Definições para Expressões.
                                                             (line  968)
* ntermst:                               Definições para ctensor.
                                                             (line  817)
* nthroot:                               Definições para Equações.
                                                             (line  552)
* ntrig:                                 Definições para Trigonometria.
                                                             (line   78)
* nullity:                               Definições para linearalgebra.
                                                             (line  483)
* nullspace:                             Definições para linearalgebra.
                                                             (line  475)
* num:                                   Definições para Polinómios.
                                                             (line  561)
* numberp:                               Definições para Opções Diversas.
                                                             (line  183)
* numer:                                 Definições para Simplificação.
                                                             (line  296)
* numerval:                              Definições para Simplificação.
                                                             (line  303)
* numfactor:                             Definições para Funções Especiais.
                                                             (line  196)
* num_distinct_partitions:               Definições para Conjuntos.
                                                             (line  756)
* num_distinct_partitions <1>:           Definições para Conjuntos.
                                                             (line  757)
* num_partitions:                        Definições para Conjuntos.
                                                             (line  778)
* num_partitions <1>:                    Definições para Conjuntos.
                                                             (line  779)
* nusum:                                 Definições para Séries.
                                                             (line  139)
* Não igual (desigualdade sintática):    Operadores Geral.   (line   86)
* Número áureo:                          Definições para Constantes.
                                                             (line   28)
* obase:                                 Definições para Entrada e Saída.
                                                             (line  859)
* oddp:                                  Operadores Geral.   (line  916)
* ode2:                                  Definições para Equações Diferenciais.
                                                             (line   89)
* op:                                    Definições para Expressões.
                                                             (line  975)
* opena:                                 Definições para entrada e saída.
                                                             (line   50)
* openr:                                 Definições para entrada e saída.
                                                             (line   55)
* openw:                                 Definições para entrada e saída.
                                                             (line   59)
* Operador Apóstrofo:                    Introdução a Linha de Comandos.
                                                             (line    7)
* Operador apóstrofo-apóstrofo:          Introdução a Linha de Comandos.
                                                             (line   91)
* Operador de atribuição:                Operadores Geral.   (line  124)
* Operador de atribuição (avalia o lado esquerdo da igualdade): Operadores Geral.
                                                             (line  127)
* Operador de definição de função:       Operadores Geral.   (line  218)
* Operador de definição de função de macro: Operadores Geral.
                                                             (line  132)
* Operador de equação:                   Operadores Geral.   (line  222)
* Operador de Subscrito:                 Definições para Matrizes e Álgebra Linear.
                                                             (line 1137)
* operatorp:                             Definições para Expressões.
                                                             (line 1022)
* operatorp <1>:                         Definições para Expressões.
                                                             (line 1023)
* opproperties:                          Definições para Simplificação.
                                                             (line  313)
* opsubst:                               Definições para Simplificação.
                                                             (line  321)
* opsubst <1>:                           Definições para opsubst.
                                                             (line    6)
* opsubst <2>:                           Definições para opsubst.
                                                             (line    7)
* opsubst <3>:                           Definições para opsubst.
                                                             (line    8)
* optimize:                              Definições para Expressões.
                                                             (line 1031)
* optimprefix:                           Definições para Expressões.
                                                             (line 1039)
* optionset:                             Definições para Linha de Comandos.
                                                             (line  448)
* or:                                    Operadores Geral.   (line  337)
* orbit:                                 Definições para Simetrias.
                                                             (line  381)
* orbits:                                Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   60)
* ordergreat:                            Definições para Expressões.
                                                             (line 1045)
* ordergreatp:                           Definições para Expressões.
                                                             (line 1052)
* orderless:                             Definições para Expressões.
                                                             (line 1056)
* orderlessp:                            Definições para Expressões.
                                                             (line 1070)
* orthogonal_complement:                 Definições para linearalgebra.
                                                             (line  487)
* orthopoly_recur:                       Definições para polinómios ortogonais.
                                                             (line   67)
* orthopoly_returns_intervals:           Definições para polinómios ortogonais.
                                                             (line   95)
* orthopoly_weight:                      Definições para polinómios ortogonais.
                                                             (line  104)
* outative:                              Definições para Simplificação.
                                                             (line  328)
* outchar:                               Definições para Entrada e Saída.
                                                             (line  872)
* outermap:                              Definições para Fluxo de Programa.
                                                             (line  465)
* outofpois:                             Definições para Funções Especiais.
                                                             (line  212)
* packagefile:                           Definições para Entrada e Saída.
                                                             (line  890)
* pade:                                  Definições para Séries.
                                                             (line  189)
* parGosper:                             Definições para zeilberger.
                                                             (line   68)
* parsetoken:                            Definições para sequências de caracteres.
                                                             (line   36)
* parse_string:                          Definições para eval_string.
                                                             (line   26)
* part:                                  Definições para Expressões.
                                                             (line 1074)
* part2cont:                             Definições para Simetrias.
                                                             (line  242)
* partfrac:                              Definições para Teoria dos Números.
                                                             (line  328)
* partition:                             Definições para Expressões.
                                                             (line 1102)
* partition_set:                         Definições para Conjuntos.
                                                             (line  802)
* partpol:                               Definições para Simetrias.
                                                             (line  251)
* partswitch:                            Definições para Expressões.
                                                             (line 1115)
* pdf_bernoulli:                         Definições para distribuições discretas.
                                                             (line  174)
* pdf_beta:                              Definições para distribuições contínuas.
                                                             (line  778)
* pdf_binomial:                          Definições para distribuições discretas.
                                                             (line    6)
* pdf_cauchy:                            Definições para distribuições contínuas.
                                                             (line 1295)
* pdf_chi2:                              Definições para distribuições contínuas.
                                                             (line  177)
* pdf_continuous_uniform:                Definições para distribuições contínuas.
                                                             (line  863)
* pdf_discrete_uniform:                  Definições para distribuições discretas.
                                                             (line  363)
* pdf_exp:                               Definições para distribuições contínuas.
                                                             (line  447)
* pdf_f:                                 Definições para distribuições contínuas.
                                                             (line  351)
* pdf_gamma:                             Definições para distribuições contínuas.
                                                             (line  693)
* pdf_geometric:                         Definições para distribuições discretas.
                                                             (line  290)
* pdf_gumbel:                            Definições para distribuições contínuas.
                                                             (line 1320)
* pdf_hypergeometric:                    Definições para distribuições discretas.
                                                             (line  420)
* pdf_laplace:                           Definições para distribuições contínuas.
                                                             (line 1244)
* pdf_logistic:                          Definições para distribuições contínuas.
                                                             (line  917)
* pdf_lognormal:                         Definições para distribuições contínuas.
                                                             (line  626)
* pdf_negative_binomial:                 Definições para distribuições discretas.
                                                             (line  502)
* pdf_normal:                            Definições para distribuições contínuas.
                                                             (line    6)
* pdf_pareto:                            Definições para distribuições contínuas.
                                                             (line  968)
* pdf_poisson:                           Definições para distribuições discretas.
                                                             (line   93)
* pdf_rank_sum:                          Definições para distribuições especiais.
                                                             (line   20)
* pdf_rayleigh:                          Definições para distribuições contínuas.
                                                             (line 1069)
* pdf_signed_rank:                       Definições para distribuições especiais.
                                                             (line    6)
* pdf_student_t:                         Definições para distribuições contínuas.
                                                             (line   84)
* pdf_weibull:                           Definições para distribuições contínuas.
                                                             (line 1018)
* pearson_skewness:                      Definições para estatística descritiva.
                                                             (line  445)
* pearson_skewness <1>:                  Definições para estatística descritiva.
                                                             (line  446)
* permanent:                             Definições para Matrizes e Álgebra Linear.
                                                             (line  917)
* permut:                                Definições para Simetrias.
                                                             (line  853)
* permutation:                           Definições para simplification.
                                                             (line  285)
* permutations:                          Definições para Conjuntos.
                                                             (line  823)
* petrov:                                Definições para ctensor.
                                                             (line  515)
* pfeformat:                             Definições para Entrada e Saída.
                                                             (line  905)
* phi:                                   Definições para Constantes.
                                                             (line   28)
* pi:                                    Definições para Constantes.
                                                             (line   82)
* pickapart:                             Definições para Expressões.
                                                             (line 1122)
* piece:                                 Definições para Expressões.
                                                             (line 1209)
* playback:                              Definições para Linha de Comandos.
                                                             (line  457)
* playback <1>:                          Definições para Linha de Comandos.
                                                             (line  458)
* playback <2>:                          Definições para Linha de Comandos.
                                                             (line  459)
* playback <3>:                          Definições para Linha de Comandos.
                                                             (line  460)
* playback <4>:                          Definições para Linha de Comandos.
                                                             (line  461)
* playback <5>:                          Definições para Linha de Comandos.
                                                             (line  462)
* playback <6>:                          Definições para Linha de Comandos.
                                                             (line  463)
* playback <7>:                          Definições para Linha de Comandos.
                                                             (line  464)
* plog:                                  Definições para Logaritmos.
                                                             (line  194)
* plot2d:                                Definições para Criação de Gráficos.
                                                             (line   14)
* plot2d <1>:                            Definições para Criação de Gráficos.
                                                             (line   15)
* plot2d <2>:                            Definições para Criação de Gráficos.
                                                             (line   16)
* plot3d:                                Definições para Criação de Gráficos.
                                                             (line  500)
* plot3d <1>:                            Definições para Criação de Gráficos.
                                                             (line  502)
* plot3d <2>:                            Definições para Criação de Gráficos.
                                                             (line  503)
* plot3d <3>:                            Definições para Criação de Gráficos.
                                                             (line  504)
* plot3d <4>:                            Definições para Criação de Gráficos.
                                                             (line  505)
* plotdf:                                Definições para plotdf.
                                                             (line    6)
* plotdf <1>:                            Definições para plotdf.
                                                             (line    7)
* plot_options:                          Definições para Criação de Gráficos.
                                                             (line  156)
* plsquares:                             Definições para lsquares.
                                                             (line  100)
* plsquares <1>:                         Definições para lsquares.
                                                             (line  101)
* plsquares <2>:                         Definições para lsquares.
                                                             (line  102)
* pochhammer:                            Definições para polinómios ortogonais.
                                                             (line  122)
* pochhammer_max_index:                  Definições para polinómios ortogonais.
                                                             (line  153)
* poisdiff:                              Definições para Funções Especiais.
                                                             (line  219)
* poisexpt:                              Definições para Funções Especiais.
                                                             (line  223)
* poisint:                               Definições para Funções Especiais.
                                                             (line  227)
* poislim:                               Definições para Funções Especiais.
                                                             (line  232)
* poismap:                               Definições para Funções Especiais.
                                                             (line  240)
* poisplus:                              Definições para Funções Especiais.
                                                             (line  246)
* poissimp:                              Definições para Funções Especiais.
                                                             (line  249)
* poisson:                               Definições para Funções Especiais.
                                                             (line  252)
* poissubst:                             Definições para Funções Especiais.
                                                             (line  256)
* poistimes:                             Definições para Funções Especiais.
                                                             (line  275)
* poistrim:                              Definições para Funções Especiais.
                                                             (line  278)
* polarform:                             Definições para Expressões.
                                                             (line 1214)
* polartorect:                           Definições para Numérico.
                                                             (line    6)
* polartorect <1>:                       Definições para Numérico.
                                                             (line   64)
* polydecomp:                            Definições para Polinómios.
                                                             (line  567)
* polymod:                               Operadores Geral.   (line  877)
* polymod <1>:                           Operadores Geral.   (line  878)
* polynome2ele:                          Definições para Simetrias.
                                                             (line  511)
* polynomialp:                           Definições para linearalgebra.
                                                             (line  496)
* polynomialp <1>:                       Definições para linearalgebra.
                                                             (line  497)
* polynomialp <2>:                       Definições para linearalgebra.
                                                             (line  498)
* polytocompanion:                       Definições para linearalgebra.
                                                             (line  550)
* posfun:                                Definições para Simplificação.
                                                             (line  345)
* potential:                             Definições para Integração.
                                                             (line  420)
* powerdisp:                             Definições para Séries.
                                                             (line  251)
* powers:                                Definições para Expressões.
                                                             (line 1218)
* powerseries:                           Definições para Séries.
                                                             (line  262)
* powerset:                              Definições para Conjuntos.
                                                             (line  842)
* powerset <1>:                          Definições para Conjuntos.
                                                             (line  843)
* power_mod:                             Definições para Teoria dos Números.
                                                             (line  353)
* pred:                                  Operadores Geral.   (line  920)
* prederror:                             Definições para Fluxo de Programa.
                                                             (line  400)
* prev_prime:                            Definições para Teoria dos Números.
                                                             (line  389)
* primep:                                Definições para Teoria dos Números.
                                                             (line  367)
* primep_number_of_tests:                Definições para Teoria dos Números.
                                                             (line  384)
* print:                                 Definições para Entrada e Saída.
                                                             (line  927)
* printf:                                Definições para entrada e saída.
                                                             (line   64)
* printf <1>:                            Definições para entrada e saída.
                                                             (line   65)
* printpois:                             Definições para Funções Especiais.
                                                             (line  286)
* printprops:                            Definições para Linha de Comandos.
                                                             (line  507)
* printprops <1>:                        Definições para Linha de Comandos.
                                                             (line  508)
* printprops <2>:                        Definições para Linha de Comandos.
                                                             (line  509)
* prodrac:                               Definições para Simetrias.
                                                             (line  523)
* product:                               Definições para Expressões.
                                                             (line 1223)
* product_use_gamma:                     Definições para solve_rec.
                                                             (line  177)
* Produto Externo:                       Definições para itensor.
                                                             (line 1352)
* programmode:                           Definições para Equações.
                                                             (line  559)
* prompt:                                Definições para Linha de Comandos.
                                                             (line  517)
* properties:                            Definições para Opções Diversas.
                                                             (line  211)
* props:                                 Definições para Opções Diversas.
                                                             (line  215)
* propvars:                              Definições para Opções Diversas.
                                                             (line  221)
* psexpand:                              Definições para Séries.
                                                             (line  300)
* psi:                                   Definições para Funções Especiais.
                                                             (line  291)
* psi <1>:                               Definições para ctensor.
                                                             (line  491)
* ptriangularize:                        Definições para linearalgebra.
                                                             (line  558)
* pui:                                   Definições para Simetrias.
                                                             (line  114)
* pui2comp:                              Definições para Simetrias.
                                                             (line  140)
* pui2ele:                               Definições para Simetrias.
                                                             (line  166)
* pui2polynome:                          Definições para Simetrias.
                                                             (line  530)
* puireduc:                              Definições para Simetrias.
                                                             (line  175)
* pui_direct:                            Definições para Simetrias.
                                                             (line  394)
* put:                                   Definições para Opções Diversas.
                                                             (line  226)
* qput:                                  Definições para Opções Diversas.
                                                             (line  248)
* qrange:                                Definições para estatística descritiva.
                                                             (line  270)
* qrange <1>:                            Definições para estatística descritiva.
                                                             (line  271)
* quad_qag:                              Definições para QUADPACK.
                                                             (line    6)
* quad_qag <1>:                          Definições para QUADPACK.
                                                             (line    8)
* quad_qagi:                             Definições para QUADPACK.
                                                             (line  125)
* quad_qagi <1>:                         Definições para QUADPACK.
                                                             (line  126)
* quad_qags:                             Definições para QUADPACK.
                                                             (line   69)
* quad_qags <1>:                         Definições para QUADPACK.
                                                             (line   70)
* quad_qawc:                             Definições para QUADPACK.
                                                             (line  196)
* quad_qawc <1>:                         Definições para QUADPACK.
                                                             (line  197)
* quad_qawf:                             Definições para QUADPACK.
                                                             (line  266)
* quad_qawf <1>:                         Definições para QUADPACK.
                                                             (line  268)
* quad_qawo:                             Definições para QUADPACK.
                                                             (line  344)
* quad_qawo <1>:                         Definições para QUADPACK.
                                                             (line  346)
* quad_qaws:                             Definições para QUADPACK.
                                                             (line  423)
* quad_qaws <1>:                         Definições para QUADPACK.
                                                             (line  425)
* quantile:                              Definições para estatística descritiva.
                                                             (line  227)
* quantile <1>:                          Definições para estatística descritiva.
                                                             (line  228)
* quantile_bernoulli:                    Definições para distribuições discretas.
                                                             (line  194)
* quantile_beta:                         Definições para distribuições contínuas.
                                                             (line  799)
* quantile_binomial:                     Definições para distribuições discretas.
                                                             (line   29)
* quantile_cauchy:                       Definições para distribuições contínuas.
                                                             (line 1305)
* quantile_chi2:                         Definições para distribuições contínuas.
                                                             (line  215)
* quantile_continuous_uniform:           Definições para distribuições contínuas.
                                                             (line  873)
* quantile_discrete_uniform:             Definições para distribuições discretas.
                                                             (line  375)
* quantile_exp:                          Definições para distribuições contínuas.
                                                             (line  483)
* quantile_f:                            Definições para distribuições contínuas.
                                                             (line  371)
* quantile_gamma:                        Definições para distribuições contínuas.
                                                             (line  712)
* quantile_geometric:                    Definições para distribuições discretas.
                                                             (line  300)
* quantile_gumbel:                       Definições para distribuições contínuas.
                                                             (line 1330)
* quantile_hypergeometric:               Definições para distribuições discretas.
                                                             (line  432)
* quantile_laplace:                      Definições para distribuições contínuas.
                                                             (line 1254)
* quantile_logistic:                     Definições para distribuições contínuas.
                                                             (line  927)
* quantile_lognormal:                    Definições para distribuições contínuas.
                                                             (line  646)
* quantile_negative_binomial:            Definições para distribuições discretas.
                                                             (line  525)
* quantile_normal:                       Definições para distribuições contínuas.
                                                             (line   26)
* quantile_pareto:                       Definições para distribuições contínuas.
                                                             (line  978)
* quantile_poisson:                      Definições para distribuições discretas.
                                                             (line  112)
* quantile_rayleigh:                     Definições para distribuições contínuas.
                                                             (line 1107)
* quantile_student_t:                    Definições para distribuições contínuas.
                                                             (line  104)
* quantile_weibull:                      Definições para distribuições contínuas.
                                                             (line 1028)
* quartile_skewness:                     Definições para estatística descritiva.
                                                             (line  468)
* quartile_skewness <1>:                 Definições para estatística descritiva.
                                                             (line  469)
* quit:                                  Definições para Linha de Comandos.
                                                             (line  524)
* qunit:                                 Definições para Teoria dos Números.
                                                             (line  395)
* quotient:                              Definições para Polinómios.
                                                             (line  618)
* quotient <1>:                          Definições para Polinómios.
                                                             (line  619)
* radcan:                                Definições para Simplificação.
                                                             (line  349)
* radexpand:                             Definições para Simplificação.
                                                             (line  374)
* radsubstflag:                          Definições para Simplificação.
                                                             (line  395)
* random:                                Operadores Geral.   (line  952)
* random_bernoulli:                      Definições para distribuições discretas.
                                                             (line  278)
* random_bernoulli <1>:                  Definições para distribuições discretas.
                                                             (line  279)
* random_beta:                           Definições para distribuições contínuas.
                                                             (line  849)
* random_beta <1>:                       Definições para distribuições contínuas.
                                                             (line  850)
* random_beta_algorithm:                 Definições para distribuições contínuas.
                                                             (line  830)
* random_binomial:                       Definições para distribuições discretas.
                                                             (line   78)
* random_binomial <1>:                   Definições para distribuições discretas.
                                                             (line   79)
* random_binomial_algorithm:             Definições para distribuições discretas.
                                                             (line   61)
* random_cauchy:                         Definições para distribuições contínuas.
                                                             (line 1311)
* random_cauchy <1>:                     Definições para distribuições contínuas.
                                                             (line 1312)
* random_chi2:                           Definições para distribuições contínuas.
                                                             (line  337)
* random_chi2 <1>:                       Definições para distribuições contínuas.
                                                             (line  338)
* random_chi2_algorithm:                 Definições para distribuições contínuas.
                                                             (line  323)
* random_continuous_uniform:             Definições para distribuições contínuas.
                                                             (line  905)
* random_continuous_uniform <1>:         Definições para distribuições contínuas.
                                                             (line  906)
* random_discrete_uniform:               Definições para distribuições discretas.
                                                             (line  407)
* random_discrete_uniform <1>:           Definições para distribuições discretas.
                                                             (line  408)
* random_exp:                            Definições para distribuições contínuas.
                                                             (line  612)
* random_exp <1>:                        Definições para distribuições contínuas.
                                                             (line  613)
* random_exp_algorithm:                  Definições para distribuições contínuas.
                                                             (line  592)
* random_f:                              Definições para distribuições contínuas.
                                                             (line  433)
* random_f <1>:                          Definições para distribuições contínuas.
                                                             (line  434)
* random_f_algorithm:                    Definições para distribuições contínuas.
                                                             (line  413)
* random_gamma:                          Definições para distribuições contínuas.
                                                             (line  764)
* random_gamma <1>:                      Definições para distribuições contínuas.
                                                             (line  765)
* random_gamma_algorithm:                Definições para distribuições contínuas.
                                                             (line  743)
* random_geometric:                      Definições para distribuições discretas.
                                                             (line  349)
* random_geometric <1>:                  Definições para distribuições discretas.
                                                             (line  350)
* random_geometric_algorithm:            Definições para distribuições discretas.
                                                             (line  332)
* random_gumbel:                         Definições para distribuições contínuas.
                                                             (line 1374)
* random_gumbel <1>:                     Definições para distribuições contínuas.
                                                             (line 1375)
* random_hypergeometric:                 Definições para distribuições discretas.
                                                             (line  486)
* random_hypergeometric <1>:             Definições para distribuições discretas.
                                                             (line  487)
* random_hypergeometric_algorithm:       Definições para distribuições discretas.
                                                             (line  470)
* random_laplace:                        Definições para distribuições contínuas.
                                                             (line 1286)
* random_laplace <1>:                    Definições para distribuições contínuas.
                                                             (line 1287)
* random_logistic:                       Definições para distribuições contínuas.
                                                             (line  959)
* random_logistic <1>:                   Definições para distribuições contínuas.
                                                             (line  960)
* random_lognormal:                      Definições para distribuições contínuas.
                                                             (line  678)
* random_lognormal <1>:                  Definições para distribuições contínuas.
                                                             (line  679)
* random_negative_binomial:              Definições para distribuições discretas.
                                                             (line  575)
* random_negative_binomial <1>:          Definições para distribuições discretas.
                                                             (line  576)
* random_negative_binomial_algorithm:    Definições para distribuições discretas.
                                                             (line  558)
* random_normal:                         Definições para distribuições contínuas.
                                                             (line   70)
* random_normal <1>:                     Definições para distribuições contínuas.
                                                             (line   71)
* random_normal_algorithm:               Definições para distribuições contínuas.
                                                             (line   57)
* random_pareto:                         Definições para distribuições contínuas.
                                                             (line 1009)
* random_pareto <1>:                     Definições para distribuições contínuas.
                                                             (line 1010)
* random_poisson:                        Definições para distribuições discretas.
                                                             (line  160)
* random_poisson <1>:                    Definições para distribuições discretas.
                                                             (line  161)
* random_poisson_algorithm:              Definições para distribuições discretas.
                                                             (line  144)
* random_rayleigh:                       Definições para distribuições contínuas.
                                                             (line 1235)
* random_rayleigh <1>:                   Definições para distribuições contínuas.
                                                             (line 1236)
* random_student_t:                      Definições para distribuições contínuas.
                                                             (line  163)
* random_student_t <1>:                  Definições para distribuições contínuas.
                                                             (line  164)
* random_student_t_algorithm:            Definições para distribuições contínuas.
                                                             (line  141)
* random_weibull:                        Definições para distribuições contínuas.
                                                             (line 1060)
* random_weibull <1>:                    Definições para distribuições contínuas.
                                                             (line 1061)
* range:                                 Definições para estatística descritiva.
                                                             (line  212)
* range <1>:                             Definições para estatística descritiva.
                                                             (line  213)
* rank:                                  Definições para Matrizes e Álgebra Linear.
                                                             (line  921)
* rank <1>:                              Definições para linearalgebra.
                                                             (line  579)
* rassociative:                          Definições para Simplificação.
                                                             (line  401)
* rat:                                   Definições para Polinómios.
                                                             (line  626)
* rat <1>:                               Definições para Polinómios.
                                                             (line  627)
* ratalgdenom:                           Definições para Polinómios.
                                                             (line  678)
* ratchristof:                           Definições para ctensor.
                                                             (line 1122)
* ratcoef:                               Definições para Polinómios.
                                                             (line  686)
* ratcoef <1>:                           Definições para Polinómios.
                                                             (line  687)
* ratdenom:                              Definições para Polinómios.
                                                             (line  715)
* ratdenomdivide:                        Definições para Polinómios.
                                                             (line  729)
* ratdiff:                               Definições para Polinómios.
                                                             (line  773)
* ratdisrep:                             Definições para Polinómios.
                                                             (line  815)
* rateinstein:                           Definições para ctensor.
                                                             (line 1127)
* ratepsilon:                            Definições para Polinómios.
                                                             (line  826)
* ratexpand:                             Definições para Polinómios.
                                                             (line  832)
* ratexpand <1>:                         Definições para Polinómios.
                                                             (line  833)
* ratfac:                                Definições para Polinómios.
                                                             (line  881)
* rational:                              Definições para simplification.
                                                             (line  182)
* rationalize:                           Operadores Geral.   (line  993)
* ratmx:                                 Definições para Matrizes e Álgebra Linear.
                                                             (line  928)
* ratnumer:                              Definições para Polinómios.
                                                             (line  905)
* ratnump:                               Definições para Polinómios.
                                                             (line  919)
* ratp:                                  Definições para Polinómios.
                                                             (line  923)
* ratprint:                              Definições para Polinómios.
                                                             (line  930)
* ratriemann:                            Definições para ctensor.
                                                             (line 1134)
* ratsimp:                               Definições para Polinómios.
                                                             (line  937)
* ratsimp <1>:                           Definições para Polinómios.
                                                             (line  938)
* ratsimpexpons:                         Definições para Polinómios.
                                                             (line  986)
* ratsubst:                              Definições para Polinómios.
                                                             (line  992)
* ratvars:                               Definições para Polinómios.
                                                             (line 1027)
* ratvars <1>:                           Definições para Polinómios.
                                                             (line 1028)
* ratvars <2>:                           Definições para Polinómios.
                                                             (line 1029)
* ratweight:                             Definições para Polinómios.
                                                             (line 1049)
* ratweight <1>:                         Definições para Polinómios.
                                                             (line 1050)
* ratweights:                            Definições para Polinómios.
                                                             (line 1077)
* ratweyl:                               Definições para ctensor.
                                                             (line 1142)
* ratwtlvl:                              Definições para Polinómios.
                                                             (line 1087)
* read:                                  Definições para Entrada e Saída.
                                                             (line  997)
* readline:                              Definições para entrada e saída.
                                                             (line  126)
* readonly:                              Definições para Entrada e Saída.
                                                             (line 1012)
* read_hashed_array:                     Definições para numericalio.
                                                             (line   40)
* read_hashed_array <1>:                 Definições para numericalio.
                                                             (line   41)
* read_lisp_array:                       Definições para numericalio.
                                                             (line   16)
* read_lisp_array <1>:                   Definições para numericalio.
                                                             (line   17)
* read_list:                             Definições para numericalio.
                                                             (line   57)
* read_list <1>:                         Definições para numericalio.
                                                             (line   58)
* read_matrix:                           Definições para numericalio.
                                                             (line    6)
* read_matrix <1>:                       Definições para numericalio.
                                                             (line    7)
* read_maxima_array:                     Definições para numericalio.
                                                             (line   28)
* read_maxima_array <1>:                 Definições para numericalio.
                                                             (line   29)
* read_nested_list:                      Definições para numericalio.
                                                             (line   49)
* read_nested_list <1>:                  Definições para numericalio.
                                                             (line   50)
* realonly:                              Definições para Equações.
                                                             (line  571)
* realpart:                              Definições para Expressões.
                                                             (line 1281)
* realroots:                             Definições para Equações.
                                                             (line  577)
* realroots <1>:                         Definições para Equações.
                                                             (line  578)
* realroots <2>:                         Definições para Equações.
                                                             (line  579)
* realroots <3>:                         Definições para Equações.
                                                             (line  580)
* rearray:                               Definições para Arrays.
                                                             (line  411)
* rectform:                              Definições para Expressões.
                                                             (line 1287)
* recttopolar:                           Definições para Numérico.
                                                             (line   26)
* recttopolar <1>:                       Definições para Numérico.
                                                             (line   63)
* rediff:                                Definições para itensor.
                                                             (line  633)
* reduce_consts:                         Definições para simplification.
                                                             (line  392)
* reduce_order:                          Definições para solve_rec.
                                                             (line    6)
* refcheck:                              Definições para Depuração.
                                                             (line    6)
* rem:                                   Definições para Opções Diversas.
                                                             (line  271)
* remainder:                             Definições para Polinómios.
                                                             (line 1094)
* remainder <1>:                         Definições para Polinómios.
                                                             (line 1095)
* remarray:                              Definições para Arrays.
                                                             (line  418)
* remarray <1>:                          Definições para Arrays.
                                                             (line  419)
* rembox:                                Definições para Expressões.
                                                             (line 1291)
* rembox <1>:                            Definições para Expressões.
                                                             (line 1292)
* rembox <2>:                            Definições para Expressões.
                                                             (line 1293)
* remcomps:                              Definições para itensor.
                                                             (line  276)
* remcon:                                Definições para itensor.
                                                             (line  163)
* remcon <1>:                            Definições para itensor.
                                                             (line  164)
* remcoord:                              Definições para itensor.
                                                             (line  736)
* remcoord <1>:                          Definições para itensor.
                                                             (line  737)
* remfun:                                Definições para Séries de Fourier.
                                                             (line   11)
* remfun <1>:                            Definições para Séries de Fourier.
                                                             (line   12)
* remfunction:                           Definições para Linha de Comandos.
                                                             (line  533)
* remfunction <1>:                       Definições para Linha de Comandos.
                                                             (line  534)
* remlet:                                Definições para Regras e Modelos.
                                                             (line  632)
* remlet <1>:                            Definições para Regras e Modelos.
                                                             (line  633)
* remlet <2>:                            Definições para Regras e Modelos.
                                                             (line  634)
* remlet <3>:                            Definições para Regras e Modelos.
                                                             (line  635)
* remove:                                Definições para Opções Diversas.
                                                             (line  274)
* remove <1>:                            Definições para Opções Diversas.
                                                             (line  275)
* remove <2>:                            Definições para Opções Diversas.
                                                             (line  276)
* remove <3>:                            Definições para Opções Diversas.
                                                             (line  277)
* remove <4>:                            Definições para Opções Diversas.
                                                             (line  278)
* rempart:                               Definições para simplification.
                                                             (line  155)
* remrule:                               Definições para Regras e Modelos.
                                                             (line  654)
* remrule <1>:                           Definições para Regras e Modelos.
                                                             (line  655)
* remsym:                                Definições para itensor.
                                                             (line  563)
* remvalue:                              Definições para Opções Diversas.
                                                             (line  310)
* remvalue <1>:                          Definições para Opções Diversas.
                                                             (line  311)
* rename:                                Definições para itensor.
                                                             (line   71)
* rename <1>:                            Definições para itensor.
                                                             (line   72)
* reset:                                 Definições para Linha de Comandos.
                                                             (line  549)
* residue:                               Definições para Integração.
                                                             (line  432)
* resolvante:                            Definições para Simetrias.
                                                             (line  557)
* resolvante_alternee1:                  Definições para Simetrias.
                                                             (line  731)
* resolvante_bipartite:                  Definições para Simetrias.
                                                             (line  742)
* resolvante_diedrale:                   Definições para Simetrias.
                                                             (line  762)
* resolvante_klein:                      Definições para Simetrias.
                                                             (line  781)
* resolvante_klein3:                     Definições para Simetrias.
                                                             (line  791)
* resolvante_produit_sym:                Definições para Simetrias.
                                                             (line  801)
* resolvante_unitaire:                   Definições para Simetrias.
                                                             (line  827)
* resolvante_vierer:                     Definições para Simetrias.
                                                             (line  837)
* rest:                                  Definições para Listas.
                                                             (line  245)
* rest <1>:                              Definições para Listas.
                                                             (line  246)
* Resultado anterior em expressão composta: Definições para Entrada e Saída.
                                                             (line  107)
* resultant:                             Definições para Polinómios.
                                                             (line 1103)
* resultant <1>:                         Definições para Polinómios.
                                                             (line 1104)
* return:                                Definições para Fluxo de Programa.
                                                             (line  413)
* reveal:                                Definições para Entrada e Saída.
                                                             (line 1030)
* reverse:                               Definições para Listas.
                                                             (line  252)
* revert:                                Definições para Séries.
                                                             (line  313)
* revert2:                               Definições para Séries.
                                                             (line  314)
* rhs:                                   Definições para Equações.
                                                             (line  625)
* ric:                                   Definições para ctensor.
                                                             (line 1177)
* ricci:                                 Definições para ctensor.
                                                             (line  197)
* riem:                                  Definições para ctensor.
                                                             (line 1160)
* riemann:                               Definições para ctensor.
                                                             (line  236)
* rinvariant:                            Definições para ctensor.
                                                             (line  278)
* risch:                                 Definições para Integração.
                                                             (line  447)
* rk:                                    Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   77)
* rk <1>:                                Análise gráfica de sistemas dinâmicos discretos.
                                                             (line   78)
* rmxchar:                               Definições para Entrada e Saída.
                                                             (line 1085)
* rncombine:                             Definições para Opções Diversas.
                                                             (line  322)
* romberg:                               Definições para romberg.
                                                             (line    6)
* romberg <1>:                           Definições para romberg.
                                                             (line    7)
* rombergabs:                            Definições para romberg.
                                                             (line  107)
* rombergit:                             Definições para romberg.
                                                             (line  120)
* rombergmin:                            Definições para romberg.
                                                             (line  133)
* rombergtol:                            Definições para romberg.
                                                             (line  142)
* room:                                  Definições para Ambiente em Tempo de Execução.
                                                             (line   62)
* room <1>:                              Definições para Ambiente em Tempo de Execução.
                                                             (line   63)
* room <2>:                              Definições para Ambiente em Tempo de Execução.
                                                             (line   64)
* rootsconmode:                          Definições para Equações.
                                                             (line  664)
* rootscontract:                         Definições para Equações.
                                                             (line  670)
* rootsepsilon:                          Definições para Equações.
                                                             (line  731)
* row:                                   Definições para Matrizes e Álgebra Linear.
                                                             (line  942)
* rowop:                                 Definições para linearalgebra.
                                                             (line  573)
* rowswap:                               Definições para linearalgebra.
                                                             (line  594)
* rreduce:                               Definições para Conjuntos.
                                                             (line  872)
* rreduce <1>:                           Definições para Conjuntos.
                                                             (line  873)
* run_testsuite:                         Definições para Detecção e Relato de Erros.
                                                             (line    6)
* run_testsuite <1>:                     Definições para Detecção e Relato de Erros.
                                                             (line    7)
* run_testsuite <2>:                     Definições para Detecção e Relato de Erros.
                                                             (line    8)
* run_testsuite <3>:                     Definições para Detecção e Relato de Erros.
                                                             (line    9)
* save:                                  Definições para Entrada e Saída.
                                                             (line 1092)
* save <1>:                              Definições para Entrada e Saída.
                                                             (line 1093)
* save <2>:                              Definições para Entrada e Saída.
                                                             (line 1094)
* save <3>:                              Definições para Entrada e Saída.
                                                             (line 1095)
* save <4>:                              Definições para Entrada e Saída.
                                                             (line 1096)
* save <5>:                              Definições para Entrada e Saída.
                                                             (line 1097)
* savedef:                               Definições para Entrada e Saída.
                                                             (line 1157)
* savefactors:                           Definições para Polinómios.
                                                             (line 1124)
* Saída anterior:                        Definições para Entrada e Saída.
                                                             (line   93)
* scalarmatrixp:                         Definições para Matrizes e Álgebra Linear.
                                                             (line  946)
* scalarp:                               Definições para Opções Diversas.
                                                             (line  337)
* scaled_bessel_i:                       Definições para Funções Especiais.
                                                             (line  142)
* scaled_bessel_i0:                      Definições para Funções Especiais.
                                                             (line  152)
* scaled_bessel_i1:                      Definições para Funções Especiais.
                                                             (line  156)
* scalefactors:                          Definições para Matrizes e Álgebra Linear.
                                                             (line  960)
* scanmap:                               Definições para Fluxo de Programa.
                                                             (line  417)
* scanmap <1>:                           Definições para Fluxo de Programa.
                                                             (line  418)
* schur2comp:                            Definições para Simetrias.
                                                             (line  191)
* sconc:                                 Definições para sequências de caracteres.
                                                             (line   52)
* sconcat:                               Definições para Entrada e Saída.
                                                             (line  321)
* scopy:                                 Definições para sequências de caracteres.
                                                             (line   63)
* scsimp:                                Definições para Simplificação.
                                                             (line  406)
* scurvature:                            Definições para ctensor.
                                                             (line  213)
* sdowncase:                             Definições para sequências de caracteres.
                                                             (line   67)
* sdowncase <1>:                         Definições para sequências de caracteres.
                                                             (line   68)
* sdowncase <2>:                         Definições para sequências de caracteres.
                                                             (line   69)
* sec:                                   Definições para Trigonometria.
                                                             (line   84)
* sech:                                  Definições para Trigonometria.
                                                             (line   87)
* second:                                Definições para Listas.
                                                             (line  257)
* sequal:                                Definições para sequências de caracteres.
                                                             (line   73)
* sequalignore:                          Definições para sequências de caracteres.
                                                             (line   77)
* setcheck:                              Definições para Depuração.
                                                             (line   13)
* setcheckbreak:                         Definições para Depuração.
                                                             (line   44)
* setdifference:                         Definições para Conjuntos.
                                                             (line  915)
* setelmx:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  977)
* setequalp:                             Definições para Conjuntos.
                                                             (line  940)
* setify:                                Definições para Conjuntos.
                                                             (line  956)
* setp:                                  Definições para Conjuntos.
                                                             (line  973)
* setunits:                              Definições para Units.
                                                             (line    6)
* setup_autoload:                        Definições para Opções Diversas.
                                                             (line  343)
* setval:                                Definições para Depuração.
                                                             (line   56)
* set_partitions:                        Definições para Conjuntos.
                                                             (line  994)
* set_partitions <1>:                    Definições para Conjuntos.
                                                             (line  995)
* set_plot_option:                       Definições para Criação de Gráficos.
                                                             (line  606)
* set_random_state:                      Operadores Geral.   (line  947)
* set_up_dot_simplifications:            Definições para Funções Afins.
                                                             (line   37)
* set_up_dot_simplifications <1>:        Definições para Funções Afins.
                                                             (line   38)
* seventh:                               Definições para Listas.
                                                             (line  261)
* sexplode:                              Definições para sequências de caracteres.
                                                             (line   80)
* sf:                                    Definições para o Pacote atensor.
                                                             (line   92)
* show:                                  Definições para Entrada e Saída.
                                                             (line 1168)
* showcomps:                             Definições para itensor.
                                                             (line  281)
* showratvars:                           Definições para Entrada e Saída.
                                                             (line 1174)
* showtime:                              Definições para Linha de Comandos.
                                                             (line  560)
* sign:                                  Operadores Geral.   (line 1068)
* signum:                                Operadores Geral.   (line 1076)
* similaritytransform:                   Definições para Matrizes e Álgebra Linear.
                                                             (line  984)
* simple_linear_regression:              Definições para stats.
                                                             (line  641)
* simple_linear_regression <1>:          Definições para stats.
                                                             (line  642)
* simplified_output:                     Definições para zeilberger.
                                                             (line  106)
* simplify_products:                     Definições para solve_rec.
                                                             (line   54)
* simplify_sum:                          Definições para solve_rec.
                                                             (line   62)
* simplode:                              Definições para sequências de caracteres.
                                                             (line   83)
* simplode <1>:                          Definições para sequências de caracteres.
                                                             (line   84)
* simpmetderiv:                          Definições para itensor.
                                                             (line  769)
* simpmetderiv <1>:                      Definições para itensor.
                                                             (line  770)
* simpsum:                               Definições para Simplificação.
                                                             (line  415)
* simtran:                               Definições para Matrizes e Álgebra Linear.
                                                             (line  985)
* sin:                                   Definições para Trigonometria.
                                                             (line   90)
* sinh:                                  Definições para Trigonometria.
                                                             (line   93)
* sinnpiflag:                            Definições para Séries de Fourier.
                                                             (line   50)
* sinsert:                               Definições para sequências de caracteres.
                                                             (line   98)
* sinvertcase:                           Definições para sequências de caracteres.
                                                             (line  111)
* sinvertcase <1>:                       Definições para sequências de caracteres.
                                                             (line  112)
* sinvertcase <2>:                       Definições para sequências de caracteres.
                                                             (line  113)
* sixth:                                 Definições para Listas.
                                                             (line  265)
* skewness:                              Definições para estatística descritiva.
                                                             (line  420)
* skewness <1>:                          Definições para estatística descritiva.
                                                             (line  421)
* skewness_bernoulli:                    Definições para distribuições discretas.
                                                             (line  244)
* skewness_beta:                         Definições para distribuições contínuas.
                                                             (line  820)
* skewness_binomial:                     Definições para distribuições discretas.
                                                             (line   51)
* skewness_chi2:                         Definições para distribuições contínuas.
                                                             (line  285)
* skewness_continuous_uniform:           Definições para distribuições contínuas.
                                                             (line  895)
* skewness_discrete_uniform:             Definições para distribuições discretas.
                                                             (line  397)
* skewness_exp:                          Definições para distribuições contínuas.
                                                             (line  558)
* skewness_f:                            Definições para distribuições contínuas.
                                                             (line  403)
* skewness_gamma:                        Definições para distribuições contínuas.
                                                             (line  733)
* skewness_geometric:                    Definições para distribuições discretas.
                                                             (line  322)
* skewness_gumbel:                       Definições para distribuições contínuas.
                                                             (line 1355)
* skewness_hypergeometric:               Definições para distribuições discretas.
                                                             (line  458)
* skewness_laplace:                      Definições para distribuições contínuas.
                                                             (line 1276)
* skewness_logistic:                     Definições para distribuições contínuas.
                                                             (line  949)
* skewness_lognormal:                    Definições para distribuições contínuas.
                                                             (line  668)
* skewness_negative_binomial:            Definições para distribuições discretas.
                                                             (line  548)
* skewness_normal:                       Definições para distribuições contínuas.
                                                             (line   47)
* skewness_pareto:                       Definições para distribuições contínuas.
                                                             (line  999)
* skewness_poisson:                      Definições para distribuições discretas.
                                                             (line  134)
* skewness_rayleigh:                     Definições para distribuições contínuas.
                                                             (line 1187)
* skewness_student_t:                    Definições para distribuições contínuas.
                                                             (line  131)
* skewness_weibull:                      Definições para distribuições contínuas.
                                                             (line 1050)
* slength:                               Definições para sequências de caracteres.
                                                             (line  123)
* smake:                                 Definições para sequências de caracteres.
                                                             (line  126)
* smismatch:                             Definições para sequências de caracteres.
                                                             (line  134)
* smismatch <1>:                         Definições para sequências de caracteres.
                                                             (line  135)
* solve:                                 Definições para Equações.
                                                             (line  737)
* solve <1>:                             Definições para Equações.
                                                             (line  738)
* solve <2>:                             Definições para Equações.
                                                             (line  739)
* solvedecomposes:                       Definições para Equações.
                                                             (line  884)
* solveexplicit:                         Definições para Equações.
                                                             (line  890)
* solvefactors:                          Definições para Equações.
                                                             (line  897)
* solvenullwarn:                         Definições para Equações.
                                                             (line  904)
* solveradcan:                           Definições para Equações.
                                                             (line  912)
* solvetrigwarn:                         Definições para Equações.
                                                             (line  919)
* solve_inconsistent_error:              Definições para Equações.
                                                             (line  926)
* solve_rec:                             Definições para solve_rec.
                                                             (line   90)
* solve_rec_rat:                         Definições para solve_rec.
                                                             (line  154)
* some:                                  Definições para Conjuntos.
                                                             (line 1045)
* some <1>:                              Definições para Conjuntos.
                                                             (line 1046)
* somrac:                                Definições para Simetrias.
                                                             (line  547)
* sort:                                  Operadores Geral.   (line 1085)
* sort <1>:                              Operadores Geral.   (line 1086)
* space:                                 Definições para caracteres.
                                                             (line   82)
* sparse:                                Definições para Matrizes e Álgebra Linear.
                                                             (line 1009)
* specint:                               Definições para Funções Especiais.
                                                             (line  331)
* spherical_bessel_j:                    Definições para polinómios ortogonais.
                                                             (line  169)
* spherical_bessel_y:                    Definições para polinómios ortogonais.
                                                             (line  175)
* spherical_hankel1:                     Definições para polinómios ortogonais.
                                                             (line  181)
* spherical_hankel2:                     Definições para polinómios ortogonais.
                                                             (line  186)
* spherical_harmonic:                    Definições para polinómios ortogonais.
                                                             (line  191)
* splice:                                Macros.             (line  162)
* split:                                 Definições para sequências de caracteres.
                                                             (line  146)
* split <1>:                             Definições para sequências de caracteres.
                                                             (line  147)
* split <2>:                             Definições para sequências de caracteres.
                                                             (line  148)
* sposition:                             Definições para sequências de caracteres.
                                                             (line  164)
* sprint:                                Definições para entrada e saída.
                                                             (line  131)
* sqfr:                                  Definições para Polinómios.
                                                             (line 1132)
* sqrt:                                  Operadores Geral.   (line 1130)
* sqrtdenest:                            Definições para simplification.
                                                             (line  451)
* sqrtdispflag:                          Operadores Geral.   (line 1139)
* sremove:                               Definições para sequências de caracteres.
                                                             (line  170)
* sremove <1>:                           Definições para sequências de caracteres.
                                                             (line  171)
* sremove <2>:                           Definições para sequências de caracteres.
                                                             (line  172)
* sremove <3>:                           Definições para sequências de caracteres.
                                                             (line  173)
* sremovefirst:                          Definições para sequências de caracteres.
                                                             (line  188)
* sremovefirst <1>:                      Definições para sequências de caracteres.
                                                             (line  189)
* sremovefirst <2>:                      Definições para sequências de caracteres.
                                                             (line  190)
* sremovefirst <3>:                      Definições para sequências de caracteres.
                                                             (line  191)
* sreverse:                              Definições para sequências de caracteres.
                                                             (line  195)
* ssearch:                               Definições para sequências de caracteres.
                                                             (line  199)
* ssearch <1>:                           Definições para sequências de caracteres.
                                                             (line  200)
* ssearch <2>:                           Definições para sequências de caracteres.
                                                             (line  201)
* ssearch <3>:                           Definições para sequências de caracteres.
                                                             (line  202)
* ssort:                                 Definições para sequências de caracteres.
                                                             (line  213)
* ssort <1>:                             Definições para sequências de caracteres.
                                                             (line  214)
* sstatus:                               Definições para Linha de Comandos.
                                                             (line  572)
* ssubst:                                Definições para sequências de caracteres.
                                                             (line  228)
* ssubst <1>:                            Definições para sequências de caracteres.
                                                             (line  229)
* ssubst <2>:                            Definições para sequências de caracteres.
                                                             (line  230)
* ssubst <3>:                            Definições para sequências de caracteres.
                                                             (line  231)
* ssubstfirst:                           Definições para sequências de caracteres.
                                                             (line  248)
* ssubstfirst <1>:                       Definições para sequências de caracteres.
                                                             (line  249)
* ssubstfirst <2>:                       Definições para sequências de caracteres.
                                                             (line  250)
* ssubstfirst <3>:                       Definições para sequências de caracteres.
                                                             (line  252)
* staircase:                             Análise gráfica de sistemas dinâmicos discretos.
                                                             (line  121)
* stardisp:                              Definições para Entrada e Saída.
                                                             (line 1180)
* stats_numer:                           Definições para stats.
                                                             (line    6)
* status:                                Definições para Ambiente em Tempo de Execução.
                                                             (line   72)
* status <1>:                            Definições para Ambiente em Tempo de Execução.
                                                             (line   73)
* status <2>:                            Definições para Ambiente em Tempo de Execução.
                                                             (line   74)
* std:                                   Definições para estatística descritiva.
                                                             (line   78)
* std <1>:                               Definições para estatística descritiva.
                                                             (line   79)
* std1:                                  Definições para estatística descritiva.
                                                             (line   96)
* std1 <1>:                              Definições para estatística descritiva.
                                                             (line   97)
* std_bernoulli:                         Definições para distribuições discretas.
                                                             (line  229)
* std_beta:                              Definições para distribuições contínuas.
                                                             (line  815)
* std_binomial:                          Definições para distribuições discretas.
                                                             (line   46)
* std_chi2:                              Definições para distribuições contínuas.
                                                             (line  268)
* std_continuous_uniform:                Definições para distribuições contínuas.
                                                             (line  890)
* std_discrete_uniform:                  Definições para distribuições discretas.
                                                             (line  392)
* std_exp:                               Definições para distribuições contínuas.
                                                             (line  539)
* std_f:                                 Definições para distribuições contínuas.
                                                             (line  398)
* std_gamma:                             Definições para distribuições contínuas.
                                                             (line  728)
* std_geometric:                         Definições para distribuições discretas.
                                                             (line  317)
* std_gumbel:                            Definições para distribuições contínuas.
                                                             (line 1350)
* std_hypergeometric:                    Definições para distribuições discretas.
                                                             (line  452)
* std_laplace:                           Definições para distribuições contínuas.
                                                             (line 1271)
* std_logistic:                          Definições para distribuições contínuas.
                                                             (line  944)
* std_lognormal:                         Definições para distribuições contínuas.
                                                             (line  663)
* std_negative_binomial:                 Definições para distribuições discretas.
                                                             (line  543)
* std_normal:                            Definições para distribuições contínuas.
                                                             (line   42)
* std_pareto:                            Definições para distribuições contínuas.
                                                             (line  994)
* std_poisson:                           Definições para distribuições discretas.
                                                             (line  129)
* std_rayleigh:                          Definições para distribuições contínuas.
                                                             (line 1166)
* std_student_t:                         Definições para distribuições contínuas.
                                                             (line  126)
* std_weibull:                           Definições para distribuições contínuas.
                                                             (line 1045)
* stirling:                              Definições para stirling.
                                                             (line    6)
* stirling1:                             Definições para Conjuntos.
                                                             (line 1116)
* stirling2:                             Definições para Conjuntos.
                                                             (line 1171)
* strim:                                 Definições para sequências de caracteres.
                                                             (line  257)
* striml:                                Definições para sequências de caracteres.
                                                             (line  269)
* strimr:                                Definições para sequências de caracteres.
                                                             (line  273)
* string:                                Definições para Entrada e Saída.
                                                             (line 1186)
* stringdisp:                            Definições para Entrada e Saída.
                                                             (line 1193)
* stringout:                             Definições para Entrada e Saída.
                                                             (line 1215)
* stringout <1>:                         Definições para Entrada e Saída.
                                                             (line 1216)
* stringout <2>:                         Definições para Entrada e Saída.
                                                             (line 1217)
* stringout <3>:                         Definições para Entrada e Saída.
                                                             (line 1218)
* stringout <4>:                         Definições para Entrada e Saída.
                                                             (line 1219)
* stringp:                               Definições para sequências de caracteres.
                                                             (line   15)
* sublis:                                Operadores Geral.   (line 1145)
* sublist:                               Operadores Geral.   (line 1153)
* sublist_indices:                       Definições para Listas.
                                                             (line  269)
* sublis_apply_lambda:                   Operadores Geral.   (line 1164)
* submatrix:                             Definições para Matrizes e Álgebra Linear.
                                                             (line 1016)
* submatrix <1>:                         Definições para Matrizes e Álgebra Linear.
                                                             (line 1017)
* submatrix <2>:                         Definições para Matrizes e Álgebra Linear.
                                                             (line 1018)
* subsample:                             Definições para manipulação da dados.
                                                             (line   46)
* subsample <1>:                         Definições para manipulação da dados.
                                                             (line   47)
* subset:                                Definições para Conjuntos.
                                                             (line 1234)
* subsetp:                               Definições para Conjuntos.
                                                             (line 1254)
* subst:                                 Operadores Geral.   (line 1170)
* substinpart:                           Operadores Geral.   (line 1209)
* substpart:                             Operadores Geral.   (line 1265)
* substring:                             Definições para sequências de caracteres.
                                                             (line  277)
* substring <1>:                         Definições para sequências de caracteres.
                                                             (line  278)
* Subtração:                             Operadores Aritméticos.
                                                             (line    8)
* subvar:                                Definições para Arrays.
                                                             (line  432)
* subvarp:                               Operadores Geral.   (line 1290)
* sum:                                   Definições para Expressões.
                                                             (line 1359)
* sumcontract:                           Definições para Simplificação.
                                                             (line  424)
* sumexpand:                             Definições para Simplificação.
                                                             (line  436)
* summand_to_rec:                        Definições para solve_rec.
                                                             (line  185)
* summand_to_rec <1>:                    Definições para solve_rec.
                                                             (line  186)
* sumsplitfact:                          Definições para Simplificação.
                                                             (line  464)
* sunlisp:                               Definições para sequências de caracteres.
                                                             (line    6)
* supcase:                               Definições para sequências de caracteres.
                                                             (line  292)
* supcase <1>:                           Definições para sequências de caracteres.
                                                             (line  293)
* supcase <2>:                           Definições para sequências de caracteres.
                                                             (line  294)
* supcontext:                            Definições para Contextos.
                                                             (line  311)
* supcontext <1>:                        Definições para Contextos.
                                                             (line  312)
* symbolp:                               Operadores Geral.   (line 1294)
* symmdifference:                        Definições para Conjuntos.
                                                             (line 1268)
* symmetric:                             Definições para Simplificação.
                                                             (line  470)
* symmetricp:                            Definições para ctensor.
                                                             (line  813)
* system:                                Definições para Entrada e Saída.
                                                             (line 1430)
* tab:                                   Definições para caracteres.
                                                             (line   85)
* take_inference:                        Definições para inference_result.
                                                             (line   75)
* take_inference <1>:                    Definições para inference_result.
                                                             (line   76)
* take_inference <2>:                    Definições para inference_result.
                                                             (line   77)
* tan:                                   Definições para Trigonometria.
                                                             (line   96)
* tanh:                                  Definições para Trigonometria.
                                                             (line   99)
* taylor:                                Definições para Séries.
                                                             (line  354)
* taylor <1>:                            Definições para Séries.
                                                             (line  355)
* taylor <2>:                            Definições para Séries.
                                                             (line  356)
* taylor <3>:                            Definições para Séries.
                                                             (line  357)
* taylor <4>:                            Definições para Séries.
                                                             (line  359)
* taylordepth:                           Definições para Séries.
                                                             (line  512)
* taylorinfo:                            Definições para Séries.
                                                             (line  519)
* taylorp:                               Definições para Séries.
                                                             (line  544)
* taylor_logexpand:                      Definições para Séries.
                                                             (line  548)
* taylor_order_coefficients:             Definições para Séries.
                                                             (line  565)
* taylor_simplifier:                     Definições para Séries.
                                                             (line  574)
* taylor_truncate_polynomials:           Definições para Séries.
                                                             (line  578)
* taytorat:                              Definições para Séries.
                                                             (line  587)
* tcl_output:                            Definições para Entrada e Saída.
                                                             (line  957)
* tcl_output <1>:                        Definições para Entrada e Saída.
                                                             (line  958)
* tcl_output <2>:                        Definições para Entrada e Saída.
                                                             (line  959)
* tcontract:                             Definições para Simetrias.
                                                             (line  258)
* tcontract <1>:                         Definições para Simetrias.
                                                             (line  856)
* tellrat:                               Definições para Polinómios.
                                                             (line 1148)
* tellrat <1>:                           Definições para Polinómios.
                                                             (line 1149)
* tellsimp:                              Definições para Regras e Modelos.
                                                             (line  701)
* tellsimpafter:                         Definições para Regras e Modelos.
                                                             (line  761)
* tensorkill:                            Definições para ctensor.
                                                             (line 1247)
* tentex:                                Definições para itensor.
                                                             (line 1502)
* tenth:                                 Definições para Listas.
                                                             (line  291)
* testsuite_files:                       Definições para Detecção e Relato de Erros.
                                                             (line   34)
* test_mean:                             Definições para stats.
                                                             (line   14)
* test_mean <1>:                         Definições para stats.
                                                             (line   15)
* test_means_difference:                 Definições para stats.
                                                             (line  128)
* test_means_difference <1>:             Definições para stats.
                                                             (line  129)
* test_normality:                        Definições para stats.
                                                             (line  608)
* test_rank_sum:                         Definições para stats.
                                                             (line  535)
* test_rank_sum <1>:                     Definições para stats.
                                                             (line  536)
* test_sign:                             Definições para stats.
                                                             (line  396)
* test_sign <1>:                         Definições para stats.
                                                             (line  397)
* test_signed_rank:                      Definições para stats.
                                                             (line  452)
* test_signed_rank <1>:                  Definições para stats.
                                                             (line  453)
* test_variance:                         Definições para stats.
                                                             (line  249)
* test_variance <1>:                     Definições para stats.
                                                             (line  250)
* test_variance_ratio:                   Definições para stats.
                                                             (line  322)
* test_variance_ratio <1>:               Definições para stats.
                                                             (line  323)
* tex:                                   Definições para Entrada e Saída.
                                                             (line 1262)
* tex <1>:                               Definições para Entrada e Saída.
                                                             (line 1263)
* tex <2>:                               Definições para Entrada e Saída.
                                                             (line 1264)
* tex <3>:                               Definições para Entrada e Saída.
                                                             (line 1265)
* texput:                                Definições para Entrada e Saída.
                                                             (line 1315)
* texput <1>:                            Definições para Entrada e Saída.
                                                             (line 1316)
* texput <2>:                            Definições para Entrada e Saída.
                                                             (line 1317)
* texput <3>:                            Definições para Entrada e Saída.
                                                             (line 1318)
* third:                                 Definições para Listas.
                                                             (line  295)
* throw:                                 Definições para Fluxo de Programa.
                                                             (line  457)
* time:                                  Definições para Ambiente em Tempo de Execução.
                                                             (line   98)
* timedate:                              Definições para Ambiente em Tempo de Execução.
                                                             (line  109)
* timer:                                 Definições para Depuração.
                                                             (line   63)
* timer <1>:                             Definições para Depuração.
                                                             (line   64)
* timer_devalue:                         Definições para Depuração.
                                                             (line  104)
* timer_info:                            Definições para Depuração.
                                                             (line  116)
* timer_info <1>:                        Definições para Depuração.
                                                             (line  117)
* tldefint:                              Definições para Integração.
                                                             (line  469)
* tlimit:                                Definições para Limites.
                                                             (line   54)
* tlimit <1>:                            Definições para Limites.
                                                             (line   55)
* tlimit <2>:                            Definições para Limites.
                                                             (line   56)
* tlimswitch:                            Definições para Limites.
                                                             (line   59)
* todd_coxeter:                          Definições para Grupos.
                                                             (line    6)
* todd_coxeter <1>:                      Definições para Grupos.
                                                             (line    7)
* toeplitz:                              Definições para linearalgebra.
                                                             (line  599)
* toeplitz <1>:                          Definições para linearalgebra.
                                                             (line  600)
* tokens:                                Definições para sequências de caracteres.
                                                             (line  305)
* tokens <1>:                            Definições para sequências de caracteres.
                                                             (line  306)
* totaldisrep:                           Definições para Polinómios.
                                                             (line 1200)
* totalfourier:                          Definições para Séries de Fourier.
                                                             (line   74)
* totient:                               Definições para Teoria dos Números.
                                                             (line  406)
* to_lisp:                               Definições para Linha de Comandos.
                                                             (line  578)
* tpartpol:                              Definições para Simetrias.
                                                             (line  263)
* tpartpol <1>:                          Definições para Simetrias.
                                                             (line  866)
* tr:                                    Definições para ctensor.
                                                             (line 1227)
* trace:                                 Definições para Depuração.
                                                             (line  136)
* trace <1>:                             Definições para Depuração.
                                                             (line  137)
* tracematrix:                           Definições para simplification.
                                                             (line  176)
* trace_options:                         Definições para Depuração.
                                                             (line  162)
* trace_options <1>:                     Definições para Depuração.
                                                             (line  163)
* transcompile:                          Definições para Definição de Função.
                                                             (line  837)
* translate:                             Definições para Definição de Função.
                                                             (line  846)
* translate <1>:                         Definições para Definição de Função.
                                                             (line  847)
* translate <2>:                         Definições para Definição de Função.
                                                             (line  848)
* translate_file:                        Definições para Definição de Função.
                                                             (line  902)
* translate_file <1>:                    Definições para Definição de Função.
                                                             (line  903)
* transpose:                             Definições para Matrizes e Álgebra Linear.
                                                             (line 1022)
* transrun:                              Definições para Definição de Função.
                                                             (line  948)
* tree_reduce:                           Definições para Conjuntos.
                                                             (line 1298)
* tree_reduce <1>:                       Definições para Conjuntos.
                                                             (line 1299)
* treillis:                              Definições para Simetrias.
                                                             (line  465)
* treillis <1>:                          Definições para Simetrias.
                                                             (line  876)
* treinat:                               Definições para Simetrias.
                                                             (line  473)
* treinat <1>:                           Definições para Simetrias.
                                                             (line  884)
* triangularize:                         Definições para Matrizes e Álgebra Linear.
                                                             (line 1034)
* trigexpand:                            Definições para Trigonometria.
                                                             (line  102)
* trigexpandplus:                        Definições para Trigonometria.
                                                             (line  136)
* trigexpandtimes:                       Definições para Trigonometria.
                                                             (line  144)
* triginverses:                          Definições para Trigonometria.
                                                             (line  152)
* trigrat:                               Definições para Trigonometria.
                                                             (line  209)
* trigreduce:                            Definições para Trigonometria.
                                                             (line  167)
* trigreduce <1>:                        Definições para Trigonometria.
                                                             (line  168)
* trigsign:                              Definições para Trigonometria.
                                                             (line  192)
* trigsimp:                              Definições para Trigonometria.
                                                             (line  199)
* trivial_solutions:                     Definições para zeilberger.
                                                             (line  131)
* true:                                  Definições para Constantes.
                                                             (line   86)
* trunc:                                 Definições para Séries.
                                                             (line  592)
* tr_array_as_ref:                       Definições para Definição de Função.
                                                             (line  955)
* tr_bound_function_applyp:              Definições para Definição de Função.
                                                             (line  967)
* tr_file_tty_messagesp:                 Definições para Definição de Função.
                                                             (line  979)
* tr_float_can_branch_complex:           Definições para Definição de Função.
                                                             (line  988)
* tr_function_call_default:              Definições para Definição de Função.
                                                             (line 1003)
* tr_numer:                              Definições para Definição de Função.
                                                             (line 1017)
* tr_optimize_max_loop:                  Definições para Definição de Função.
                                                             (line 1023)
* tr_semicompile:                        Definições para Definição de Função.
                                                             (line 1031)
* tr_state_vars:                         Definições para Definição de Função.
                                                             (line 1038)
* tr_warnings_get:                       Definições para Definição de Função.
                                                             (line 1050)
* tr_warn_bad_function_calls:            Definições para Definição de Função.
                                                             (line 1054)
* tr_warn_fexpr:                         Definições para Definição de Função.
                                                             (line 1061)
* tr_warn_meval:                         Definições para Definição de Função.
                                                             (line 1068)
* tr_warn_mode:                          Definições para Definição de Função.
                                                             (line 1074)
* tr_warn_undeclared:                    Definições para Definição de Função.
                                                             (line 1080)
* tr_warn_undefined_variable:            Definições para Definição de Função.
                                                             (line 1086)
* ttyoff:                                Definições para Entrada e Saída.
                                                             (line 1450)
* ueivects:                              Definições para Matrizes e Álgebra Linear.
                                                             (line 1057)
* ufg:                                   Definições para ctensor.
                                                             (line 1155)
* uforget:                               Definições para Units.
                                                             (line  114)
* ug:                                    Definições para ctensor.
                                                             (line 1191)
* ultraspherical:                        Definições para polinómios ortogonais.
                                                             (line  204)
* undiff:                                Definições para itensor.
                                                             (line  638)
* Unidade imaginária:                    Definições para Constantes.
                                                             (line   12)
* union:                                 Definições para Conjuntos.
                                                             (line 1335)
* uniteigenvectors:                      Definições para Matrizes e Álgebra Linear.
                                                             (line 1056)
* unitvector:                            Definições para Matrizes e Álgebra Linear.
                                                             (line 1084)
* unit_step:                             Definições para polinómios ortogonais.
                                                             (line  196)
* unknown:                               Definições para Simplificação.
                                                             (line  477)
* unorder:                               Operadores Geral.   (line 1301)
* unsum:                                 Definições para Séries.
                                                             (line  608)
* untellrat:                             Definições para Polinómios.
                                                             (line 1210)
* untimer:                               Definições para Depuração.
                                                             (line   88)
* untimer <1>:                           Definições para Depuração.
                                                             (line   89)
* untrace:                               Definições para Depuração.
                                                             (line  218)
* untrace <1>:                           Definições para Depuração.
                                                             (line  219)
* uppercasep:                            Definições para caracteres.
                                                             (line   88)
* uric:                                  Definições para ctensor.
                                                             (line 1181)
* uricci:                                Definições para ctensor.
                                                             (line  203)
* uriem:                                 Definições para ctensor.
                                                             (line 1172)
* uriemann:                              Definições para ctensor.
                                                             (line  273)
* usersetunits:                          Definições para Units.
                                                             (line  215)
* use_fast_arrays:                       Definições para Arrays.
                                                             (line  456)
* uvect:                                 Definições para Matrizes e Álgebra Linear.
                                                             (line 1085)
* values:                                Definições para Linha de Comandos.
                                                             (line  582)
* vandermonde_matrix:                    Definições para linearalgebra.
                                                             (line  621)
* var:                                   Definições para estatística descritiva.
                                                             (line   32)
* var <1>:                               Definições para estatística descritiva.
                                                             (line   33)
* var1:                                  Definições para estatística descritiva.
                                                             (line   53)
* var1 <1>:                              Definições para estatística descritiva.
                                                             (line   54)
* var_bernoulli:                         Definições para distribuições discretas.
                                                             (line  214)
* var_beta:                              Definições para distribuições contínuas.
                                                             (line  810)
* var_binomial:                          Definições para distribuições discretas.
                                                             (line   41)
* var_chi2:                              Definições para distribuições contínuas.
                                                             (line  251)
* var_continuous_uniform:                Definições para distribuições contínuas.
                                                             (line  885)
* var_discrete_uniform:                  Definições para distribuições discretas.
                                                             (line  387)
* var_exp:                               Definições para distribuições contínuas.
                                                             (line  519)
* var_f:                                 Definições para distribuições contínuas.
                                                             (line  393)
* var_gamma:                             Definições para distribuições contínuas.
                                                             (line  723)
* var_geometric:                         Definições para distribuições discretas.
                                                             (line  312)
* var_gumbel:                            Definições para distribuições contínuas.
                                                             (line 1345)
* var_hypergeometric:                    Definições para distribuições discretas.
                                                             (line  446)
* var_laplace:                           Definições para distribuições contínuas.
                                                             (line 1266)
* var_logistic:                          Definições para distribuições contínuas.
                                                             (line  939)
* var_lognormal:                         Definições para distribuições contínuas.
                                                             (line  658)
* var_negative_binomial:                 Definições para distribuições discretas.
                                                             (line  538)
* var_normal:                            Definições para distribuições contínuas.
                                                             (line   37)
* var_pareto:                            Definições para distribuições contínuas.
                                                             (line  989)
* var_poisson:                           Definições para distribuições discretas.
                                                             (line  124)
* var_rayleigh:                          Definições para distribuições contínuas.
                                                             (line 1145)
* var_student_t:                         Definições para distribuições contínuas.
                                                             (line  116)
* var_weibull:                           Definições para distribuições contínuas.
                                                             (line 1040)
* vectorpotential:                       Operadores Geral.   (line 1324)
* vectorsimp:                            Definições para Matrizes e Álgebra Linear.
                                                             (line 1093)
* vect_cross:                            Definições para Matrizes e Álgebra Linear.
                                                             (line 1125)
* verbify:                               Definições para Expressões.
                                                             (line 1493)
* verbose:                               Definições para Séries.
                                                             (line  638)
* vers:                                  Definições para simplification.
                                                             (line  259)
* warnings:                              Definições para zeilberger.
                                                             (line  118)
* weyl:                                  Definições para ctensor.
                                                             (line 1195)
* weyl <1>:                              Definições para ctensor.
                                                             (line  287)
* while:                                 Definições para Fluxo de Programa.
                                                             (line  462)
* with_stdout:                           Definições para Entrada e Saída.
                                                             (line 1460)
* writefile:                             Definições para Entrada e Saída.
                                                             (line 1487)
* write_data:                            Definições para numericalio.
                                                             (line   63)
* write_data <1>:                        Definições para numericalio.
                                                             (line   64)
* wronskian:                             Definições para simplification.
                                                             (line  163)
* xreduce:                               Definições para Conjuntos.
                                                             (line 1361)
* xreduce <1>:                           Definições para Conjuntos.
                                                             (line 1362)
* xthru:                                 Operadores Geral.   (line 1331)
* Zeilberger:                            Definições para zeilberger.
                                                             (line   79)
* zerobern:                              Definições para Teoria dos Números.
                                                             (line  410)
* zeroequiv:                             Operadores Geral.   (line 1357)
* zerofor:                               Definições para linearalgebra.
                                                             (line  626)
* zerofor <1>:                           Definições para linearalgebra.
                                                             (line  627)
* zeromatrix:                            Definições para Matrizes e Álgebra Linear.
                                                             (line 1132)
* zeromatrixp:                           Definições para linearalgebra.
                                                             (line  641)
* zeta:                                  Definições para Teoria dos Números.
                                                             (line  416)
* zeta%pi:                               Definições para Teoria dos Números.
                                                             (line  430)

